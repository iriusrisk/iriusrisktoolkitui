<control ref="IOT2.4.8.11" name="The product only allows controlled user account access" platform="" cost="1" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;p&gt;The product only allows controlled user account access. Access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Product should not allow any unjustified anonymous or guest access in order to prevent potential theft or disclosure of sensitive information, therefore only controlled user account access should be permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product only allows controlled user account access and access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;</desc>
                    <implementations/>
                    <references>
                        <reference name="Top 10 2013-A7-Missing Function Level Access Control" url="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control"/>
                    </references>
                    <standards>
                        <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-1"/>
                        <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-2"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;p&gt;The best way to find out if an application has failed to properly restrict function level access is to verify every application function:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Does the UI show navigation to unauthorized functions?&lt;/li&gt; 
 &lt;li&gt;Are server side authentication or authorization checks missing?&lt;/li&gt; 
 &lt;li&gt;Are server side checks done that solely rely on information provided by the attacker?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Using a proxy, browse your application with a privileged role. Then revisit restricted pages using a less privileged role. If the server responses are alike, you're probably vulnerable. Some testing proxies directly support this type of analysis.&lt;/p&gt; 
&lt;p&gt;You can also check the access control implementation in the code. Try following a single privileged request through the code and verifying the authorization pattern. Then search the codebase to find where that pattern is not being followed.&lt;/p&gt; 
&lt;p&gt; Automated tools are unlikely to find these problems.&lt;/p&gt;</steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:42">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>