<control ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" platform="" cost="1" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;p&gt;All data and functionality at the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated at the client-side to improve the user experience, it is important these are enforced at the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented at the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored at the server-side, and only that which is explicitly required be duplicated at the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication at the client-side against a stored password. Decompilation of the binary (in this case flv file) or interception and modification of controls between the client and server could expose the password or allow unauthorised access to the authenticated application content. 
&lt;/div&gt;</desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
                        <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
                        <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
                        <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
                        <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
                        <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
                        <standard ref="4.9" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="5.5" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="4.9" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="5.5" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="4.9" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="5.5" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
                        <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated at the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Review sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:46">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>