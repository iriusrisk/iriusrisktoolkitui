<control ref='Hydras-AWS-Network-5.8' name='Ensure routing tables for VPC peering are "least access"' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        Once a VPC peering connection is established, routing tables must be updated to establish any
                        connections between the peered VPCs. These routes can be as specific as desired - even peering a
                        VPC to only a single host on the other side of the connection.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt; Rationale: &lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt; Remediation: &lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Remove and add route table entries to ensure that the least number of subnets or hosts as is
                        required to accomplish the purpose for peering are routable.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Via CLI:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your
                        routing policy (which grants more than desired &amp;quot;&amp;quot;least access&amp;quot;&amp;quot;),
                        delete the non compliant route:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block
                        &amp;lt;non_compliant_destination_CIDR&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a new compliant route:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block
                        &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='Configurations with Specific Routes' url='https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html' />
          </references>
          <standards>
            <standard ref='4.4' supportedStandardRef='CIS AWS Standard' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-04-01T07:51:15.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>