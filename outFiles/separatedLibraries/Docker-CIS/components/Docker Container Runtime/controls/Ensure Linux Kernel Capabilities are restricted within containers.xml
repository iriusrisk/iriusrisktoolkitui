<control ref='D5.3' name='Ensure Linux Kernel Capabilities are restricted within containers' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>By default, Docker starts containers with a restricted set of Linux Kernel Capabilities. This
                        means that any process may be granted the required capabilities instead of root access. Using
                        Linux Kernel Capabilities, the processes do not have to run as root for almost all the specific
                        areas where root privileges are usually needed.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Rationale:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Docker supports the addition and removal of capabilities, allowing the use of a non-default
                        profile. This may make Docker more secure through capability removal, or less secure through the
                        addition of capabilities. It is thus recommended to remove all capabilities except those
                        explicitly required for your container process. For example, capabilities such as below are
                        usually not needed for container process: NET_ADMIN SYS_ADMIN SYS_MODULE&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Execute the below command to add needed capabilities:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        $&amp;gt; docker run --cap-add={&amp;quot;Capability 1&amp;quot;,&amp;quot;Capability 2&amp;quot;}&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example,&amp;nbsp;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        docker run --interactive --tty --cap-add={&amp;quot;NET_ADMIN&amp;quot;,&amp;quot;SYS_ADMIN&amp;quot;}
                        centos:latest /bin/bash&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;Execute the below command to drop unneeded capabilities:&amp;nbsp;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        $&amp;gt; docker run --cap-drop={&amp;quot;Capability 1&amp;quot;,&amp;quot;Capability 2&amp;quot;}&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        For example,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        docker run --interactive --tty --cap-drop={&amp;quot;SETUID&amp;quot;,&amp;quot;SETGID&amp;quot;}
                        centos:latest /bin/bash&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        Alternatively, You may choose to drop all capabilities and add only the needed ones:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        $&amp;gt; docker run --cap-drop=all --cap-add={&amp;quot;Capability 1&amp;quot;,&amp;quot;Capability
                        2&amp;quot;}&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        For example,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        docker run --interactive --tty --cap-drop=all --cap-add= &amp;quot;NET_ADMIN&amp;quot;,&amp;quot;SYS_ADMIN&amp;quot;}
                        centos:latest /bin/bash&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;b&gt;Impact:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Based on what Linux Kernel Capabilities were added or dropped, restrictions within the container
                        would apply.
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='Docker docs: Linux kernel capabilities' url='https://docs.docker.com/engine/security/security/#linux-kernel-capabilities' />
            <reference name='Docker linux: capabilities' url='http://man7.org/linux/man-pages/man7/capabilities.7.html' />
            <reference name='Docker oreily: Docker security' url='http://www.oreilly.com/webops-perf/free/files/docker-security.pdf' />
          </references>
          <standards>
            <standard ref='5.3' supportedStandardRef='Level 1 - Docker' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;blockquote&gt;
                            docker ps --quiet --all | xargs docker inspect --format '{{ .Id }}: CapAdd={{
                            .HostConfig.CapAdd }} CapDrop={{ .HostConfig.CapDrop }}'&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            Verify that the added and dropped Linux Kernel Capabilities are in line with the ones needed
                            for container process for each container instance.
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-08-02T10:21:32.718'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>