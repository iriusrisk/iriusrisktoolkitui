<control ref='D5.13' name='Ensure incoming container traffic is binded to a specific host interface' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>By default, Docker containers can make connections to the outside world, but the outside world
                        cannot connect to containers. Each outgoing connection will appear to originate from one of the
                        host machine's own IP addresses. Only allow container services to be contacted through a
                        specific external interface on the host machine.&amp;nbsp;
                        &lt;div&gt;
                        &lt;b&gt;&lt;br /&gt;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Rationale:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        If you have multiple network interfaces on your host machine, the container can accept
                        connections on the exposed ports on any network interface. This might not be desired and may not
                        be secured. Many times a particular interface is exposed externally and services such as
                        intrusion detection, intrusion prevention, firewall, load balancing, etc. are run on those
                        interfaces to screen incoming public traffic.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Hence, you should not accept incoming connections on any interface. You should only allow
                        incoming connections from a particular external interface.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Bind the container port to a specific host interface on the desired host port. For example,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        docker run --detach --publish 10.2.3.4:49153:80 nginx&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        In the example above, the container port 80 is bound to the host port on 49153 and would accept
                        incoming connection only from 10.2.3.4 external interface. Impact: None.
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='Docker docs: Networking' url='https://docs.docker.com/engine/userguide/networking/' />
          </references>
          <standards>
            <standard ref='5.13' supportedStandardRef='Level 1 - Docker' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>List all the running instances of containers and their port mapping by executing the
                            below command:&amp;nbsp;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            docker ps --quiet | xargs docker inspect --format '{{ .Id }}: Ports={{
                            .NetworkSettings.Ports }}'&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            Review the list and ensure that the exposed container ports are tied to a particular
                            interface and not to the wildcard IP address - 0.0.0.0. For example, if the above command
                            returns as below, then this is non-compliant and the container can accept connections on any
                            host interface on the specified port 49153.&amp;nbsp;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Ports=map[443/tcp: 80/tcp:[map[HostPort:49153 HostIp:0.0.0.0]]]&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            However, if the exposed port is tied to a particular interface on the host as below, then
                            this recommendation is configured as desired and is compliant.&amp;nbsp;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Ports=map[443/tcp: 80/tcp:[map[HostIp:10.2.3.4 HostPort:49153]]]
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-08-02T10:21:32.718'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>