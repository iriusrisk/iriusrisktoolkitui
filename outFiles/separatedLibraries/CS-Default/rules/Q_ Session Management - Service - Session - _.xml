<rule name="Q: Session Management - Service - Session - *" module="component" generatedByGui="true">
            <condition name="Question Group exists" type="drools-without-variable-type" field="id" value="server.session.management">
                <pattern name="Question group exists" pattern='$group : QuestionGroup(id == "${value}") @Watch(!*);'/>
            </condition>
            <action project="" value="server.session.building.no_::_An existing session management system will be used._::_This will require absolutely no configuration or code changes, but will rely entirely on an existing session management system" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <action project="" value="server.session.building.yes_::_A new session management system will be built as part of this application_::_This will involve configuring the frameworks session management features, and/or writing code to determine when a session is initiated and when it is terminated." name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <action project="" value="stateless_::_No session will be maintained_::_Each request is independently authenticated" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <content></content>
        </rule>
