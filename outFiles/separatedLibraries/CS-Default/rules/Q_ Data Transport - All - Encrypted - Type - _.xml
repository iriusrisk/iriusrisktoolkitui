<rule name="Q: Data Transport - All - Encrypted - Type - *" module="component" generatedByGui="true">
            <condition name="Question Group exists" type="drools-without-variable-type" field="id" value="encryptionImplementation">
                <pattern name="Question group exists" pattern='$group : QuestionGroup(id == "${value}") @Watch(!*);'/>
            </condition>
            <action project="" value="bespokeCrypto_::_Bespoke cryptographic functions_::_" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <action project="" value="bespokeImplementationOfStandardCrypto_::_Bespoke implementation of public cryptographic functions_::_" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <action project="" value="cryptolibraries_::_Using publicly available cryptographic libraries (not FIPS compliant)._::_" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <action project="" value="fipsCryptolibraries_::_Using FIPS 140-2 compliant cryptographic libraries_::_" name="Insert Question" type="drools-without-variable-type">
                <pattern name="Action of insert question" pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));'/>
            </action>
            <content></content>
        </rule>
