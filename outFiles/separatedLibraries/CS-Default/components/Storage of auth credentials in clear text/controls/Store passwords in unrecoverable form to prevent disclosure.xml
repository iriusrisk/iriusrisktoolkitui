<control ref="CWE-256" name="Store passwords in unrecoverable form to prevent disclosure" platform="" cost="1" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;p&gt;To protect users passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the passwords themselves.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Do not store passwords themselves in the data store for verification at login.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in ‘salt’ value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Alternatively, use a strong hash function like &lt;span class="caps"&gt;SHA&lt;/span&gt;-384 together with a unique ‘salt’ value for every account. Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
                        <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
                        <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
                        <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
                        <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
                        <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
                        <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
                        <standard ref="2.13" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="2.13" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>
&lt;ul&gt; 
 &lt;li&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Best practice dictates the system should match a salted strong hash (SHA256 or greater and a unique hash for each account) to that stored at the point the password was set.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For example, it is recommended that a system salt of 32 bits or more, a keyed &lt;span class="caps"&gt;HMAC&lt;/span&gt; hash using &lt;span class="caps"&gt;SHA&lt;/span&gt;-2 or &lt;span class="caps"&gt;SHA&lt;/span&gt;-3, and the stretching algorithm PBKDF2 with at least 10,000 iterations, is used.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Confirm the stored credential is not a clear-text password&lt;/li&gt; 
 &lt;li&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents use of rainbow tables, or of identifying password collisions among users.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Consider use of an algorithm with a configurable work factor, set to a high value to inhibit attack.&lt;/li&gt; 
&lt;/ul&gt; </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>