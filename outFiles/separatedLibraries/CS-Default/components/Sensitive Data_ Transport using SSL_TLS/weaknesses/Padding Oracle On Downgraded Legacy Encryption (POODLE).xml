<weakness ref="CWE-327-POODLE" name="Padding Oracle On Downgraded Legacy Encryption (POODLE)" state="0" impact="100">
                    <test expiryDate="" expiryPeriod="0">
                        <steps></steps>
                        <notes></notes>
                        <references>
                            <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
                            <reference name="Poodle paper" url="https://www.openssl.org/~bodo/ssl-poodle.pdf"/>
                            <reference name="Poodle paper" url="https://www.kb.cert.org/vuls/id/577193"/>
                        </references>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:18.328000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                    <desc>SSL 3.0 [RFC6101] is an obsolete and insecure protocol. While for most practical purposes it
                        has been replaced by its successors TLS 1.0 [RFC2246], TLS 1.1 [RFC4346],and TLS 1.2 [RFC5246],
                        many TLS implementations remain backwards&amp;shy; compatible withSSL 3.0 to interoperate with
                        legacy systems in the interest of a smooth user experience. The protocol handshake provides for
                        authenticated version negotiation, so normally the latest protocol version common to the client
                        and the server will be used.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        However, even if a client and server both support a version of TLS, the security level offered by
                        SSL 3.0 is still relevant since many clients implement a protocol downgrade to work around
                        server&amp;shy;side interoperability bugs.
                        &lt;/div&gt;
                    </desc>
                </weakness>