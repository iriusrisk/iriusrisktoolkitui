<control ref="ASVS-2014-3.6" name="Session ID's should be transmitted securely" platform="" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;div&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        The session token value issued after users have successfully identified and authenticated
                        themselves is of equivalent value to the secrets the user presents to login, and must be
                        protected accordingly. Data passed in the URL (address bar) between client and server is likely
                        to be exposed in logs on the server, or intermediate devices (such as proxies or other network
                        devices), or in local browser logs/history. A common mistake is, for example, to pass a
                        SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk
                        of exposure of sensitive data, it should only be sent in the body of an HTTP message (for
                        example a POST request), or in the HTTP headers (either standard headers such as the Cookie
                        values, or a custom X- header).
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value
                        'GET' parameter.&lt;/li&gt;
                        &lt;li&gt;Specifically, never the session ID token in the URL or over unencrypted transport.&lt;/li&gt;
                        &lt;li&gt;Pass data only in appropriately protected fields in the body or headers, for example:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;A session Cookie (e.g. JSESSIONID, ASP.NET_SessionID)&lt;/li&gt;
                        &lt;li&gt;A POST parameter (e.g. a token in the HTTP request body, or JSON parameter)&lt;/li&gt;
                        &lt;li&gt;A standard or bespoke HTTP header (Authorization: X-Session header)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                    </desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
                        <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
                        <standard ref="3.6" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="3.6" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="3.6" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Using a browser, authenticate to the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;For every authenticated request, check that the session ID is never part of the
                            URL and is only sent as an HTTP header (i.e. a cookie).&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:20.301000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>