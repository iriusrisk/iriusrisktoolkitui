<control ref="AUTH-ENUM-ERR-RECOV" name="Ensure application errors do not reveal user accounts" platform="" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;div&gt;
                        Error messages can reveal information of use to an attacker. Explicit errors from the reset or
                        recovery process stating accounts are valid or not, or whether then are locked out are useful to
                        an attacker in enumerating usernames for subsequent attack. Even small variations in errors
                        returned to the user can be used to infer how the application operates, or enforces security
                        controls.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To prevent a malicious user using error conditions to determine valid accounts:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Trap and log all known error conditions at the server-side&lt;/li&gt;
                        &lt;li&gt;Create a generic trap for unexpected errors&lt;/li&gt;
                        &lt;li&gt;The response to the password recovery feature should be the same regardless of whether
                        the username, ID or email exists. For example, a message such as 'An email with further details
                        about the recovery process has been sent; if you do not receive an email, please contact
                        support' could be sent to prevent enumeration&lt;/li&gt;
                        &lt;li&gt;Ensure the error message returned to the user is generic, or contains only an
                        obfuscated reference that can be correlated with the logged errors at the server-side. &amp;nbsp;In
                        the case of applications delivered over HTTP, the HTTP header should also be generic to prevent
                        enumeration (e.g. all error pages should produce a consistent HTTP 500 error)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
                        <standard ref="2.18" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="2.18" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="2.18" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Try to recover the password for an existing account.&lt;/li&gt;
                            &lt;li&gt;And do the same process for a non existing account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Compare the entire HTTP responses for the two requests as well as the average
                            response time. Verify that there is no consistent way to identify existing accounts.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:17.272000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>