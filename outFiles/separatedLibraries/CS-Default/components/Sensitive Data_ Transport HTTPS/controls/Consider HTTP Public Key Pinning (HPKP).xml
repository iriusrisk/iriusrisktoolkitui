<control ref="CWE-295" name="Consider HTTP Public Key Pinning (HPKP)" platform="" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;div&gt;
                        HPKP is a Trust on First Use (TOFU) technique. The first time a web server tells a client via a
                        special HTTP header which public keys belong to it, the client stores this information for a
                        given period of time. When the client visits the server again, it expects at least one
                        certificate in the certificate chain to contain a public key whose fingerprint is already known
                        via HPKP. If the server delivers an unknown public key, the client should present a warning to
                        the user.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Verify that TLS certificate public key pinning (HPKP) is implemented with production
                        and backup public keys. For more information, please see the references below.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;To ensure the authenticity of a server's public key used in TLS sessions, this public
                        key is wrapped into a X.509 certificate which is usually signed by a certificate authority (CA).
                        Web clients such as browsers trust a lot of these CAs, which can all create certificates for
                        arbitrary domain names. If an attacker is able to compromise a single CA, they can perform MITM
                        attacks on various TLS connections. HPKP can circumvent this threat for the HTTPS protocol by
                        telling the client which public key belongs to a certain web server.&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        There are risks associated with HPKP, in particular HPKP Suicide and Ransom.
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure certificate recovery processes are in place.&lt;/li&gt;
                        &lt;li&gt;Review expiration and revocation criteria for the certificates.&lt;/li&gt;
                        &lt;li&gt;Consider the risks associated with domain hijack and HPKP ransom.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
                    <implementations/>
                    <references>
                        <reference name="HPKP Issues" url="https://scotthelme.co.uk/im-giving-up-on-hpkp/"/>
                        <reference name="OWASP Secure Headers" url="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project"/>
                    </references>
                    <standards>
                        <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="SC-12" supportedStandardRef="NIST 800-53"/>
                        <standard ref="10.10" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="10.10" supportedStandardRef="OWASP-ASVS-Level-3"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Identify endpoints that are served over HTTPS. &lt;br /&gt;&lt;/li&gt;
                            &lt;li&gt;If the risk policy mandates HPKP configuration, check that a request to the
                            service return the following headers (with the appropriate fields) on the HTTP response:
                            &lt;br /&gt;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
                            &lt;p&gt;Public-Key-Pins: pin-sha256=&amp;quot;base64==&amp;quot;; max-age=expireTime [;
                            includeSubDomains][; report-uri=&amp;quot;reportURI&amp;quot;]&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
                        </steps>
                        <notes></notes>
                        <references>
                            <reference name="[MDN] - HTTP Public Key Pinning (HPKP)" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning"/>
                        </references>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2017-03-22T10:18:34.396000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>