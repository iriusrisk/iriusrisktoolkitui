<weakness ref="CWE-388" name="An error condition is not properly handled (Error Handling)" state="0" impact="100">
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Test the Error Management strategy and implementation of the application.&lt;/li&gt;
                            &lt;li&gt;Try to force the application to behave unexpectedly.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Consider fuzzing and pattern search as a testing strategy.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2017-06-13T15:23:17.773000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                    <desc>&lt;div&gt;
                        Errors and error handling represent a class of API. Errors related to error handling are so
                        common that they deserve a special kingdom of their own. As with API Abuse, there are two ways
                        to introduce an error-related security vulnerability: the most common one is handling errors
                        poorly (or not at all). The second is producing errors that either give out too much information
                        (to possible attackers) or are difficult to handle
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
                </weakness>