<weakness ref="CWE-361" name="Improper management of Time and state" state="0" impact="100">
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Identify resources that are candidates to be accessed/used concurrently.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check for unexpected behavior when testing simultaneous access to those.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2017-06-13T15:20:27.016000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                    <desc>&lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This weakness is related to the&amp;nbsp;improper&amp;nbsp;management of time and state in an
                        environment that supports simultaneous or near-simultaneous computation by multiple systems,
                        processes, or threads.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;p&gt;Distributed computation is about time and state. That is, in order for more than one
                        component to communicate, state must be shared, and all that takes time. Most programmers
                        anthropomorphize their work. They think about one thread of control carrying out the entire
                        program in the same way they would if they had to do the job themselves. Modern computers,
                        however, switch between tasks very quickly, and in multi-core, multi-CPU, or distributed
                        systems, two events may take place at exactly the same time. Defects rush to fill the gap
                        between the programmer's model of how a program executes and what happens in reality. These
                        defects are related to&amp;nbsp;unexpected&amp;nbsp;interactions between threads, processes,
                        time, and information. These interactions happen through shared state: semaphores, variables,
                        the file system, and, basically, anything that can store information.&lt;/p&gt;
                        &lt;/div&gt;
                    </desc>
                </weakness>