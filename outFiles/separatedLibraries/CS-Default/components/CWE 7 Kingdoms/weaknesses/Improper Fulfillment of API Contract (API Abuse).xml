<weakness ref="CWE-227" name="Improper Fulfillment of API Contract (API Abuse)" state="0" impact="100">
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the areas in which the application uses the API.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check if the sequence of calls follow the API specs.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2017-06-13T15:22:14.411000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                    <desc>&lt;div&gt;
                        The software uses an API in a manner contrary to its intended use.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;p&gt;An API is a contract between a caller and a callee. The most common forms of API misuse
                        occurs when the caller does not honor its end of this contract. For example, if a program does
                        not call chdir() after calling chroot(), it violates the contract that specifies how to change
                        the active root directory in a secure fashion. Another good example of library abuse is
                        expecting the callee to return trustworthy DNS information to the caller. In this case, the
                        caller misuses the callee API by making certain assumptions about its&amp;nbsp;behavior&amp;nbsp;(that
                        the return value can be used for&amp;nbsp;authentication&amp;nbsp;purposes). One can also
                        violate the caller-callee contract from the other side. For example, if a coder subclasses
                        SecureRandom and returns a non-random value, the contract is violated.&lt;/p&gt;
                        &lt;/div&gt;
                    </desc>
                </weakness>