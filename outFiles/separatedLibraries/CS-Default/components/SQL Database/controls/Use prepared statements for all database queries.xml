<control ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" platform=".NET C#" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;div&gt;
                        Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side
                        data which is used in dynamic SQL queries at the server-side in an unsafe manner. For example,
                        creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable
                        code
                        &lt;b&gt;,&lt;/b&gt;&amp;nbsp;for example an attacker may append an 'OR' statement through the
                        provided customerName parameter passed to the following code to bypass the checks and return
                        additional data from the database:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;pre&gt;

                        &lt;ul&gt;

                        &lt;li&gt;String query = &amp;quot;SELECT user FROM users WHERE name = '&amp;quot; &lt;/li&gt;


                        &lt;/ul&gt; + request.getParameter(&amp;quot;customerName&amp;quot;)+&amp;quot;'&amp;quot;;&lt;/pre&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Using prepared statements with carefully controlled and validated input conditions mitigates
                        against SQLi and related attacks.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Database queries should always be made using prepared statements or parameterized
                        queries.&lt;/li&gt;
                        &lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input,
                        and made using prepared statements to mitigate the threat.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
                    <implementations>
                        <implementation platform="C#">
                            <desc>
                                ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g
                            </desc>
                        </implementation>
                        <implementation platform="Java">
                            <desc>
                                ClN0cmluZyBzZWxlY3RTdGF0ZW1lbnQgPSAiU0VMRUNUICogRlJPTSBVc2VyIFdIRVJFIHVzZXJJZCA9ID8gIjsKUHJlcGFyZWRTdGF0ZW1lbnQgcHJlcFN0bXQgPSBjb24ucHJlcGFyZVN0YXRlbWVudChzZWxlY3RTdGF0ZW1lbnQpOwpwcmVwU3RtdC5zZXRTdHJpbmcoMSwgdXNlcklkKTsKUmVzdWx0U2V0IHJzID0gcHJlcFN0bXQuZXhlY3V0ZVF1ZXJ5KCk7Cg==
                            </desc>
                        </implementation>
                    </implementations>
                    <references/>
                    <standards>
                        <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
                        <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
                        <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
                        <standard ref="5.10" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="5.10" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="5.10" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;div&gt;
                            &lt;div&gt;
                            For inputs receiving data that is subsequently added to or used in an SQL query:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;
                            &lt;li&gt;Data should used in parameterized SQL queries rather than dynamically generated
                            queries.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            To test data validation:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Review the code processing tainted user input to SQL queries and confirm the data
                            is used only in pre-prepared parameterized SQL queries.&lt;/li&gt;
                            &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it
                            (invalid characters, lengths, ranges etc.)&lt;/li&gt;
                            &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;
                            &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:13.157000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>