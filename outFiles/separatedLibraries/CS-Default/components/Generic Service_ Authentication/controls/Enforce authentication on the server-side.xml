<control ref="CWE-603" name="Enforce authentication on the server-side" platform="" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;div&gt;
  All data at the client-side must be considered tainted. &amp;nbsp;As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated at the server-side to prevent their subversion. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Ensure credentials are passed securely from the client-to server.&lt;/li&gt; 
  &lt;li&gt;The server should compare the credentials with those stored at the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt; 
  &lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt; 
  &lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt; 
  &lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. &amp;nbsp;Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
                        <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
                        <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
                        <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
                        <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
                        <standard ref="2.4" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="4.16" supportedStandardRef="OWASP-ASVS-Level-1"/>
                        <standard ref="11.3" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="2.4" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="4.16" supportedStandardRef="OWASP-ASVS-Level-2"/>
                        <standard ref="11.3" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="2.4" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="4.16" supportedStandardRef="OWASP-ASVS-Level-3"/>
                        <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ol&gt;
                            &lt;li&gt;Identify which functions the service provides which are authenticated or
                            performing a privileged action.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;
                            &lt;/ol&gt;A clear example of what you should look for would be an API endpoint which allows
                            a client to update a resource, you should check that call checks the authentication on the
                            server side (by checking the session having validated the authentication credentials
                            previously).&amp;nbsp;
                            &lt;br /&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-11-28T13:02:30.394000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>