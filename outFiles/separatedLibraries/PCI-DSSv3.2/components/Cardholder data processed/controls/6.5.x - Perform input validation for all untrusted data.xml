<control ref="PCI-R6-6.5.x" name="6.5.x - Perform input validation for all untrusted data" platform="" cost="0" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>&lt;p&gt;Injection flaws, particularly SQL injection, are a commonly used method for
                        compromising
                        applications. Injection occurs when user-supplied data is sent to an interpreter as part of a
                        command or
                        query. The attacker's hostile data tricks the interpreter into executing unintended commands or
                        changing
                        data, and allows the attacker to attack components inside the network through the application,
                        to initiate
                        attacks such as buffer overflows, or to reveal both confidential information and server
                        application
                        functionality.&amp;nbsp;&lt;/p&gt;
                        &lt;p&gt;Information should be validated before being sent to the application-for example,
                        by
                        checking for
                        all alpha characters, mix of alpha and numeric characters, etc.&amp;nbsp;&lt;/p&gt;
                    </desc>
                    <implementations/>
                    <references/>
                    <standards>
                        <standard ref="6.5.1a" supportedStandardRef="PCI-DSS-v3.2"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;p&gt;6.5.a Examine software-development policies and procedures to verify that
                            up-to-date
                            training in secure coding techniques is required for developers at least annually, based on
                            industry best
                            practices and guidance. &lt;/p&gt;
                            &lt;p&gt;6.5.b Examine records of training to verify that software developers receive
                            up-to-date training
                            on secure coding techniques at least annually, including how to avoid common coding
                            vulnerabilities.&lt;/p&gt;
                            &lt;p&gt;6.5.c Verify that processes are in place to protect applications from, at a
                            minimum, the
                            following vulnerabilities:&amp;nbsp;&lt;/p&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-08-05T12:07:45.513000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>