<threat ref="CAPEC-459" name="An attacker exploits a weakness in order to generate a certificate signing request" state="Expose" source="MANUAL" owner="" library="">
                            <desc>An attacker exploits a weakness in the MD5 hash algorithm (weak collision resistance)
                                to generate a certificate signing request (CSR) that contains collision blocks in the
                                &amp;quot;to be signed&amp;quot; part. The attacker specially crafts two different, but
                                valid X.509 certificates that when hashed with the MD5 algorithm would yield the same
                                value. The attacker then sends the CSR for one of the certificates to the Certification
                                Authority which uses the MD5 hashing algorithm. That request is completely valid and the
                                Certificate Authority issues an X.509 certificate to the attacker which is signed with
                                its private key. An attacker then takes that signed blob and inserts it into another
                                X.509 certificate that the attacker generated.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Due to the MD5 collision, both certificates, though different, hash to the same value
                                and so the signed blob works just as well in the second certificate. The net effect is
                                that the attackers' second X.509 certificate, which the Certification Authority has
                                never seen, is now signed and validated by that Certification Authority. To make the
                                attack more interesting, the second certificate could be not just a regular certificate,
                                but rather itself a signing certificate. Thus the attacker is able to start their own
                                Certification Authority that is anchored in its root of trust in the legitimate
                                Certification Authority that has signed the attackers' first X.509 certificate. If the
                                original Certificate Authority was accepted by default by browsers, so will now the
                                Certificate Authority set up by the attacker and of course any certificates that it
                                signs. So the attacker is now able to generate any SSL certificates to impersonate any
                                web server, and the user's browser will not issue any warning to the victim. This can be
                                used to compromise HTTPS communications and other types of systems where PKI and X.509
                                certificates may be used (e.g., VPN, IPSec) -
                                &lt;/div&gt;
                            </desc>
                            <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
                            <references/>
                            <controls>
                                <control ref="MASVS-5.4" mitigation="100"/>
                            </controls>
                            <weaknesses>
                                <weakness ref="CWE-295">
                                    <controls>
                                        <control ref="MASVS-5.4" mitigation="100"/>
                                    </controls>
                                </weakness>
                            </weaknesses>
                        </threat>