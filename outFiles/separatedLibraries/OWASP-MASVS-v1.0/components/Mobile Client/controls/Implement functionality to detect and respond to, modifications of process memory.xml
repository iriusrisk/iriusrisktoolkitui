<control ref="MASVS-8.6" name="Implement functionality to detect and respond to, modifications of process memory" platform="" cost="1" risk="0" state="Recommended" owner="" library="" source="MANUAL">
                    <desc>Create functionality to detect &amp;quot;hostile&amp;quot; code in its memory and respond
                        accordingly. Controls in this category verify the integrity of the app's own memory space, with
                        the goal of protecting against memory patches applied during runtime. This includes unwanted
                        changes to binary code or bytecode, functions pointer tables, and important data structures, as
                        well as rogue code loaded into process memory.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;div&gt;
                        Integrity can be verified either by:&amp;nbsp;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Comparing the contents of memory, or a checksum over the contents, with known good
                        values.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Searching memory for signatures of unwanted modifications.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                    </desc>
                    <implementations/>
                    <references>
                        <reference name="OWASP MASVS - Android - Testing Memory Integrity Checks" url="https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x05j-Testing-Resiliency-Against-Reverse-Engineering.html#testing-memory-integrity-checks"/>
                        <reference name="OWASP MASVS - iOS - Testing Memory Integrity Checks" url="https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x06j-Testing-Resiliency-Against-Reverse-Engineering.html#testing-memory-integrity-checks"/>
                    </references>
                    <standards>
                        <standard ref="8.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
                        <standard ref="8.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
                    </standards>
                    <udts/>
                    <test expiryDate="" expiryPeriod="0">
                        <steps>&lt;ul&gt;
                            &lt;li&gt;Disable all file-based detection of reverse engineering tools.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Then inject code using Xposed, Frida and Substrate, and attempt to install native
                            hooks and Java method hooks.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the app detects the &amp;quot;hostile&amp;quot; code in its memory and
                            responds accordingly.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
                        <notes></notes>
                        <references/>
                        <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2016-08-02T10:21:32.718000">
                            <output></output>
                        </source>
                        <udts/>
                    </test>
                </control>