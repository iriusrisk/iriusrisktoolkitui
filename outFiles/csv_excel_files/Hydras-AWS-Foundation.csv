Risk Pattern id,Risk Pattern name,Use case name,Threat id,Threat name,Threat desc,Threat references,Weakness id,Weakness name,Weakness desc,Weakness references,Countermeasure id,Countermeasure name,Countermeasure desc,Countermeasure test steps,Countermeasure references
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,UNAUTHORIZED-CONNECTION,Attackers gain access to the systems through direct access,"Attackers gain a unathorized connection to the system through misconfigured ports or
security network configurations.",,AWS-NET-01,Unauthorised connection attempts are allowed on open ports,"Receiving unauthorized connections to open ports is most likely to be receiving an attack. To
avoid this, access to the network must be as restricted as possible, so that only the necessary
ports are open and the minimum inbound traffic is accepted.",,Hydras-AWS-Network-5.5,Use security groups to block ingress to all ports from 0.0.0.0/0,"Security groups are analagous to firewalls and therefore provide stateful filtering of
ingress/egress network traffic to AWS resources. It is recommeneded to limit inbound access to
ALL TCP or ALL ports to avoid undue server exposure.



<b>Remediation:</b>



-Login to the AWS Management Console (with VPC update).
-Select VPC from the services menu.
-Select Security Groups.
-For each security group, perform the following:&nbsp;

-Select the security group.
-Click the Inbound tab.
-Identify the rules to be removed.
-Click the x in the Remove column.
-Click Save.

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.&nbsp;
-Select VPC from the services menu.&nbsp;
-Select Security Groups.
-For each security group, perform the following:&nbsp;

-Select the security group.&nbsp;
-Click the Inbound tab.
-Ensure no rule exists that has a port range of 0-1024 of 0-65535 and has a source
of 0.0.0.0/0.",
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,UNAUTHORIZED-CONNECTION,Attackers gain access to the systems through direct access,"Attackers gain a unathorized connection to the system through misconfigured ports or
security network configurations.",,AWS-NET-01,Unauthorised connection attempts are allowed on open ports,"Receiving unauthorized connections to open ports is most likely to be receiving an attack. To
avoid this, access to the network must be as restricted as possible, so that only the necessary
ports are open and the minimum inbound traffic is accepted.",,Hydras-AWS-Network-5.6,Restrict all traffic with the default security group,"Security groups are analagous to firewalls and therefore provide stateful filtering of
ingress/egress network traffic to AWS resources. It is recommended to limit all traffic
(ingress/egress) on the default security group in order to force the use of least privilege via
custom created security groups.



<b>Remediation:</b>



-Identify AWS resources that exist within the default security group.
-Create a set of least privilege security groups for those resources.
-Place the resources in those security groups.
-Remove the resources noted in 1 from the default security group.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.
-Select VPC from the services menu.
-Select Security Groups.
-For each security group, perform the following:&nbsp;

-Select the default security group.
-Click the Inbound Rules tab.
-Ensure no rule exist.
-Click the Outbound Rules tab.&nbsp;
-Ensure no rules exist.",
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,UNAUTHORIZED-CONNECTION,Attackers gain access to the systems through direct access,"Attackers gain a unathorized connection to the system through misconfigured ports or
security network configurations.",,AWS-NET-02,Unauthorised connection attempts are allowed on port 22,"Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
avoid this, access to the network must be as restricted as possible, so that only the necessary
ports are open and the minimum inbound traffic is accepted.",,Hydras-AWS-Network-5.3,Use security groups to block ingress to port 22 from 0.0.0.0/0,"Security groups are analagous to firewalls and therefore provide stateful filtering of
ingress/egress network traffic to AWS resources. It is recommeneded to limit inbound access to
port 22 (SSH) to IP addresses that require this access to avoid undue exposure to risk.



<b>Remediation:</b>



-Login to the AWS Management Console (with VPC update)&nbsp;
-Select VPC from the services menu&nbsp;
-Select Security Groups&nbsp;
-For each security group, perform the following:&nbsp;

-Select the security group.
-Click the Inbound tab.
-Identify the rules to be removed.
-Click the x in the Remove column.
-Click Save.

 Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.&nbsp;
-Select VPC from the services menu.&nbsp;
-Select Security Groups.
-For each security group, perform the following:&nbsp;

-Select the security group.&nbsp;
-Click the Inbound tab.
-Ensure no rule exists that has a port range that includes port 22 and has a source
of 0.0.0.0/0.

NB: Note that if the port range includes 0-1024 or 0-65535 these also include
port 22",
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,UNAUTHORIZED-CONNECTION,Attackers gain access to the systems through direct access,"Attackers gain a unathorized connection to the system through misconfigured ports or
security network configurations.",,AWS-NET-03,Unauthorised connection attempts are allowed on port 3389,"Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
To avoid this, access to the network must be as restricted as possible, so that only the
necessary ports are open and the minimum inbound traffic is accepted.",,Hydras-AWS-Network-5.4,Use security groups to block ingress to port 3389 from 0.0.0.0/0,"Security groups are analagous to firewalls and therefore provide stateful filtering of
ingress/egress network traffic to AWS resources. It is recommeneded to limit inbound access to
port 3389 (RDP) to IP addresses that require this access to avoid undue exposure to risk.



<b>Remediation:</b>



-Login to the AWS Management Console (with VPC update).
-Select VPC from the services menu.
-Select Security Groups.
-For each security group, perform the following:

-Select the security group.
-Click the Inbound tab.
-Identify the rules to be removed.
-Click the x in the Remove column.
-Click Save&nbsp;

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.&nbsp;
-Select VPC from the services menu.&nbsp;
-Select Security Groups.&nbsp;
-For each security group, perform the following:&nbsp;

-Select the security group.&nbsp;
-Click the Inbound tab.
-Ensure no rule exists that has a port range that includes port 22 and has a source
of 0.0.0.0/0.

NB: Note that if the port range includes 0-1024 or 0-65535 these also include
port 3389",
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,NON-UPDATED-SYSTEMS-AWS,Attackers gain unauthorised access to data on EC2 instances,"Attackers cloud gain access to data on EC2 instances through the weaknesses
in non-updated systems.",,AWS-EC2-6.2,The instances are not patched,"The instances are not patched with the last updates for the correspondent Operative System
(OS), and the instances have got weaknesses which are solved in the last updates.",,Hydras-AWS-EC2-6.2,Maintain a patch policy and patch EC2 systems regularly ,"Patching instances ensures that packages within the Operating System (OS) are updated to the
latest version and/or have security fixes applied. It is recommended to patch EC2 instances
every 90 days (or immediately if security patches become available) to avoid undue exposure




<b>Remediation:</b>



-For linux instances ensure your OS is updated as per:
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-software.html&nbsp;
-For Windows instances ensure your OS is updated as per:
http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/windows-ami-version-history.html#update-windows-instance
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Ensure you have a documented patching policy.
-Ensure your systems have been patched at least every 90 days.",
HYDRAS-AWS-EC2,AWS EC2,Amazon Web Services,NON-UPDATED-SYSTEMS-AWS,Attackers gain unauthorised access to data on EC2 instances,"Attackers cloud gain access to data on EC2 instances through the weaknesses
in non-updated systems.",,AWS-NET-04,Unauthorised connection attempts are allowed on Azure resources,"Receiving unauthorized connections to Azure resources is most likely to be receiving an
attack. To avoid this, access to the network must be as restricted as possible using Network
Access Control Lists for blacklisting.",,Hydras-AWS-Network-5.7,Use Network Access Control Lists (NACLs) for blacklisting,"Network Access Control Lists (NACLs) act as packet filters across subnets, allowing or deny
traffic per pre-created rules. It is recommened to use NACLs as a method of blacklisting IP
addresses, denying either inbound or outbound access across your subnets.&nbsp;

&nbsp;


<b>Remediation:</b>



-Login to the AWS Management Console (with VPC update).
-Select VPC from the services menu.
-Select Network ACL's.
-For each Network ACL ID, perform the following:

-Select the Inbound Rules tab.
-Click edit.
-add a DENY rule that will restrict inbound access from a blacklisted IP address or
range to a designated port or IP range.

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.
-Select VPC from the services menu.
-Select Network ACLs.
-For each Network ACL ID, perform the following:&nbsp;



-Click the Inbound Rules tab.
-Ensure a rule exists the DENY's access from a blacklisted IP or range.
-Click the Outbound Rules tab.
-Ensure a rule exists the DENY's access to a blacklisted IP or range.",
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-295,Improper Certificate Validation,"The software does not validate, or incorrectly validates, a
certificate.",,aws-tier-1.12,Add SSL/TLS Certificate to App Tier ELB,"When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your
load balancer. The load balancer uses the certificate to terminate the connection and then
decrypt requests from clients before sending them to the back-end instances.



 The SSL\TLS protocol uses an X.509 certificate (SSL\TLS server certificate) to
authenticate both the client and the back-end application. An X.509 certificate is a digital
form of identification issued by a trusted certificate authority (CA) and contains
identification information, a validity period, a public key, a serial number, and the digital
signature of the issuer.



 You can create a certificate using a Third Party Certificate Authority, AWS
Certificate Manager or a self signed certificate like OpenSSL.



 Note: an SSL certificate configured on the ELB is not mandatory if you are
terminating SSL connections directly on the App Tier EC2 instances, and using a TCP listener on
the ELB (TCP pass-through)



 All the application traffic between the Web Tier instances and the App Tier ELB
nodes should be encrypted using an SSL\TLS certificate.


<b>Remediation:</b> Using the Amazon unified command line interface:

-Adding a HTTPS listener configured with a SSL\TLS certificate (the listener forwards
traffic to the backend instances on port 80, but this can be modified by editing
InstancePort=80): 

<blockquote>
aws elb create-load-balancer-listeners --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --listeners
Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;ssl_certificate_arn&gt;&lt;/span&gt;
</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;app\_tier\_elb&gt; with your App-tier ELB name)



-Note that if the ListenerDescriptions is empty, the ELB does not have a listener
configured with a SSL\TLS certificate, or a TCP listener (TCP pass-through):


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --query &quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName,
DNSName:DNSName, Scheme:Scheme,
ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null ||
Listener.Protocol == 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cl"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-295,Improper Certificate Validation,"The software does not validate, or incorrectly validates, a
certificate.",,aws-tier-1.9,Add SSL/TLS Certificate to Web Tier ELB,"When you use HTTPS for your front-end listener, you must deploy an SSL/TLS certificate on your
load balancer. The load balancer uses the certificate to terminate the connection and then
decrypt requests from clients before sending them to the back-end instances.






The TLS protocol uses an X.509 certificate (SSL/TLS server certificate) to authenticate both the
client and the back-end application. An X.509 certificate is a digital form of identification
issued by a trusted certificate authority (CA) and contains identification information, a
validity period, a public key, a serial number, and the digital signature of the issuer.






You can create a certificate using a Third Party Certificate Authority or AWS Certificate
Manager.






Note: an SSL certificate configured on the ELB is not mandatory if you are terminating SSL
connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP
pass-through)






All the application traffic between the clients and the Web Tier ELB nodes should be encrypted
using a SSL/TLS certificate.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Adding a HTTPS listener configured with a SSL/TLS certificate (the listener forwards
traffic to the backend instances on port 80, but this can be modified by editing
InstancePort=80):



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer-listeners --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --listeners
Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=&lt;em&gt;&lt;ssl_certificate_arn&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;web\_tier\_elb&gt; with your Web-tier ELB name)



-Note that if the ListenerDescriptions element is empty, the ELB does not have a
listener configured with a SSL/TLS certificate, or a TCP listener (TCP pass-through):


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --query &quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName,
DNSName:DNSName, Scheme:Scheme,
ListenerDescriptions:ListenerDescriptions[?Listener.SSLCertificateId != null ||&nbsp;
Listener.Protocol == 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-add-or-delete-listeners.html#add-listener-cl"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-326,Inadequate Encryption Strength,"The software stores or transmits sensitive data using an encryption scheme that is
theoretically sound, but is not strong enough for the level of protection required.",,Hydras-AWS-ELB-01,Use the Perfect Forward Secrecy feature,"For greater communication privacy Elastic Load Balancing allows the use of Perfect Forward
Secrecy. This feature provides additional safeguards against eavesdropping on encrypted data,
through the use of a unique random session key, and therefore prevents the decoding of captured
data, even if the secret long-term key is compromised.




<b>To begin using Perfect Forward Secrecy: 
</b>Configure your load
balancer with the newly added Elliptic Curve Cryptography (ECDHE) cipher suites.","Check that your load balancer is configured with the newly added Elliptic Curve
Cryptography (ECDHE) cipher suites.",
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-326,Inadequate Encryption Strength,"The software stores or transmits sensitive data using an encryption scheme that is
theoretically sound, but is not strong enough for the level of protection required.",,Hydras-AWS-ELB-02,Select the Server Order Preference option,"Within Elastic Load Balancing ensure the use of newer and stronger cipher suites when
establishing a new connection supporting the Server Order Preference option. When this option is
selected, the load balancer selects the first cipher in its list that is in the client's list of
ciphers.




<b> <b>Remediation:</b> </b>

To enable Server Order Preference:



-Open the Amazon EC2 console.&nbsp;
-Under LOAD BALANCING, choose Load Balancers.

-Select your Load Balancer.

-On the Listeners tab, for Cipher, choose Change.

-On the Select a Cipher page, select Custom Security Policy.

-For SSL Options, select Server Order Preference.

-Click Save.","-Open the Amazon EC2 console.&nbsp;
-Under LOAD BALANCING, choose Load Balancers.

-Select your Load Balancer.

-On the Listeners tab, for Cipher, choose Change.

-On the Select a Cipher page, select Custom Security Policy.

-For SSL Options, check that the option Server Order Preference is selected.",
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-326,Inadequate Encryption Strength,"The software stores or transmits sensitive data using an encryption scheme that is
theoretically sound, but is not strong enough for the level of protection required.",,aws-tier-1.10,Configure the latest SSL Security Policies for Web Tier ELB,"Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a
security policy, to negotiate SSL/TLS connections between a client and the load balancer. A
security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference
option.






Elastic Load Balancing supports configuring your load balancer to use either predefined or
custom security policies.






Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that
are used to encrypt confidential data over insecure networks such as the Internet. The TLS
protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we
refer to both SSL and TLS protocols as the SSL protocol.






Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if
you are terminating SSL connections directly on the Web Tier EC2 instances, and using a TCP
listener on the ELB (TCP pass-through)






Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will
be negotiated using only the appropriate cryptographic protocols deemed safe with no proven
vulnerabilities.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">
(Note that you should replace &lt;web\_tier\_elb&gt; with your Web-tier ELB name, and _&lt;latest\_ssl\_policy&gt;_
with the proper policy name)

<div style="""">




<blockquote>

<div style="""">
aws elb set-load-balancer-policies-of-listener --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --load-balancer-port
443 --policy-names&nbsp; &lt;em&gt;&lt;latest_ssl_policy&gt;&lt;/em&gt;


</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;web\_tier\_elb&gt; with your Web-tier ELB name)



-Find all the SSL security policies associated with your load balancer listener:


<blockquote>
<blockquote>

aws elb describe-load-balancer-policies --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --query
'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}'
--output table

</blockquote>
</blockquote>


-Find which of the above policies is currently active, and check on AWS
documentation if it is the latest (note that for the TCP listeners the PolicyNames element
will be empty, but the TCP listener is still compliant when using SSL certificates on the
back-end EC2 instances):


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --query &quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId
!= null || Listener.Protocol == 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html
http://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-326,Inadequate Encryption Strength,"The software stores or transmits sensitive data using an encryption scheme that is
theoretically sound, but is not strong enough for the level of protection required.",,aws-tier-1.13,Configure the latest SSL Security Policies for App Tier ELB,"Elastic Load Balancing uses an Secure Socket Layer (SSL) negotiation configuration, known as a
security policy, to negotiate SSL/TLS connections between a client and the load balancer. A
security policy is a combination of SSL/TLS protocols, ciphers, and the Server Order Preference
option.






Elastic Load Balancing supports configuring your load balancer to use either predefined or
custom security policies.






Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are cryptographic protocols that
are used to encrypt confidential data over insecure networks such as the Internet. The TLS
protocol is a newer version of the SSL protocol. In the Elastic Load Balancing documentation, we
refer to both SSL and TLS protocols as the SSL protocol.






Note: an SSL certificate configured on the ELB and an SSL Security Policy is not mandatory if
you are terminating SSL connections directly on the App Tier EC2 instances, and using a TCP
listener on the ELB (TCP pass-through)






Making sure the latest ELB SSL Security Policy is used will ensure the SSL/TLS connection will
be negotiated using only the appropriate cryptographic protocols deemed safe with no proven
vulnerabilities.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:


<div style="""">

-(Note that you should replace &lt;app\_tier\_elb&gt; with your App-tier ELB
name, and &lt;latest\_ssl\_policy&gt; with the proper policy name)


<blockquote>
<blockquote>

<div style="""">
aws elb set-load-balancer-policies-of-listener --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --load-balancer-port
443 --policy-names&nbsp; &lt;em&gt;&lt;latest_ssl_policy&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;app\_tier\_elb&gt; with your App-tier ELB name)



-Find all the SSL security policies associated with your load balancer listener:


<blockquote>
<blockquote>

aws elb describe-load-balancer-policies --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --query
'PolicyDescriptions[?PolicyTypeName==`SSLNegotiationPolicyType`].{PolicyName:PolicyName,ReferenceSecurityPolicy:PolicyAttributeDescriptions[0].AttributeValue}'
--output table

</blockquote>
</blockquote>


-Find which of the above policies is currently active, and check on AWS
documentation if it is the latest (note that for the TCP listeners the PolicyNames element
will be empty, but the TCP listener is still compliant when using SSL certificates on the
back-end EC2 instances):


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --query &quot;LoadBalancerDescriptions[*].{CompliantListeners:ListenerDescriptions[?Listener.SSLCertificateId
!= null || Listener.Protocol == 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-policies.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
https://aws.amazon.com/premiumsupport/knowledge-center/elb-listener-policy-cli/
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-options.html
http://docs.aws.amazon.com/cli/latest/reference/elb/set-load-balancer-policies-of-listener.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-311,Missing Encryption of Sensitive Data,"The software does not encrypt sensitive or critical information
before storage or transmission.",,aws-tier-1.1,Use HTTPS listener for Web Tier ELB,"A load balancer takes requests from clients and distributes them across the EC2 instances that
are registered with the load balancer (also known as back-end instances).






A listener is a process that checks for connection requests. It is configured with a protocol
and a port for front-end (client to load balancer) connections






Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL
connections directly on the Web Tier EC2 instances, and using a TCP listener on the ELB (TCP
pass-through)






Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the
client and the Web Tier ELB is encrypted over the SSL\TLS channel.






<b>Remediation:</b>


<div style="""">

Using the Amazon unified command line interface:



-If the ListenerDescription field is missing, add a new HTTPS listener configured with
a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but
this can be modified by editing InstancePort=80):




<blockquote>
<blockquote>

<div style="""">

aws elb create-load-balancer-listeners --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --listeners
Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;ssl_certificate_arn&gt;&lt;/span&gt;



</blockquote>
</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;web\_tier\_elb&gt; with your Web-tier ELB name)



-Check if the Web Tier ELB is using an HTTPS or TCP listener. Note if the
ListenerDescription field is missing or not:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names&nbsp; &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --query &quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName,
DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol
== 'HTTPS' || Listener.Protocol = 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-311,Missing Encryption of Sensitive Data,"The software does not encrypt sensitive or critical information
before storage or transmission.",,aws-tier-1.14,Use HTTPS listener for App Tier ELB,"A load balancer takes requests from clients and distributes them across the EC2 instances that
are registered with the load balancer (also known as back-end instances).






A listener is a process that checks for connection requests. It is configured with a protocol
and a port for front-end (client to load balancer) connections.






Note: an HTTPS listener configured on the ELB is not mandatory if you are terminating SSL
connections directly on the App Tier EC2 instances, and using a TCP listener on the ELB (TCP
pass-through)






Using an HTTPS Elastic Load Balancer listener will make sure the application traffic between the
client and the App Tier ELB is encrypted over the SSL\TLS channel.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-If the ListenerDescription field is missing, add a new HTTPS listener configured with
a SSL\TLS certificate (the listener forwards traffic to the backend instances on port 80, but
this can be modified by editing InstancePort=80):



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer-listeners --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --listeners
Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80, SSLCertificateId=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;ssl_certificate_arn&gt;&lt;/span&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:


(Note that you should replace &lt;app\_tier\_elb&gt; with your App tier ELB name)



-Check if the App Tier ELB is using an HTTPS or TCP listener. Note if the
ListenerDescription field is missing or not:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names&nbsp; &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&lt;/span&gt;&gt; --query &quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName,
DNSName:DNSName, Scheme:Scheme, ListenerDescriptions:ListenerDescriptions[?Listener.Protocol
== 'HTTPS' || Listener.Protocol == 'TCP']}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer-listeners.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,EAVESDROPPING-COMMUNICATIONS,An attacker eavesdrops on the communication between the client and server and decrypts the data.,"Eavesdropping on communication is a network attack that captures small packets
transmitted by other computers and reads the data content. This type of network attack
is most effective when weak encryption services are used. An attacker could eavesdrop on
the communication between the client and server and decrypt the encrypted data.",,CWE-311,Missing Encryption of Sensitive Data,"The software does not encrypt sensitive or critical information
before storage or transmission.",,aws-tier-3.12,Set a HTTPS connection from all CloudFront Distributions to the Web Tier ELB origin,"Configure the Origin Protocol Policy for the Web tier ELB origin either to require that
CloudFront fetches objects from your origin by using HTTPS or to require that CloudFront uses
the protocol that the viewer used to request the objects. For example, if you choose Match
Viewer for the Origin Protocol Policy and the viewer uses HTTPS to request an object from
CloudFront, CloudFront also uses HTTPS to forward the request to your origin.






In order to use HTTPS, an SSL\TLS certificate must be attached.






To ensure that objects are encrypted from edge locations to the Web-Tier ELB origin according to
the data classification policy, use Match Viewer.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-For configuring &quot;OriginProtocolPolicy&quot;first save locally the current
distribution config:



<blockquote>
<blockquote>

<div style="""">
aws cloudfront get-distribution-config --id &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;application_cfn_distribution_id&lt;/span&gt;&gt;&nbsp;
--query &quot;DistributionConfig&quot; &gt; /tmp/cf-distribution.json


</blockquote>
</blockquote>

<div style="""">



<div style="""">
Edit and replace &quot;OriginProtocolPolicy&quot;element in /tmp/cf-distribution.json
with the below section:

<div style="""">
&quot;OriginProtocolPolicy&quot;: &quot;https-only&quot;,

<div style="""">

-Retrieve the current ETag of your CloudFront distribution:



<blockquote>
<blockquote>

<div style="""">
aws cloudfront get-distribution-config --id &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;application_cfn_distribution_id&lt;/span&gt;&gt;&nbsp;
--query &quot;ETag&quot;


</blockquote>
</blockquote>

<div style="""">

-Update the CloudFront distribution using the edited config and the above Etag:



<blockquote>
<blockquote>

<div style="""">
aws cloudfront update-distribution --id &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;application_cfn_distribution_id&lt;/span&gt;&gt;
--distribution-config file:///tmp/cf-distribution.json --if-match &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;application_cfn_distribution_etag&lt;/span&gt;&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check the &quot;OriginProtocolPolicy&quot; used by application Cloudfront
distributions (it should be set as https-only):


<blockquote>
<blockquote>

&lt;span&gt;aws cloudfront list-distributions --query &quot;DistributionList.Items[*].{Id:Id,
OriginProtocolPolicy:Origins.Items[*].CustomOriginConfig.OriginProtocolPolicy}&quot;&lt;/span&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/cloudfront/get-streaming-distribution-config.html
http://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html
http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html
http://docs.aws.amazon.com/cli/latest/reference/cloudfront/update-distribution.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-3.1,Associate each Auto-Scaling Group to ELB,"Elastic Load Balancing automatically distributes incoming application traffic across multiple
Amazon EC2 instances within a VPC.






It enables greater levels of fault tolerance in your applications, seamlessly providing the
required amount of load balancing capacity needed to distribute application traffic across 1 or
more Availability Zones within a VPC.






Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have
availability of compute resources in the event of a failure.






Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high
availability and back-end EC2 instance scaling.






Through Auto-Scaling Group configuration you can define:


minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group


Availability Zones / subnets used






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-List existing load balancers:



<blockquote>
<blockquote>

<div style="""">
aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}'


</blockquote>
</blockquote>

<div style="""">



<div style="""">
or

<div style="""">

-Create new load balancer:



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer --load-balancer-name &lt;em&gt;&lt;elb_name&gt;&lt;/em&gt;
--listeners &lt;em&gt;&lt;listener_config&gt;&lt;/em&gt; --subnets &lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;application_subnet&gt;&lt;/span&gt;
--security-groups &lt;em&gt;&lt;application_security_groups&gt;&lt;/em&gt;


</blockquote>
</blockquote>

<div style="""">

-Attached load balancer from previous steps to autoscaling group:



<blockquote>
<blockquote>

<div style="""">
aws autoscaling attach-load-balancers --load-balancer-names &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;elb_name&gt;&lt;/span&gt; --auto-scaling-group-name
&lt;&lt;span style=&quot;font-style: italic;&quot;&gt;autoscaling_group_name&gt;&lt;/span&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Identify Autoscaling Group Name and associated ELB name:


<blockquote>
<blockquote>

aws autoscaling describe-auto-scaling-groups&nbsp; --query
'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}'

</blockquote>
</blockquote>


-Identify current status of the ELB:


<blockquote>
<blockquote>

aws autoscaling describe-load-balancers --auto-scaling-group-name &lt;em&gt;&lt;autoscaling_group_name&gt;&lt;/em&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-3.13,Associate Web Tier Auto-Scaling Group to ELB,"Elastic Load Balancing automatically distributes incoming application traffic across multiple
Amazon EC2 instances within a VPC.






It enables greater levels of fault tolerance in your applications, seamlessly providing the
required amount of load balancing capacity needed to distribute application traffic across 1 or
more Availability Zones within a VPC.






Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have
availability of compute resources in the event of a failure.






Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high
availability and back-end EC2 instance scaling.






Through Auto-Scaling Group configuration you can define:


minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group


Availability Zones / subnets used






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-List existing load balancers:



<blockquote>
<blockquote>

<div style="""">
aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}'


</blockquote>
</blockquote>

<div style="""">
or

<div style="""">

-Create new load balancer:



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer --load-balancer-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt; --listeners &lt;em&gt;&lt;listener_config&gt;&lt;/em&gt;
--subnets &lt;span&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;web_tier_elb_subnet1&gt;&lt;/span&gt; &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;web_tier_elb_subnet2&gt;&lt;/span&gt;
--security-groups &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;web_tier_elb_security_group&gt;&lt;/span&gt;


</blockquote>
</blockquote>

<div style="""">

-Attached load balancer from previous steps to autoscaling group:



<blockquote>
<blockquote>

<div style="""">
aws autoscaling attach-load-balancers --load-balancer-names &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_elb&gt;&lt;/span&gt;
--auto-scaling-group-name &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;web_tier_autoscaling_group_name&gt;&lt;/span&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Identify Autoscaling Group Name and associated ELB name:


<blockquote>
<blockquote>

aws autoscaling describe-auto-scaling-groups&nbsp; --query
'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}'

</blockquote>
</blockquote>


-Identify current status of the ELB:


<blockquote>
<blockquote>

aws autoscaling describe-load-balancers --auto-scaling-group-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;web_tier_autoscaling_group_name&gt;&lt;/span&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-3.14,Associate App Tier Auto-Scaling Group to ELB,"Elastic Load Balancing automatically distributes incoming application traffic across multiple
Amazon EC2 instances within a VPC.






It enables greater levels of fault tolerance in your applications, seamlessly providing the
required amount of load balancing capacity needed to distribute application traffic across 1 or
more Availability Zones within a VPC.






Elastic Load Balancing must be integrated with Auto Scaling Groups to ensure that you have
availability of compute resources in the event of a failure.






Integrating Auto Scaling Groups with an Elastic Load Balancer will help provide high
availability and back-end EC2 instance scaling.






Through Auto-Scaling Group configuration you can define:


minimum / maximum number of EC2 instances to be launched by the Auto-Scaling Group


Availability Zones / subnets used






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-List existing load balancers:



<blockquote>
<blockquote>

<div style="""">
aws elb describe-load-balancers --query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName}'


</blockquote>
</blockquote>

<div style="""">



<div style="""">
or

<div style="""">

-Create new load balancer:



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer --load-balancer-name &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;app_tier_elb&gt;&lt;/span&gt;
--scheme internal --listeners &lt;&lt;em&gt;listener_config&lt;/em&gt;&gt;
--subnets &lt;em&gt;&lt;app_tier_subnet1&gt; &lt;app_tier_subnet2&gt;&lt;/em&gt;
--security-groups &lt;span&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;app_tier_elb_security_group&lt;/span&gt;&lt;span&gt;&gt;&lt;/span&gt;


</blockquote>
</blockquote>

<div style="""">

-Attached load balancer from previous steps to autoscaling group:



<blockquote>
<blockquote>

<div style="""">
aws autoscaling attach-load-balancers --load-balancer-names &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_elb&gt;&lt;/span&gt;
--auto-scaling-group-name &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;app_tier_autoscaling_group_name&gt;&lt;/span&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Identify Autoscaling Group Name and associated ELB name:


<blockquote>
<blockquote>

aws autoscaling describe-auto-scaling-groups&nbsp; --query
'AutoScalingGroups[*].{ELB:LoadBalancerNames, ASGName:AutoScalingGroupName}'

</blockquote>
</blockquote>


-Identify current status of the ELB:


<blockquote>
<blockquote>

aws autoscaling describe-load-balancers --auto-scaling-group-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;app_tier_autoscaling_group_name&gt;&lt;/span&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/autoscaling/attach-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-load-balancers.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-6.18,"Not use Web tier ELB Security Group in the Auto Scaling launch configuration of any other tier (Web, App)","When you use the AWS Management Console to create a load balancer in a VPC, you can choose an
existing security group for the VPC or create a new security group for the VPC. If you choose an
existing security group, it must allow traffic in both directions to the listener and health
check ports for the load balancer. If you choose to create a security group, the console
automatically adds rules to allow all traffic on these ports.






Be sure to review the security group rules to ensure that they allow traffic on the listener and
health check ports for the new load balancer. When you delete your load balancer, this security
group is not deleted automatically.






If you add a listener to an existing load balancer, you must review your security groups to
ensure they allow traffic on the new listener port in both directions.






The web-tier ELB is the only one public facing and should have rules to allow inbound traffic
the application ports (ex: HTTP and HTTPS) from any IP source (0.0.0.0/0).






The outbound security group rules for the web-tier ELB should be restricted to only the backend
web-server instances for the appropriate application ports.






Associating the web-tier ELB security group to any other instances that shouldn't be publicly
accessible exposes them to unauthorized access.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Create new launch configuration using the correct security groups for Web and/or App
tier:



<blockquote>
<blockquote>

<div style="""">
aws autoscaling create-launch-configuration --launch-configuration-name &lt;em&gt;&lt;web_tier_launch_config&gt;&lt;/em&gt;
--image-id &lt;em&gt;&lt;web_tier_ami&gt;&lt;/em&gt; --key-name &lt;em&gt;&lt;your_key_pair&gt;&lt;/em&gt;
--security-groups &lt;em&gt;&lt;web_tier_security_group&gt;/&lt;app_tier_security_group&gt;&lt;/em&gt;
--instance-type &lt;em&gt;&lt;desired_instance_type&gt;&lt;/em&gt;
--iam-instance-profile &lt;we&lt;em&gt;b_tier_instance_profile&gt;/&lt;/em&gt;&lt;&lt;em&gt;app_tier_instance_profile&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the security group associated with the Web tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;em&gt;&lt;web_tier_elb&gt;&lt;/em&gt;
--query &quot;LoadBalancerDescriptions[*].{DNSName:DNSName,
WebTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&quot;
--output table





</blockquote>
</blockquote>

note the &quot;WebTierELBSecurityGroups&quot; from the output



-List the security groups associated with all Autoscaling launch configurations and
make sure that the above Web tier ELB security group is not present:


<blockquote>
<blockquote>

aws autoscaling describe-launch-configurations --query &quot;LaunchConfigurations[*].{SecurityGroups:SecurityGroups,
LaunchConfigurationName:LaunchConfigurationName}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-6.26,Create the App tier ELB as Internal,"An internal load balancer routes traffic to your EC2 instances in private subnets using private
IP addresses.






Create an internal load balancer and register the database servers with it. The web servers
receive requests from the Internet-facing load balancer and send requests for the database
servers to the internal load balancer. The database servers receive requests from the internal
load balancer.






When an internal load balancer is created, it receives a public DNS name with the following
form:





<blockquote>

&lt;pre class=&quot;programlisting&quot;&gt;internal-&lt;em class=&quot;replaceable&quot;&gt;name&lt;/em&gt;-&lt;em
class=&quot;replaceable&quot;&gt;&lt;span&gt;123456789&lt;/span&gt;&lt;/em&gt;.&lt;em
class=&quot;replaceable&quot;&gt;region&lt;/em&gt;.elb.amazonaws.com





</blockquote>

The DNS servers resolve the DNS name of your load balancer to the private IP addresses of the
load balancer nodes for your internal load balancer. Each load balancer node is connected to the
private IP addresses of the back-end instances that are in its Availability Zone using elastic
network interfaces.






Creating the App tier ELB as internal will prevent access to the app tier from the Internet and
will allow access from the Web tier instances.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Create new internal ELB for your App tier:



<blockquote>
<blockquote>

<div style="""">
aws elb create-load-balancer --load-balancer-name &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;app_tier_elb&gt;&lt;/span&gt;
--scheme internal --listeners &lt;&lt;em&gt;listener_config&lt;/em&gt;&gt;
--subnets &lt;em&gt;&lt;app_tier_subnet1&gt;&lt;/em&gt; &lt;em&gt;&lt;app_tier_subnet2&gt;&lt;/em&gt;
--security-groups &lt;span&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;app_tier_elb_security_group&lt;/span&gt;&lt;span&gt;&gt;&lt;/span&gt;


</blockquote>
</blockquote>

<div style="""">

-Register App tier instances with the new App tier ELB:



<blockquote>
<blockquote>

<div style="""">
aws elb register-instances-with-load-balancer --load-balancer-name &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;app_tier_elb&gt;&lt;/span&gt;
--instances &lt;em&gt;&lt;app_tier_instance1&gt; &lt;app_tier_instance2&gt;
&lt;app_tier_instance3&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check the Scheme of your App tier ELB, and make sure it is &quot;internal&quot;:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;app_tier_elb&gt;&lt;/span&gt;
--query &quot;LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName,
Scheme:Scheme}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/create-load-balancer.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-internal-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/register-instances-with-load-balancer.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-6.5,Create subnets for the Web Tier ELB,"You can create a VPC that spans multiple Availability Zones. After creating a VPC, you can add
one or more subnets in each Availability Zone. Each subnet must reside entirely within one
Availability Zone and cannot span zones. Availability Zones are distinct locations that are
engineered to be isolated from failures in other Availability Zones. By launching instances in
separate Availability Zones, you can protect your applications from the failure of a single
location. AWS assigns a unique ID to each subnet.






When you create a subnet, you specify the CIDR block for the subnet. The CIDR block of a subnet
shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC). The
allowed block size is between a /28 netmask and /16 netmask. If you create more than one subnet
in a VPC, the CIDR blocks of the subnets must not overlap.






Some AWS regions have more than 2 availability zones and it is recommended to use more than 2
where possible.






At least 2 subnets in 2 different availability zones (AZ) should be created in order to have
fault tolerance and high availability from the perspective of resource deployment.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Create subnets for Web tier ELB, and note the subnet id:



<blockquote>
<blockquote>

<div style="""">
aws ec2 create-subnet --vpc-id &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;application_vpc&gt;&lt;/span&gt;
--cidr-block &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;desired_cidr&gt;&lt;/span&gt;


</blockquote>
</blockquote>

<div style="""">

-Tag the above subnets with the Web tier ELB tags:



<blockquote>
<blockquote>

<div style="""">
aws ec2 create-tags --resources &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;web_tier_elb_subnet1&gt;&lt;/span&gt;
&lt;span&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;web_tier_elb_subnet2&gt;&lt;/span&gt; --tags Key=&lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;public_tier_tag&gt;&lt;/span&gt;,Value=&lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;public_tier_tag_value&gt;&lt;/span&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the subnets associated with the Web tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;web_tier_elb&gt;&lt;/span&gt;
--query &quot;LoadBalancerDescriptions[*].Subnets&quot;

</blockquote>
</blockquote>





OR






Using the Amazon unified command line interface:



-List the subnets created for the Web tier ELB:


<blockquote>
<blockquote>

aws ec2 describe-subnets --filters Name=tag:&lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;public_tier_tag&gt;&lt;/span&gt;,Values=&lt;span&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;public_tier_tag_value&gt;&lt;/span&gt;
--query &quot;Subnets[*].SubnetId&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/ec2/create-subnet.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/create-tags.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.1,Non-identify the resources,"Resources are not registered in the safety net systems, and there are more unidentified
resources. That can be a problem because these unidentified resources can have unknown
weaknesses.",,aws-tier-6.1,Set Root Domain Alias Record to ELB,"Amazon Route 53 translates friendly domains names like www.example.com into IP addresses like
192.0.2.1. Amazon Route 53 responds to DNS queries using a global network of authoritative DNS
servers, which reduces latency.






When someone enters your domain name in a browser, a DNS request is forwarded to the nearest
Amazon Route 53 DNS server in a global network of authoritative DNS servers. Amazon Route 53
responds with the IP address that you specified.






Each domain has an associated hosted zone which contains the resource records pointing to each
layer of the application.






A private hosted zone is a container that holds information about how you want to route traffic
for a domain and its subdomains within the Amazon Virtual Private Cloud (Amazon VPC). To begin,
you create a private hosted zone and specify the Amazon VPCs that you want to associate with the
hosted zone. You then create resource record sets that determine how Amazon Route 53 responds to
queries for your domain and subdomains within and among your Amazon VPCs.






Route53 provides special record type called Alias that allow to create an A record for the root
domain and point it to the fully qualified domain of the Elastic Load Balancer (ELB) associated
with the web-server layer or Amazon CloudFront.






In the same way records for all other layers should be created in order to allow flexibility in
the application design and not hard-code the FQDN of a resource.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Create a hosted zone for YourDomain.com:



<blockquote>
<blockquote>

<div style="""">
aws route53 create-hosted-zone --name &lt;y&lt;em&gt;our_domain.com&gt;&lt;/em&gt;
--caller-reference &lt;em&gt;&lt;any_string&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List all the hosted zones and check if the domain name used by the application is
present among them:


<blockquote>
<blockquote>

aws route53 list-hosted-zones --query 'HostedZones[*].{Name:Name, Id:Id}' --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/AboutHostedZones.html
http://docs.aws.amazon.com/cli/latest/reference/route53/create-hosted-zone.html
http://docs.aws.amazon.com/cli/latest/reference/route53/list-hosted-zones.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-NET-01,Unauthorized connection attempts on open ports,"Receiving unauthorized connections to open ports is most likely an attack. To avoid this,
access to the network must be as restricted as possible, so that only the necessary ports are
open and the minimum inbound traffic is accepted.",,aws-tier-6.13,Allow connectivity to the VPC Internet Gateway (IGW) and associate the Routing Table with Web tier ELB subnet (by default route (0.0.0.0/0)),"A route table contains a set of rules, called routes, that are used to determine where network
traffic is directed.






Each subnet in your VPC must be associated with a route table; the table controls the routing
for the subnet. A subnet can only be associated with one route table at a time, but you can
associate multiple subnets with the same route table.






The default route (0.0.0.0/0) should be pointing to the Internet Gateway in order to provide
internet connectivity for the Web tier ELB.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-For the above route tables, if the default route (0.0.0.0/0) exists but it doesn't
have an IGW configured as gateway:



<blockquote>
<blockquote>

<div style="""">
aws ec2 replace-route --route-table-id &lt;em&gt;&lt;route_table_id&gt;&lt;/em&gt;
--destination-cidr-block 0.0.0.0/0 --gateway-id &lt;em&gt;&lt;vpc_igw&gt;&lt;/em&gt;


</blockquote>
</blockquote>

<div style="""">

-For the above route tables, if the default route (0.0.0.0/0) doesn't exist:



<blockquote>
<blockquote>

<div style="""">
aws ec2 create-route --route-table-id &lt;em&gt;&lt;route_table_id&gt;&lt;/em&gt;
--destination-cidr-block 0.0.0.0/0 --gateway-id &lt;em&gt;&lt;vpc_igw&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the subnets associated with the Web tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;em&gt;&lt;web_tier_elb&gt;&lt;/em&gt;
--query &quot;LoadBalancerDescriptions[*].Subnets&quot;

</blockquote>
</blockquote>


-List the routes of the route tables associated with the above subnets, and check
if the default route (0.0.0.0/0) has an IGW configured as gateway:


<blockquote>
<blockquote>

aws ec2 describe-route-tables --filters Name=association.subnet-id,Values=&lt;&lt;em&gt;web_tier_elb_subnet1&gt;,&lt;web_tier_elb_subnet2&gt;&lt;/em&gt;
--query &quot;RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/replace-route.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-NET-01,Unauthorized connection attempts on open ports,"Receiving unauthorized connections to open ports is most likely an attack. To avoid this,
access to the network must be as restricted as possible, so that only the necessary ports are
open and the minimum inbound traffic is accepted.",,aws-tier-6.17,Use a Web-Tier ELB Security Group to accept only HTTP/HTTPS ,"A security group acts as a virtual firewall for your instance to control inbound and outbound
traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
instance to up to five security groups. Security groups act at the instance level, not the
subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
set of security groups. If you don't specify a particular group at launch time, the instance is
automatically assigned to the default security group for the VPC.






For each security group, you add rules that control the inbound traffic to instances, and a
separate set of rules that control the outbound traffic.






The SG associated with the Web tier ELB should allow connectivity from any source IP (0.0.0.0/0)
only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-First remove all the ingress rules for the security group associated with the Web tier
ELB:



<blockquote>
<blockquote>

<div style="""">
aws ec2 describe-security-groups --group-id &lt;&lt;em&gt;security_group_id&gt;&lt;/em&gt;
--query &quot;SecurityGroups[0].IpPermissions&quot; &gt; /tmp/IpPermissions.json


<div style="""">



</blockquote>
</blockquote>
<blockquote>
<blockquote>

<div style="""">
aws ec2 revoke-security-group-ingress --group-id &lt;&lt;em&gt;security_group_id&gt;&lt;/em&gt;
--ip-permissions file:///tmp/IpPermissions.json


</blockquote>
</blockquote>

<div style="""">

-create locally the below json file containing ingress rules for any source IP
(0.0.0.0/0) only for the HTTP (TCP 80) and HTTPS (TCP 443) ports and name it IpPermissions.json:



<blockquote>
<blockquote>

<div style="""">
[


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;PrefixListIds&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;FromPort&quot;: 80,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpRanges&quot;: [


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CidrIp&quot;:
&quot;0.0.0.0/0&quot;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; ],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;ToPort&quot;: 80,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpProtocol&quot;: &quot;tcp&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;UserIdGroupPairs&quot;: []


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; },


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;PrefixListIds&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;FromPort&quot;: 443,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpRanges&quot;: [


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CidrIp&quot;:
&quot;0.0.0.0/0&quot;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; ],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;ToPort&quot;: 443,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpProtocol&quot;: &quot;tcp&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;UserIdGroupPairs&quot;: []


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
]


</blockquote>
</blockquote>

<div style="""">

-Add to the security group associated with the Web tier ELB the above ingress rules:



<blockquote>
<blockquote>

<div style="""">
aws ec2 authorize-security-group-ingress --group-id &lt;&lt;em&gt;security_group_id&gt;&lt;/em&gt;&nbsp;
--ip-permissions file:///PathTo/IpPermissions.json


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the security group associated with the Web tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;&lt;em&gt;your_web_tier_elb&gt;
&lt;/em&gt;--query &quot;LoadBalancerDescriptions[*].{DNSName:DNSName,
SecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&quot; --output
table

</blockquote>
</blockquote>
<blockquote>




</blockquote>

note the security group id from the output



-List the ingress rules for the above security group, and make sure that only HTTP
(TCP 80) and HTTPS (TCP 443) traffic is allowed from any source IP (0.0.0.0/0)any source IP
(0.0.0.0/0):


<blockquote>
<blockquote>

aws ec2 describe-security-groups --group-ids&nbsp; &lt;&lt;em&gt;security_group_id&gt;&lt;/em&gt;
--query &quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&quot;
--output table

</blockquote>
</blockquote>",
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-NET-01,Unauthorized connection attempts on open ports,"Receiving unauthorized connections to open ports is most likely an attack. To avoid this,
access to the network must be as restricted as possible, so that only the necessary ports are
open and the minimum inbound traffic is accepted.",,aws-tier-6.21,Create the App tier ELB Security Group to only accept HTTP/HTTPS,"A security group acts as a virtual firewall for your instance to control inbound and outbound
traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
instance to up to five security groups. Security groups act at the instance level, not the
subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
set of security groups. If you don't specify a particular group at launch time, the instance is
automatically assigned to the default security group for the VPC.






For each security group, you add rules that control the inbound traffic to instances, and a
separate set of rules that control the outbound traffic.






The SG associated with the App tier ELB should allow connectivity from the security group
associated with Web tier instances only for the HTTP (TCP 80) and HTTPS (TCP 443) ports.






The defaults for HTTP and HTTPS are used as an example, any other ports would apply depending on
the application design.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-First remove all the ingress rules for the security group associated with the App tier
ELB:



<blockquote>
<blockquote>

<div style="""">
aws ec2 describe-security-groups --group-id &lt;&lt;em&gt;app_tier_elb_security_group&lt;/em&gt;&gt;
--query &quot;SecurityGroups[0].IpPermissions&quot; &gt; /tmp/IpPermissions.json


<div style="""">



</blockquote>
</blockquote>
<blockquote>
<blockquote>

<div style="""">
aws ec2 revoke-security-group-ingress --group-id &lt;&lt;em&gt;app_tier_elb_security_group&lt;/em&gt;&gt;
--ip-permissions file:///tmp/IpPermissions.json


</blockquote>
</blockquote>

<div style="""">

-create locally the below json file containing ingress rules for HTTP (TCP 80) and
HTTPS (TCP 443) ports only from and name it IpPermissions.json:



<blockquote>
<blockquote>

<div style="""">
[


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;PrefixListIds&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;FromPort&quot;: 80,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpRanges&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;ToPort&quot;: 80,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpProtocol&quot;: &quot;tcp&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;UserIdGroupPairs&quot;: [


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;UserId&quot;:
&quot;&lt;&lt;em&gt;aws_account_number&gt;&lt;/em&gt;&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;GroupId&quot;:
&quot;&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;web_tier_security_group&lt;/span&gt;&gt;&quot;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; ]


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; },


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;PrefixListIds&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;FromPort&quot;: 443,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpRanges&quot;: [],


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;ToPort&quot;: 443,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;IpProtocol&quot;: &quot;tcp&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &quot;UserIdGroupPairs&quot;: [


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;UserId&quot;:
&quot;&lt;&lt;em&gt;aws_account_number&gt;&lt;/em&gt;&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;GroupId&quot;:
&quot;&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;web_tier_security_group&lt;/span&gt;&gt;&quot;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &nbsp; &nbsp; ]


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; }


</blockquote>
<blockquote>

<div style="""">
]


</blockquote>
</blockquote>

<div style="""">

-Add to the security group associated with the App tier ELB the above ingress rules:



<blockquote>
<blockquote>

<div style="""">
aws ec2 authorize-security-group-ingress --group-id &lt;&lt;em&gt;app_tier_elb_security_group&lt;/em&gt;&gt;&nbsp;
--ip-permissions file:///PathTo/IpPermissions.json


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the security group associated with the App tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-name &lt;em&gt;&lt;app_tier_elb&lt;/em&gt;&gt;
--query &quot;LoadBalancerDescriptions[*].{DNSName:DNSName,
AppTierELBSecurityGroups:SecurityGroups, SourceSecurityGroup:SourceSecurityGroup}&quot;
--output table&nbsp;





</blockquote>
</blockquote>

note the &quot;AppTierELBSecurityGroups&quot; from the output



-List the ingress rules for the above security group, and make sure that only HTTP
(TCP 80) and HTTPS (TCP 443) traffic is allowed from Web tier Security Group:


<blockquote>
<blockquote>

aws ec2 describe-security-groups --group-ids&nbsp; &lt;&lt;em&gt;app_tier_elb_security_group&lt;/em&gt;&gt;
--query &quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}&quot;
--output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-NET-01,Unauthorized connection attempts on open ports,"Receiving unauthorized connections to open ports is most likely an attack. To avoid this,
access to the network must be as restricted as possible, so that only the necessary ports are
open and the minimum inbound traffic is accepted.",,aws-tier-6.22,Create the App tier Security Group to allow inbound connections from App tier ELB Security Group for explicit ports,"A security group acts as a virtual firewall for your instance to control inbound and outbound
traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the
instance to up to five security groups. Security groups act at the instance level, not the
subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different
set of security groups. If you don't specify a particular group at launch time, the instance is
automatically assigned to the default security group for the VPC.






For each security group, you add rules that control the inbound traffic to instances, and a
separate set of rules that control the outbound traffic.






This is required for both the configured port and protocol for the listener on the back-end
instance and the port and protocol used for the health check.






This protects the App-server tier from unauthorized access, it is recommended to add inbound
security group rules that allow traffic for the specific application protocol and ports by
referencing as source the security group associated with the App tier ELB.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-First remove all the ingress rules for the App tier security group (use the &quot;AppTierSecurityGroup&quot;
element from Audit procedure):



<blockquote>
<blockquote>

<div style="""">
aws ec2 describe-security-groups --group-id &lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;app_tier_security_group&lt;/em&gt;&gt;
--query &quot;SecurityGroups[0].IpPermissions&quot; &gt; /tmp/IpPermissions.json


<div style="""">



</blockquote>
</blockquote>
<blockquote>
<blockquote>

<div style="""">
aws ec2 revoke-security-group-ingress --group-id &lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;app_tier_security_group&lt;/em&gt;&gt;
--ip-permissions file:///tmp/IpPermissions.json


</blockquote>
</blockquote>

<div style="""">

-Add an ingress rule for a specific port, using --source-group option to specify the
App tier ELB security group as the source of the connections:



<blockquote>
<blockquote>

<div style="""">
aws ec2 authorize-security-group-ingress --group-id &lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;app_tier_security_group&lt;/em&gt;&gt;
--protocol tcp --port &lt;em&gt;&lt;specific_port&gt;&lt;/em&gt;
--source-group &lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;app_tier_elb_security_group&lt;/em&gt;&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List the ingress rules for the above security group, and make sure that allows
connections only from App tier ELB security group on specific ports:


<blockquote>
<blockquote>

aws ec2 describe-security-groups --filters Name=tag:&lt;em&gt;&lt;app_tier_tag&gt;&lt;/em&gt;,Values=&lt;em&gt;&lt;app_tier_tag_value&gt;&lt;/em&gt;
--query &quot;SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions,
AppTierSecurityGroup:GroupId}&quot; --output table

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html
http://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,AWS-Logging-3.4,Non-auditable actions in the resources,The actions in the resources are not audited and not recorded into the logs.,,aws-tier-5.2,Enable the ELB logging,"Elastic Load Balancing automatically distributes incoming application traffic across multiple
Amazon EC2 instances in the a VPC. It enables you to achieve greater levels of fault tolerance
in your applications, seamlessly providing the required amount of load balancing capacity needed
to distribute application traffic.






AWS Elastic Load Balancers (ELBs) can record all incoming request sent to the load balancer and
store within logs stored on S3. This allows for diagnosing application failures and analyzing
web traffic and security analysis of incoming traffic






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a JSON file containing the attributes you want to modify and save it locally as
/tmp/ElbLogs.json:



<blockquote>
<blockquote>

<div style="""">
{


</blockquote>
<blockquote>

<div style="""">
&quot;AccessLog&quot;: {


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &quot;Enabled&quot;: true,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &quot;S3BucketName&quot;: &quot;string&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &quot;EmitInterval&quot;: integer,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &nbsp; &quot;S3BucketPrefix&quot;: &quot;string&quot;


</blockquote>
<blockquote>

<div style="""">
&nbsp; }


</blockquote>
<blockquote>

<div style="""">
}


</blockquote>
</blockquote>

<div style="""">

-Update the Load Balancer attributes:



<blockquote>
<blockquote>

<div style="""">
aws elb modify-load-balancer-attributes --load-balancer-name &lt;em&gt;&lt;elb_name&gt;&lt;/em&gt;
--load-balancer-attributes file:///tmp/ElbLogs.json


</blockquote>
</blockquote>","Via Amazon unified CLI:



-List all ELB's:


<blockquote>
<blockquote>

aws elb describe-load-balancers --query
'LoadBalancerDescriptions[*].{LoadBalancerName:LoadBalancerName}'

</blockquote>
</blockquote>


-Confirm correct ELB is selected by review ELB tags:


<blockquote>
<blockquote>

aws elb describe-tags --load-balancer-names &lt;em&gt;&lt;elb_name&gt;&lt;/em&gt;

</blockquote>
</blockquote>


-Review selected ELB attributes and ensure Access Log is enabled:


<blockquote>
<blockquote>

aws elb describe-load-balancer-attributes --load-balancer-name &lt;elb_name&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancer-attributes.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-tags.html
https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-access-logs.html
http://docs.aws.amazon.com/cli/latest/reference/elb/modify-load-balancer-attributes.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,unknown-resource-status,Unknown resource status,"We haven't got the status of the resources, and we can lost the control of some resources,
which we though that they are with inactive status and anyone had change the status and we don't
see it.",,aws-tier-3.8,Configure Health Check for Web Tier ELB,"By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status
checks to determine the health status of each instance. If an instance fails the EC2 instance
status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance.






However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your
Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace
the instance.






Amazon ELB will periodically sends pings, attempts connections, or sends requests to test the
EC2 instances, these tests are called health checks.






The status of the instances that are healthy at the time of the health check is InService.






The status of any instances that are unhealthy at the time of the health check is OutOfService.






The load balancer performs health checks on all registered instances, whether the instance is in
a healthy state or an unhealthy state. The load balancer routes requests only to the healthy
instances. When the load balancer determines that an instance is unhealthy, it stops routing
requests to that instance. The load balancer resumes routing requests to the instance when it
has been restored to a healthy state






Ensures availability of back-end EC2 instances associated with an Amazon ELB through application
layer health check (ex: http) instead of TCP health checks.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a JSON file containing the attributes you want to modify and save it locally as
/tmp/ELBhealthcheck.json:



<blockquote>
<blockquote>

<div style="""">
{


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Target&quot;: &quot;&lt;em&gt;&lt;string&gt;&lt;/em&gt;&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Interval&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Timeout&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;UnhealthyThreshold&quot;: &lt;em&gt;&lt;integer&gt;,&lt;/em&gt;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;HealthyThreshold&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;


</blockquote>
<blockquote>

<div style="""">
}


</blockquote>
</blockquote>

<div style="""">

-Modify Web tier ELB to include appropriate health check:



<blockquote>
<blockquote>

<div style="""">
aws elb configure-health-check --load-balancer-name &lt;em&gt;&lt;web_tier_elb&gt;&lt;/em&gt;
--health-check file:///tmp/ELBhealthcheck.json


</blockquote>
</blockquote>","Using the Amazon unified CLI:



-Identify if healthcheck is in place on the Web tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names &lt;em&gt;&lt;web_tier_elb&gt;&lt;/em&gt;
--query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}'

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.htm"
HYDRAS-AWS-ELB,AWS ELB,Amazon Web Services,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,unknown-resource-status,Unknown resource status,"We haven't got the status of the resources, and we can lost the control of some resources,
which we though that they are with inactive status and anyone had change the status and we don't
see it.",,aws-tier-3.9,Configure Health Check for App Tier ELB,"By default, an Auto-Scaling Group periodically uses the results of the EC2 instance status
checks to determine the health status of each instance. If an instance fails the EC2 instance
status checks, Auto-Scaling marks the instance as unhealthy and replaces the instance.






However, if you have attached one or more Elastic Load Balancing (ELB) load balancers to your
Auto-Scaling Group and the instance fails the ELB health checks, Auto-Scaling does not replace
the instance.






Amazon ELB will periodically sends pings, attempts connections, or sends requests to test the
EC2 instances, these tests are called health checks.






The status of the instances that are healthy at the time of the health check is InService.






The status of any instances that are unhealthy at the time of the health check is OutOfService.






The load balancer performs health checks on all registered instances, whether the instance is in
a healthy state or an unhealthy state. The load balancer routes requests only to the healthy
instances. When the load balancer determines that an instance is unhealthy, it stops routing
requests to that instance. The load balancer resumes routing requests to the instance when it
has been restored to a healthy state






Ensures availability of back-end EC2 instances associated with an Amazon ELB through application
layer health check (ex: http) instead of TCP health checks.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a JSON file containing the attributes you want to modify and save it locally as
/tmp/ELBhealthcheck.json:



<blockquote>
<blockquote>

<div style="""">
{


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Target&quot;: &quot;&lt;em&gt;&lt;string&gt;&lt;/em&gt;&quot;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Interval&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;Timeout&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;,


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;UnhealthyThreshold&quot;: &lt;em&gt;&lt;integer&gt;,&lt;/em&gt;


</blockquote>
<blockquote>

<div style="""">
&nbsp; &quot;HealthyThreshold&quot;: &lt;em&gt;&lt;integer&gt;&lt;/em&gt;


</blockquote>
<blockquote>

<div style="""">
}


</blockquote>
</blockquote>

<div style="""">

-Modify App tier ELB to include appropriate health check:



<blockquote>
<blockquote>

<div style="""">
aws elb configure-health-check --load-balancer-name &lt;em&gt;&lt;app_tier_elb&gt;&lt;/em&gt;
--health-check file:///tmp/ELBhealthcheck.json


</blockquote>
</blockquote>","Using the Amazon unified CLI:



-Identify if healthcheck is in place on the App tier ELB:


<blockquote>
<blockquote>

aws elb describe-load-balancers --load-balancer-names &lt;em&gt;&lt;app_tier_elb&gt;&lt;/em&gt;
--query 'LoadBalancerDescriptions[*].{ELBName:LoadBalancerName,HealthCheck:HealthCheck}'

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/elb/configure-health-check.html
http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html
http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html
http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-healthchecks.htm"
HYDRAS-AWS-GOV,AWS Governance,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,LOST-ACCESS-ROOT-01,The Root Account is misconfigured,"The administrator account is misconfigured. The security question to recover or reset the
password and the authentication method are not configured.",,Hydras-AWS-Gov-1.1,Configure the security challenge questions within the AWS Account,"When an AWS account is initially created it is configured with a top level account known as
the &quot;root&quot; account that has full administration access to all resources. In
the event that the password or MFA device associated with this account is lost AWS support may
recover it by asking you to answer the security questions.



<b>Remediation:</b>



-Login to the AWS Account as root.
-Click account name on the top right of the management console.
-Select &quot;My Account&quot;.
-Scroll down to &quot;Configure Security Challenge Questions&quot;.
-Click on Edit.
-For each question:

-Select an appropriate question.
-Enter an appropriate answer.
-Follow the aboce process for all 3 questions.

-Click Update when complete.
-We recommend to store the questions and answers in a secure location such as a safe
where they can be used in case recovery is required.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Account as root.
-Click account name on the top right of the management console.
-Select &quot;My Account&quot;.
-Scroll down to &quot;Configure Security Challenge Questions&quot;.
-Confirm whether questions and answers have been saved.",
HYDRAS-AWS-GOV,AWS Governance,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,LOST-SECURITY-ALERTS,The Security Contact details are not configured,The security contact details for the Azure subscription are not properly configured.,,Hydras-AWS-Gov-1.2,Register a Security contact for your AWS account.,"AWS will occasionally send security advisories and alerts to the account holder. By default
this will go to the email address that the account is registered under. However if a security
contact is specified these alerts will be sent here instead. Therefore this provides the means
of ensuring these advisories are routed to the security team, especially if a distribution email
address is used.&nbsp;

&nbsp;


<b>Remediation:</b>



-Login to the AWS Account as root.
-Click account name on the top right of the management console.
-Select &quot;My Account&quot;.
-Scroll down to &quot;Alternate Contacts&quot; section.
-Click on Edit.
-In the &quot;Security&quot; section complete the requested contact
information.
-Click update when complete.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Account as root.
-Click account name on the top right of the management console.&nbsp;
-Select &quot;My Account&quot;.
-Scroll down to &quot;Alternate Contacts&quot; section.
-Confirm whether a contact has been set for &quot;Security&quot;.&nbsp;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,AWS-IAM-2.2,Excessive use of administrator accounts,"The administrator accounts are used for all actions, not only for administrative actions. This
is because these users have not got a personal or a user account to do the daily actions.",,Hydras-AWS-IAM-2.1,Avoid the use of the root account unless absolutely necessary,"The root account is the one which was used to open the AWS account with Amazon. Therefore it
has full unrestricted access to all resources within the account including billing information.
Reducing the use of this account and instead using personalised accounts with restricted
permissions ensures the principles of least privilege and can help prevent accidental disclosure
of credentials or unintended changes.


<b>
</b>

<b>Remediation:</b>

Follow the remediation in &quot;Create Individual Accounts&quot;.



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>.","<blockquote>
aws iam create-credential-report
</blockquote>
<blockquote>
aws iam get-credential-report --query 'Content' --output text | base64 -D | cut -d,
-f1,5,11,16 | grep -B1 '&lt;root_account&gt;'&nbsp;
</blockquote>

From the above determine the &quot;password_last_used&quot; time In
addition to the above set up a metric filter as described elsewhere in this library to
determine ad-hoc use of root.


Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,AWS-IAM-2.2,Excessive use of administrator accounts,"The administrator accounts are used for all actions, not only for administrative actions. This
is because these users have not got a personal or a user account to do the daily actions.",,Hydras-AWS-IAM-2.3,Create Individual Accounts,"By creating individual IAM users for people accessing your account, you can give each IAM user
a unique set of security credentials. You can also grant different permissions to each IAM user.
If necessary, you can change or revoke an IAM user's permissions any time. (If you give out your
AWS root credentials, it can be difficult to revoke them, and it is impossible to restrict their
permissions.).



<b>Remediation:</b>



-Login to the AWS Management Console as an administrator.
-Select IAM.
-Select Users.
-Click &quot;Create New Users&quot;.
-Complete the required information.
-Uncheck &quot;Create access key for users&quot;.
-Click &quot;Create&quot;.
-Select the user.
-Click &quot;Manage Password&quot;.
-Select the required options and click &quot;apply&quot;.
-Select &quot;Show User Security Credentials&quot;.
-Securely supply the password to your user.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","Check that each user has got the corresponding account with the corresponding
credentials.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,AWS-IAM-2.1,The Authentication Method for Administrator Accounts is not configured,"The authentication method &quot;Multi-factor Authentication&quot; for the Administrator
accounts are not configured.",,Hydras-AWS-IAM-2.2,Enable MFA for root accounts,"Root is highly privileged and therefore using a multi-factor authentication (MFA) device
enhances the security of the login process. With MFA, users have a device that generates a
unique authentication code (a one-time password, or OTP) and users must provide both their
normal credentials (like their user name and password) and the OTP. The MFA device can either be
a special piece of hardware, or it can be a virtual device. The recommendation for the root
account is to use a hardware based device as it has a smaller attack surface and cannot be
duplicated.



<b>Remediation:</b>



-Login to the AWS Management Console as root.
-Select &quot;Dashboard&quot; and under &quot;Security Status&quot;
choose &quot;Activate MFA&quot; on your root account.
-Select Activate MFA&quot;.
-In the wizard, choose &quot;A hardware MFA&quot; device and then select Next
Step.
-In the Serial Number box, enter the serial number that is found on the back of the MFA
device.&nbsp;
-In the Authentication Code 1 box, enter the six-digit number displayed by the MFA
device.
-Wait until the device refreshes the code, and then enter the next six-digit number
into the Authentication Code 2 box.
-Select &quot;Next Step&quot;.&nbsp;
The MFA device is now associated with the AWS account.&nbsp;


&nbsp;

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Run: aws iam get-account-summary
-Ensure the AccountMFAEnabled property is 1.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-ROOT,Attackers gain unauthorized access to the root account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the administrator account due to the lack of
the account and its security mechanisms, like modifying credentials and adding/removing
user accounts.",,AWS-IAM-2.1,The Authentication Method for Administrator Accounts is not configured,"The authentication method &quot;Multi-factor Authentication&quot; for the Administrator
accounts are not configured.",,Hydras-AWS-IAM-2.5,Ensure root does not have API keys,"You use an access key (an access key ID and secret access key) to make programmatic requests
to AWS. However, do not use your AWS account (root) access key. The access key for your AWS
account gives full access to all your resources for all AWS services, including your billing
information. You cannot restrict the permissions associated with your AWS account access key.&nbsp;





<b>Remediation:</b>



-Sign in to the AWS Management Console as Root.
-Click on Account Name at the top left and select Security Credentials.
-On the pop up screen Click on Continue to Security Credentials.
-Click on Access Keys.
-Under the Status column if there are any Keys which are &quot;Active&quot;.
-Click on &quot;Make Inactive&quot; and click &quot;Delete&quot;.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Generate a credential report with the command: aws iam generate-credential-report
-Run the following command: aws iam get-credential-report --query 'Content'
--output text | base64 -D | egrep &quot;root|access&quot; | awk -F, '{print
$1,$9,$14}'
-For the &lt;root_account&gt; user ensure access_key_1_active and
access_key_2_active are false.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-USER,Attackers gain unauthorized access to the user account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the user account due to the lack of
configuration of the account, like the security question to reset the password was
configured incorrectly.",,AWS-IAM-2.8,Lack of 2FA,Access to sensitive systems without using MFA to log into the systems.,,Hydras-AWS-IAM-2.4,Enable MFA for IAM console users,"Using a multi-factor authentication (MFA) device enhances the security of the login process.
With MFA, users have a device that generates a unique authentication code (a one-time password,
or OTP) and users must provide both their normal credentials (like their user name and password)
and the OTP.





The MFA device can either be a special piece of hardware, or it can be a virtual device. The
recommendation for all console login accounts is to use MFA to increase the level of security of
the login process.




<b>Remediation:</b>



-Login to the AWS Management Console as an administrator.
-Select IAM.
-Select Users.
-For each user:

-Select the user.
-Under &quot;Sign-In Credentials&quot; if &quot;Password&quot; is set
to &quot;Yes&quot;.
-Select &quot;Manage MFA Device&quot;.
-Choose the type of MFA.
-Either scan the code or enter your device secret key.
-Enter the Authentication code in &quot;Authentication Code 1&quot; box.
-Wait for the code to change and enter the next code in &quot;Authentication Code 2&quot;
box.
-Click Activate MFA.

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Generate a credential report with the command: aws iam generate-credential-report
-The following command displays a list of all IAM users along with their password
and MFA status: aws iam get-credential-report --output text | base64 -D | cut - d, -f1,4,8
-For any column having password_enabled set to true ensure mfa_active is also set
to true.&nbsp;",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-USER,Attackers gain unauthorized access to the user account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the user account due to the lack of
configuration of the account, like the security question to reset the password was
configured incorrectly.",,AWS-IAM-2.6,The User Account is not configured,"Key security settings such as resetting the password and other password controls are not
configured.",,Hydras-AWS-IAM-2.6,Create a Password Policy enforcing strong passwords,"Enforcing a strong password policy increases resilency and reduces the chances of the password
being compromised either through brute force attempts, keystroke logging tools or stolen
credentials amongst others.



<b>Remediation:</b>



-Login to AWS Console (ensure you have permissions to update IAM).
-Go to IAM Service on the AWS Console.
-Click on Account Settings.
-Set &quot;Minimum password length&quot; to 8 or greater.
-Check &quot;Require at least one uppercase letter&quot;.
-Check &quot;Require at least one lowercase letter&quot;.
-Check &quot;Require at least one number&quot;.
-Check &quot;Require at least one non-alphanumeric character&quot;
-Check &quot;Enable password expiration&quot; and set the period to at least 90
days.
-Check &quot;Prevent password reuse&quot; and set the number to at least 10.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>",Check that exists a mechanisms to ensure that the created passwords are enough strong.,
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authentication,AWS-LOST-ACCESS-USER,Attackers gain unauthorized access to the user account due to the lack of configuration of the account,"Attackers could gain unauthorized access to the user account due to the lack of
configuration of the account, like the security question to reset the password was
configured incorrectly.",,AWS-IAM-2.9,The security policies are exposed in the resources,"The security policies are not configured and the security configurations are exposed for the
attackers.",,Hydras-AWS-IAM-2.9,Enforce employee lifecycle policies,"Regular reviews of accounts on the system should be conducted to ensure that stale accounts
cannot be abused either by those former employees using them or compromised by attackers.



<b>Remediation:</b>&nbsp;&nbsp;

At least every 90 days complete the following:



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.
-Click on Users.
-For any user that should no longer exist:

-select the user,
-click &quot;User Actions&quot;,
-click &quot;Delete&quot;.

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Obtain a list of IAM users by: aws iam list-users --query 'Users[*].UserName'
--output text
-Ensure all users are valid users.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.8,Lack of 2FA,Access to sensitive systems without using MFA to log into the systems.,,Hydras-AWS-IAM-2.10,Enable setting MFA for sensitive API calls,"To the extent that it is practical consider enforcing MFA access for sensitve API calls. For
example, you can require that a user has authenticated with an MFA device in order to be allowed
to terminate an Amazon EC2 instance. This ensures that such high level changes to your AWS
environment are protected with an extra layer of security thus helping to prevent accidental or
malicious damage.



<b>Remediation:</b>

The following is an example of how to create a policy that enforces MFA to terminate
EC2 instances:



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.
-Select &quot;Policies&quot;.
-Select &quot;Create Policy&quot;.
-Select &quot;Create your own policy&quot;.
-Provide a policy name and description.
-In the policy document add the following:&nbsp;


<blockquote>

<i> {</i>


<i> &quot;Version&quot;: &quot;2012-10-17&quot;,</i>


<i> &quot;Statement&quot;: [{</i>


<i> &quot;Effect&quot;: &quot;Allow&quot;,</i>


<i> &quot;Action&quot;: [</i>


<i> &quot;ec2:StopInstances&quot;,</i>


<i> &quot;ec2:TerminateInstances&quot;</i>


<i> ],</i>


<i> &quot;Resource&quot;: [&quot;*&quot;],</i>


<i> &quot;Condition&quot;: {&quot;Bool&quot;: {&quot;aws:MultiFactorAuthPresent&quot;:
&quot;true&quot;}}</i>


<i> }]</i>


<i>}</i>

</blockquote>


-Click &quot;Create policy&quot;.
-The policy may now be added to a group by following the outlines in &quot;Use RBAC
with pre-defined policies added into groups or roles&quot;.
 Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","The following checks that MFA is forced on a policy:



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.&nbsp;
-Select &quot;Policies&quot;.
-In the filter select &quot;Customer Managed Policies&quot;.&nbsp;
-Select the policy to check.
-In the policy document check for the presence of the line: &quot;Condition&quot;:
{&quot;Bool&quot;: {&quot;aws:MultiFactorAuthPresent&quot;: &quot;true&quot;}}",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-1.21,The access keys are generated when the setup of the users is started,"The system doesn't require additional steps to create access keys, the access keys are
generating when the process to create an user is starting. The problem is that these keys can be
in use somewhere in the organization and maybe these keys are not necessary for the user.",,Hydras-AWS-IAM-1.21,Do not setup access keys during initial user setup for all IAM users that have a console password,"<span style="" , Arial;""><span style="""">AWS console defaults the checkbox for
creating access keys to enabled. This results in many access keys being generated unnecessarily.
In addition to unnecessary credentials, it also generates unnecessary management work in
auditing and rotating these keys.

</span><span style=""
font-weight: bold;"">Remediation:
</span><span style="""">Perform the
following to delete access keys that do not pass the audit.</span></span>





-Login to the AWS Management Console.
-Click Services.
-Click IAM.
-Click on Users.
-Click on Security Credentials.
-As an Administrator.

-Click on Delete for keys that were created at the same time as the user profile but
have not been used.

-As an IAM User.

-Click on Delete for keys that were created at the same time as the user profile but
have not been used.


<span style="" , Arial;""><span style="""">Via CLI:&nbsp;</span></span>


<blockquote>


<span style="" , Arial;""><span style="""">aws iam delete-access-key</span></span>


</blockquote>","<span style="""">Perform the following to determine if access keys are rotated as
prescribed:


-Login to the AWS Management Console
-Click Services
-Click IAM
-Click on a User
-Compare the user creation date to the key 1 creation date.
-For any that match, the key was created during initial user setup.
Keys that were created at the same time as the user profile and do not have a
last used date should be deleted.

Via the CLI:


-Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users
along with their access keys utilization:
</span>
<blockquote>
<blockquote>
<span style="""">aws iam generate-credential-report</span>
</blockquote>
</blockquote>
<span style="""">
</span>
<blockquote>
<blockquote>
<span style="""">aws iam get-credential-report --query 'Content' --output text | base64
-d | cut -d, -f1,4,9,11,14,16</span>
</blockquote>
</blockquote>
<span style="""">


-The output of this command will produce a table similar to the following:&nbsp;
</span>
<blockquote>
<blockquote>
<span style="""">user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_</span>
</blockquote>
<blockquote>
<span style="""">key_2_active,access_key_2_last_used_date</span>
</blockquote>
<blockquote>
<span style="""">elise,false,true,2015-04-16T15:14:00+00:00,false,N/A</span>
</blockquote>
<blockquote>
<span style="""">brandon,true,true,N/A,false,N/A</span>
</blockquote>
<blockquote>
<span style="""">rakesh,false,false,N/A,false,N/A</span>
</blockquote>
<blockquote>
<span style="""">helene,false,true,2015-11-18T17:47:00+00:00,false,N/A</span>
</blockquote>
<blockquote>
<span style="""">paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00</span>
</blockquote>
<blockquote>
<span style="""">anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A</span>
</blockquote>
</blockquote>
<span style="""">

-For any user having access_key_last_used_date set to N/A , ensure that access key
is deleted
</span>",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.7,The credentials for the groups and roles are not configured,"The credentials for the groups and roles are not correctly configured and there are user
accounts with more privileges than the necessary.",,Hydras-AWS-EC2-6.3,Apply IAM roles for EC2 instances IAM roles for EC2 instances,"Applications that run on an Amazon EC2 instance need credentials in order to access other AWS
services. To provide credentials to the application in a secure way, use IAM roles. A role is an
entity that has its own set of permissions, but that isn't a user or group. Roles also don't
have their own permanent set of credentials the way IAM users do. In the case of Amazon EC2, IAM
dynamically provides temporary credentials to the EC2 instance, and these credentials are
automatically rotated for you.



When you launch an EC2 instance, you can specify a role for the instance as a launch
parameter. Applications that run on the EC2 instance can use the role's credentials when they
access AWS resources. The role's permissions determine what the application is allowed to do. It
is recommended that all EC2 instances be launched with a role, even if the role has no
permissions (as they can be added later if desired).



<b>Remediation:</b>



-Login to the AWS Management Console.
-Select EC2 from the services menu.
-Select &quot;Launch Instance&quot;.
-Complete the wizard until step 3 at which point ensure an IAM role is selected for the
&quot;IAM role&quot; option (note the role must already exist).
-Complete the wizard to launch the instance.
NB: You cannot add a role to an instance that has been launched without one. In these
cases create an AMI from an existing instance and launch a new instance, assigning an IAM role
as detailed above.



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.
-Select EC2 from the services menu.
-Select &quot;Instances&quot; from the left hand menu.
-For each instance in the list:

-select the instance
-in the preview pane confirm the instance has an &quot;IAM Role&quot;
assigned (if a hypen &quot;-&quot; is shown then your instance has no role
assigned).",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.7,The credentials for the groups and roles are not configured,"The credentials for the groups and roles are not correctly configured and there are user
accounts with more privileges than the necessary.",,Hydras-AWS-IAM-1.20,Create an IAM role for managing incidents with AWS,"<span style="" , Arial;""><span style="""">AWS provides a support center that can be
used for incident notification and response, as well as technical support and customer services.
Create an IAM Role to allow authorized users to manage incidents with AWS Support.
<br
/></span><span style="" font-weight: bold;"">Remediation:
</span><span
style="""">Using the Amazon unified command line interface, create an IAM role for managing
incidents with AWS:


-Create a trust relationship policy document that allows &lt;iam_user&gt; to
manage AWS incidents, and save it locally as /tmp/TrustPolicy.json:
</span></span>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">{</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;Version&quot;: &quot;2012-10-17&quot;,</span></span>
</blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;Statement&quot;: [</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">{</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;Effect&quot;: &quot;Allow&quot;,</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;Principal&quot;: {</span></span>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;AWS&quot;: &quot;&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;iam_user&gt;&lt;/span&gt;&quot;</span></span>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">},</span></span>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">&quot;Action&quot;: &quot;sts:AssumeRole&quot;</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">}</span></span>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">]</span></span>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">}</span></span>
</blockquote>
</blockquote>

-Create the IAM role using the above trust policy:&nbsp;

<blockquote>
<blockquote>
aws iam create-role --role-name &lt;aws_support_iam_role&gt;
--assume-role-policy-document file:///tmp/TrustPolicy.json
</blockquote>
</blockquote>

-Attach 'AWSSupportAccess' managed policy to the created IAM role:&nbsp;

<blockquote>
<blockquote>
aws iam attach-role-policy --policy-arn &lt;iam_policy_arn&gt; --role-name &lt;aws_support_iam_role&gt;
</blockquote>
</blockquote>","<span style="" , Arial;"">Using the Amazon unified command line interface:


-List IAM policies, filter for the 'AWSSupportAccess' managed policy, and note the
&quot;Arn&quot; element value:&nbsp;
</span>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">aws iam list-policies --query &quot;Policies[?PolicyName
== 'AWSSupportAccess']&quot;</span></span>
</blockquote>
</blockquote>
<span style="" , Arial;"">

-Check if the 'AWSSupportAccess' is attached to any IAM user, group or role:&nbsp;
</span>
<blockquote>
<blockquote>
<span style="" , Arial;""><span style="""">aws iam list-entities-for-policy
--policy-arn &lt;iam_policy_arn&gt;</span></span>
</blockquote>
</blockquote>","https://docs.aws.amazon.com/cli/latest/reference/iam/attach-role-policy.html
https://docs.aws.amazon.com/cli/latest/reference/iam/list-entities-for-policy.html
https://docs.aws.amazon.com/cli/latest/reference/iam/list-policies.html
https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.htm"
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.7,The credentials for the groups and roles are not configured,"The credentials for the groups and roles are not correctly configured and there are user
accounts with more privileges than the necessary.",,Hydras-AWS-IAM-2.7,Enforce Least Privilege,"Granting least privilege ensures that users only have the permissions required to complete
their jobs rather than additional privileges that are not required. Following this model ensures
that, should an account be compromised, the blast radius of damage is limited.




<b>Remediation:</b>


-Allocate privileges via groups or roles via the recommendation in &quot;Use RBAC
with pre-defined policies added into groups or roles&quot;.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Follow the audit check in &quot;Use RBAC with pre-defined policies added into
groups or roles&quot;.
-Ensure the privileges granted to these groups or roles only give the user the
ability to perform their and no more.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.7,The credentials for the groups and roles are not configured,"The credentials for the groups and roles are not correctly configured and there are user
accounts with more privileges than the necessary.",,Hydras-AWS-IAM-2.8,Apply RBAC with pre-defined policies added into groups or roles,"Instead of defining permissions for individual IAM users, it's usually more convenient to
create groups that relate to job functions (administrators, developers, accounting, etc.),
define the relevant permissions for each group, and then assign IAM users to those groups. All
the users in an IAM group inherit the permissions assigned to the group. That way, you can make
changes for everyone in a group in just one place. As people move around in your company, you
can simply change what IAM group their IAM user belongs to. This method is know as Role Based
Access Control (RBAC).



<b>Remediation:
</b>Remove privilege granted directly to a user:



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.
-Click on Users.
-For each user complete the following:

-Select the user.
-Click on the Permissions tab.
-Expand &quot;Managed Policies&quot;.
-Click &quot;Detach Policy&quot;.
-Expand &quot;Inline Policies&quot;.
-Click &quot;Remove Policy&quot;.

Create a Group and add a user:



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.
-Select Groups and click Create New Group.&nbsp;
-In the Group Name box, type the name of the group and click Next Step.&nbsp;
-In the list of policies, select the check box for each policy that you want to apply
to all members of the group. Click Next Step.
-Click Create Group.
-Click the new Group and select the &quot;Users&quot; tab.
-Click &quot;Add Users to Group&quot;.
-Select the users and click &quot;Add Users&quot;.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Obtain a ilist of IAM users by: aws iam list-users --query 'Users[*].UserName'
--output text
-Run the following to dermine if they have policies directly attached:&nbsp;

<blockquote>
<blockquote>

aws iam list-attached-user-policies --user-name user

</blockquote>
<blockquote>




</blockquote>
<blockquote>

aws iam list-user-policies --user-name user

</blockquote>
</blockquote>",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-EXPIRATION-DATE,The password expiration is not established,"The password expiration is not configured and users are not obliged to change their passwords.
Not change frequently the passwords gives facilities to attackers to obtain them.",,Hydras-AWS-IAM-2.11,Configure password expiration,"Change access keys regularly, and make sure that all IAM users in your account do as well.
That way, if an access key is compromised without your knowledge, you limit how long the
credentials can be used to access your resources. Credential reports can be used to determine
how long access keys have been active for.



<b>Remediation:</b>



-Sign in to the AWS Management Console (with IAM update privileges).
-Go to IAM Service on the AWS Console.
-Click on Users.
-Select the user you wish to rotate the key for.
-Under access keys click &quot;Create Access Key&quot; (do not touch the
existing key yet).
-Click &quot;Download credentials&quot; or &quot;Show credentials&quot;
so that you have a record of them.
-Update any applications with the new credentials and test (we recommend to leave a few
days or a week for testing).
-Once complete complete 1-4 above and for the key which needs rotating click &quot;Make
Inactive | Delete&quot; and click &quot;Deactive&quot;.
-Once you are confident you will no longer need the key (wait several more days) repeat
1-4 and select &quot;Delete&quot; for the inactive key.



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Generate a credential report: aws iam generate-credential-report
-Check the access keys created time: aws iam get-credential-report --query
'Content' --output text | base64 -D | awk -F, '{print $1,$9,$10,$14,$15}'&nbsp;
-For each access_key_1_active and access_key_9_active that is set to True ensure
the created date is within the last 90 days.",
HYDRAS-AWS-IAM,AWS Identity and Access Management,Authorization,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due of the
user accounts or role groups are not well defined and configured. Therefore, attackers
can make changes without the root approval.&nbsp;",,AWS-IAM-2.12,The rotation keys is not configured,The rotation keys are not configured to avoid to use old keys.,,Hydras-AWS-IAM-2.12,Rotate KMS CMK Keys at least every year,"Rotating keys regularly reduces the impact of a compromised key being used to access data
since old keys cannot be used once rotated.&nbsp;

&nbsp;


<b>Remediation:</b>



-List keys with:&nbsp; &quot;aws kms list-keys&quot;.
-For each key enable rotation: &quot;aws kms enable-key-rotation --key-id &lt;key_id&gt;&quot;.&nbsp;&nbsp;



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-List keys with: aws kms list-keys
-For each key check for rotation:&nbsp;aws kms get-key-rotation-status --key-id
&lt;key_id&gt;",
HYDRAS-AWS-LOG,AWS Logging,API Logging and Auditing,UNAUDITABLE-CHANGES-AWS,Attackers make undetected and unaudited changes to system configurations,"If audit trails are not properly protected, an attacker could gain access to the system,
modify the status of the resources or exfiltrate sensitive data without being noticed.",,AWS-Logging-3.3,Audit logs are accesible,"The audit logs are not encrypted and they can be accessed by attackers and obtain sensitive data
in clear text.",,Hydras-AWS-Logging-3.3,Ensure CloudTrail logs are not publically available,"Since cloudtrail logs capture all API calls for the AWS account they should be stored in an S3
bucket that is not accessible to the public. Applying the correct bucket policy helps ensure the
confidentiality of the data.



<b>Remediation:</b>



-Sign in to the AWS Management Console (with s3 update privileges).
-Select s3 from the services list.
-Right-click on the bucket you have used for &quot;cloudtrail&quot; and click
&quot;Properties&quot;.
-In the Properties pane, click the Permissions tab.&nbsp;
-Select the row that grants permission to &quot;Everyone&quot; or &quot;Any
Authenticated User&quot;.
-Uncheck all the permissions granted to Everyone or Any Authenticated User.
-Click Save to save the ACL.&nbsp;
-If the Edit bucket policy button is present, click it.
-Remove any Statement having an Effect set to Allow and a Principal set to *.&nbsp;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Obtain the bucket name of the cloudtrail:&nbsp;aws cloudtrail describe-trails
--query 'trailList[*].S3BucketName'
-Ensure &quot;AllUsers&quot; is not granted access to the bucket:&nbsp;aws
s3api get-bucket-acl --bucket &lt;bucket_name&gt; --query
'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'
-Ensure &quot;Authenticated Users&quot; is not granted access to the
bucket: aws s3api get-bucket-acl --bucket &lt;bucket_name&gt; --query
'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated Users`]'
-Validate the bucket policy does not grant access to all:&nbsp;aws s3api
get-bucket-policy --bucket &lt;bucket_name&gt;
-Check that the above command does not provide a principal of *, with EFFECT set to
ALLOW.&nbsp;",
HYDRAS-AWS-LOG,AWS Logging,API Logging and Auditing,UNAUDITABLE-CHANGES-AWS,Attackers make undetected and unaudited changes to system configurations,"If audit trails are not properly protected, an attacker could gain access to the system,
modify the status of the resources or exfiltrate sensitive data without being noticed.",,AWS-Logging-3.3,Audit logs are accesible,"The audit logs are not encrypted and they can be accessed by attackers and obtain sensitive data
in clear text.",,Hydras-AWS-Logging-3.5,Encrypt CloudTrail logs using KMS,"By default, the log files delivered by CloudTrail to your bucket are encrypted by Amazon
server-side encryption with Amazon S3-managed encryption keys (SSE-S3). To provide a security
layer that is directly manageable, you can instead use server-side encryption with AWS
KMS–managed
keys (SSE-KMS) for your CloudTrail log files. This provides several advantages:



-You can create and manage the CMK encryption keys yourself.&nbsp;
-You can use a single CMK to encrypt and decrypt log files for multiple accounts across
all regions.&nbsp;
-You have control over who can use your key for encrypting and decrypting CloudTrail
log files.&nbsp;
-You can assign permissions for the key to the users in your organization according to
your requirements.
-You have enhanced security. With this feature, in order to read log files, you now
need to meet two conditions:&nbsp;

-you must have S3 read permission on the bucket, and&nbsp;
-you must be granted decrypt permission by the CMK policy.&nbsp;

Because S3 automatically decrypts the log files for requests from users authorized to
use the CMK, SSE-KMS encryption for CloudTrail log files is backward compatible with existing
applications that read CloudTrail log data.&nbsp;




<b>Remediation:</b>&nbsp;&nbsp;



-Sign in to the AWS Management Console (with cloudtrail update permissions).
-Select CloudTrail from the services menu.
-Select &quot;Trails&quot;.
-Click on a Trail.
-Under the S3 section click on the edit button.
-Click Advanced.
-Set &quot;Encrypt Log Files&quot; to &quot;Yes&quot;.
-Set &quot;Create a new KMS key&quot; to &quot;Yes&quot;.
-In &quot;KMS key&quot; type a name for your key.
-Click &quot;Save&quot;.
 Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","<blockquote>
aws cloudtrail describe-trails
</blockquote>Check that KMS is enabled if the &quot;KmsKeyId&quot; property is
set.",
HYDRAS-AWS-LOG,AWS Logging,API Logging and Auditing,UNAUDITABLE-CHANGES-AWS,Attackers make undetected and unaudited changes to system configurations,"If audit trails are not properly protected, an attacker could gain access to the system,
modify the status of the resources or exfiltrate sensitive data without being noticed.",,AWS-Logging-3.1,Non-auditable API calls in all regions,The API call to the resources is not audited and the actions are not recorded into the logs.,,Hydras-AWS-Logging-3.1,Enable Cloudtrail in all regions,"Cloudtrail records events of all API calls made within a AWS account. This enables security
analysis, resource change tracking, and compliance auditing. Cloudtrail should be enabled in all
regions, even if they are not being used, to identify unintended or accidental changes.




<b>Remediation</b>:

Create a global trail using a previously created S3 bucket:


<blockquote>
aws cloudtrail create-trail --name &lt;trail_name&gt; --s3-bucket-name &lt;s3-bucket-name&gt;
--is-multi-region-trail
</blockquote>

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Run: aws cloudtrail describe-trails
-Ensure &quot;IsMultiRegionTrail&quot; = TRUE",
HYDRAS-AWS-LOG,AWS Logging,API Logging and Auditing,UNAUDITABLE-CHANGES-AWS,Attackers make undetected and unaudited changes to system configurations,"If audit trails are not properly protected, an attacker could gain access to the system,
modify the status of the resources or exfiltrate sensitive data without being noticed.",,AWS-Logging-3.4,Non-auditable actions in the resources,The actions in the resources are not audited and not recorded into the logs.,,Hydras-AWS-Logging-3.2,Enable CloudTrail log file validation,"Enabling log file validation will provide additional integrity checking of CloudTrail as it
creates a digest for each log file it writes to S3. These digests can then be used to determine
if a log has been modified since being written




<b>Remediation:
</b>
<blockquote>
aws cloudtrail update-trail --name &lt;trail_name&gt; --enable-log-file-validation
</blockquote>

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","<blockquote>
aws cloudtrail describe-trails&nbsp;
</blockquote>Ensure LogFileValidationEnabled = true (for each trail)",
HYDRAS-AWS-LOG,AWS Logging,API Logging and Auditing,UNAUDITABLE-CHANGES-AWS,Attackers make undetected and unaudited changes to system configurations,"If audit trails are not properly protected, an attacker could gain access to the system,
modify the status of the resources or exfiltrate sensitive data without being noticed.",,AWS-Logging-3.4,Non-auditable actions in the resources,The actions in the resources are not audited and not recorded into the logs.,,Hydras-AWS-Logging-3.4,Integrate the CloudTail logs into Cloudwatch logs,"One way to work with cloudtrail logs is to send them to cloudwatch logs which allows you to
define metric filters for alerting and monitoring. This allows you to take immediate action if a
certail threshold has been met. Enabling this provides the opportunity to monitor for sensitve
account activity.



<b>Remediation:</b>



-Sign in to the AWS Management Console (with cloudtrail update permission).
-Select Cloudtrail from the services list.
-Under All Buckets select the target bucket you want to check.
-Select &quot;Properties&quot; then &quot;Trails&quot;.
-Click on each trail where no CloudWatch Logs are defined.
-Go to the &quot;CloudWatch Logs&quot; section and click on &quot;Configure&quot;.
-Define a new or select an existing log group and click &quot;Continue&quot;.
-Configure the IAM Role which will deliver CloudTrail events to CloudWatch Logs.
-Create/Select an IAM Role and Policy Name.
-Click Allow.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>

&nbsp;","<blockquote>
aws cloudtrail get-trail-status --name &lt;trail_name&gt;
</blockquote>Ensure the &quot;LatestcloudwatchLogdDeliveryTime&quot; property
is set to a recent time (ie within the latest day or so).",
HYDRAS-AWS-LOG,AWS Logging,AWS Resource Logging,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,AWS-Logging-3.4,Non-auditable actions in the resources,The actions in the resources are not audited and not recorded into the logs.,,Hydras-AWS-Logging-3.6,Enable S3 Bucket logging,"S3 Bucket Access Logging generates log files that contain access records for each request made
to an S3 bucket. By enabling this it is possible to capture events relating to the objects
within that bucket thus helping to capture potential security issues or identifying threats. It
is recommended to enable S3 bucket logging on any S3 bucket that contains sensitive data and
stored the logs in a separate bucket for security analysis.



<b>Remediation:
</b>

-Sign in to the AWS Management Console (with S3 update access).
-Select S3 from the services menu.
-Under All Buckets click on the S3 bucket you wish to enable logging.
-Click on Properties in the top right of the console.
-Under Bucket:&lt;bucket_name&gt; click on Logging.
-Click on the &quot;Enabled&quot; checkbox.
-Select a &quot;Target Bucket&quot; to store the logs.
-Select a &quot;Target Prefix&quot; for the logs.
-Click &quot;Save&quot;.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Sign in to the AWS Management Console (with S3 update access).
-Select S3 from the services menu.
-Under All Buckets click on the S3 bucket you wish to enable logging.&nbsp;
-Click on Properties in the top right of the console.&nbsp;
-Under Bucket:&lt;bucket_name&gt; click on Logging.
-Ensure &quot;Enabled&quot; is checked.",
HYDRAS-AWS-LOG,AWS Logging,AWS Resource Logging,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,AWS-Logging-3.8,Non-centrality audit logs,"The audit logs are not stored in a central system. Therefore, the audit logs cannot be
exploited correctly by the security personnel.",,Hydras-AWS-Logging-3.8,Export EC2 OS logs to cloudwatch logs,"Cloudwatch logs is an AWS service that allows you to send logs from an EC2 instance to
cloudwatch via an agent installed locally on the macine. The logs are then stored centrally
within cloudwatch logs and metric alerts can be configured so that security incidents can be
reported to the security team. It is recommended to enable cloudwatch log monitoring on all EC2
servers.




<b>Remediation:
</b>Follow the directions provided in &quot;http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/EC2NewInstanceCWL.html&quot;
to install and enable Cloudwatch Logs on a new EC2 instance.



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Sign into the management console.
-Select Cloudwatch from the services menu.&nbsp;&nbsp;
-In the left pane click &quot;Logs&quot;.&nbsp;&nbsp;
-Click on your log group.
-Click on your log stream.
-Ensure event data is being captured as per the logs on your machine.",
HYDRAS-AWS-LOG,AWS Logging,AWS Resource Logging,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,AWS-Logging-3.7,Unaudited connections with the resources,"The connections with the applications and with the databases cannot be audited and not
detected.",,Hydras-AWS-Logging-3.7,Enable VPC flow logs,"VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
incidents that may be occuring across the network.





<b>Remediation:</b>



-Sign into the management console.
-Select VPC from the services menu.
-In the left paneclick &quot;Your VPCs&quot;.
-Select a VPC.
-Select the Flow Logs tab from the preview panel.
-Select &quot;Create Flow Log&quot;.
-Choose a role (note this must be pre-created. Follow the link provided in the text
underneath &quot;Role&quot; for help).
-Select a &quot;Destination Log Group&quot;.
-Click &quot;Create flow Log&quot;.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Sign into the management console.
-Select VPC from the services menu.
-In the left pane click &quot;Your VPCs&quot;.
-Select a VPC.
-Select the Flow Logs tab from the preview panel.
-Ensure a Log Flow exists that has Active in the Status column.",
HYDRAS-AWS-LOG,AWS Logging,AWS Resource Logging,UNAUDITABLE-CHANGES-RESOURCES-AWS,Attackers make undetected and unaudited changes in the resources,"If audit trails in the resources are not enabled or not protected, attackers could gain
access to the system and modify or delete data from the resources and the changes are
not detected.",,AWS-Logging-3.9,Unaudited resources changes,"The changes in the applications and in the databases and these changes are not detected and
not audited.",,Hydras-AWS-Logging-3.9,Enable AWS Config across all regions,"AWS Config tracks configuration changes to resources as they occur and is therefore a good
source of identifying whether unintentional or malicious changes have occured to resources with
the AWS account.



<b>Remediation:</b>



-Sign in to the AWS Management Console (with Config update permissions).
-Select Config from the services menu.
-Define which resources you want to record in the selected region.
-Choose to include global resources (IAM resources).
-Specify an S3 bucket.
-Create an SNS Topic&nbsp;&nbsp;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>

&nbsp;","-Sign in to the AWS Management Console (with Config update permissions)&nbsp;
-Select Config from the services menu&nbsp;
-If presented with Setup AWS Config follow the procedure highlighted in the
remediation section&nbsp;
-On the Resource inventory page, Click on &quot;edit&quot;&nbsp;
-Ensure 1 or both check-boxes under &quot;All Resources&quot; is checked.&nbsp;

-Include global resources related to IAM resources&nbsp;
-which needs to be enabled in 1 region only.

-Ensure the correct S3 bucket has been defined.&nbsp;
-Ensure the correct SNS topic has been defined.&nbsp;
-Repeat steps 2 to 7 for each region (you'll need to change region in the top right
corner of the AWS management console to do this).",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.5,Brute force attempts on the MS Azure management console cannot be detected,"The failure connection attempts (brute force) must be audited and monitored and the
correspondent personnel must be alerted and informed.",,Hydras-AWS-Monitoring-4.5,Create management console login failure alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is management
console login failures. The management console is the AWS account GUI where administration
activity is performed and is therefore a primary target for brute force attempts. To identify
these attempts alerts for login failures should be enabled as this can highlight suspicious
activity.





<b>Remediation:
</b>

-Create a metric filter that checks for console login failures: aws logs
put-metric-filter --log-group-name &lt;group&gt; --filter-name &lt;name&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{ ($.eventName = ConsoleLogin)
&amp;&amp; ($.errorMessage = &quot;Failed authentication&quot;) }'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{ ($.eventName = ConsoleLogin) &amp;&amp; ($.errorMessage = \&quot;Failed
authentication\&quot;) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.4,Changes in the security configurations can be not detected,"Monitoring and alerting for security configurations are not configured and changes cannot be
detected.&nbsp;",,Hydras-AWS-Monitoring-4.1,Create billing alerts to identify unusual spend,"By setting billing alarms you can monitor your AWS spend and be alerted if it exceeds certain
thresholds thus protecting you from accruing unnecessary charges.



<b>Remediation:</b>



-Sign in to the AWS Management Console and open the Billing and Cost Management console
at https://console.aws.amazon.com/billing/home#/.&nbsp;
-On the navigation pane, choose Preferences.&nbsp;
-Select the Receive Billing Alerts check box.&nbsp;
-Choose Save preferences.&nbsp;
-Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&nbsp;
-If necessary, change the region on the navigation bar to US East (N. Virginia). The
billing metric data is stored in this region, even for resources in other regions.&nbsp;
-On the navigation pane, under &quot;Metrics&quot;, choose &quot;Billing&quot;.&nbsp;
-In the list of billing metrics, select the check box next to Currency USD, for the
metric named EstimatedCharges. Define the alarm as follows:

-If you want the alarm to trigger as soon as you go over the free tier, set &quot;When
my total AWS charges for the month exceed&quot; to $.01. This means that you'll receive a
notification as soon as you incur a charge. Otherwise, set it to the amount you want to trigger
the alarm, and you will be notified when you go over that amount.&nbsp;
-Choose the &quot;New list&quot; link next to the &quot;send a notification
to&quot; box.&nbsp;
-When prompted, enter your email address or choose your Amazon SNS notification from
the drop down.&nbsp;
-Choose &quot;Create Alarm&quot;.&nbsp;

-In the &quot;Confirm new email addresses&quot; dialog box, confirm the email
address or choose &quot;I will do it later&quot;. If you don't confirm the email address
now, the alarm remains in the Pending confirmation status until you do so, and does not send an
alert. To view the status of your alarm, choose &quot;Alarms&quot; in the navigation
panel.
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Sign in to the AWS Management Console and open the Billing and Cost Management
console at https://console.aws.amazon.com/billing/home#/.&nbsp;
-On the navigation pane, choose Preferences.&nbsp;
-Ensure the &quot;Receive Billing Alerts&quot; check box is checked.&nbsp;
-Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&nbsp;
-If necessary, change the region on the navigation bar to US East (N. Virginia).
The billing metric data is stored in this region, even for resources in other regions.&nbsp;
-On the navigation pane, under &quot;Alarms&quot;, check for one called
&quot;Billing&quot;.&nbsp;
-Click on the alert if it exists and select the checkbox in the first column.
-In the preview pane check that the &quot;EstimatedCharges&quot; threshold
is set to the correct value and that the &quot;Actions&quot; is send an alarm to a
valid email address.",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.4,Changes in the security configurations can be not detected,"Monitoring and alerting for security configurations are not configured and changes cannot be
detected.&nbsp;",,Hydras-AWS-Monitoring-4.4,Create cloudtrail configuration changes alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is changes to
cloudtrail. Since cloudtrail is the actual utility logging API calls it's security is paramount
to ensuring that this continues. Therefore alerting on changes to cloudtrail activity can
prevent a malious user switching off the logging in order to carry out untracked activities.



<b>Remediation:&nbsp;&nbsp;</b>



-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn&nbsp;
-Get a list of all associated metric filters for this &lt;group&gt;:&nbsp;aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) ||
($.eventName = StartLogging) || ($.eventName = StopLogging) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;&nbsp;



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName =
DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.4,Changes in the security configurations can be not detected,"Monitoring and alerting for security configurations are not configured and changes cannot be
detected.&nbsp;",,Hydras-AWS-Monitoring-4.9,Create AWS Config configuration change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is AWS Config
changes. AWS config tracks configuration changes within the environment and is a useful change
management tool. Therefore alerting on config changes ensures the continued visibility of AWS
configuration items.

&nbsp;


<b>Remediation:</b>



-Create a metric filter that checks for AWS Config changes:&nbsp;


<blockquote>
<blockquote>

aws logs put-metric-filter&nbsp;

</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>

--log-group-name &lt;group&gt;&nbsp;


--filter-name &lt;name&gt;&nbsp;


--metric- transformations &lt;value&gt;&nbsp;


--filter-pattern '{($.eventSource = config.amazonaws.com) &amp;&amp;
(($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}'&nbsp;

</blockquote>
</blockquote>
</blockquote>


-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps:


<blockquote>
<blockquote>

aws cloudwatch put-metric-alarm&nbsp;

</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>

--alarm-name &lt;value&gt;&nbsp;


--metric-name &lt;metric_filter_name&gt;&nbsp;


--statistic Sum&nbsp;


--period 300&nbsp;


--threshold 1&nbsp;


--comparison-operator GreaterThanOrEqualToThreshold&nbsp;


--evaluation-periods 1&nbsp;


--namespace &lt;CloudTrailMetrics&gt;&nbsp;


--alarm-actions &lt;topic_arn&gt;

</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>




</blockquote>
</blockquote>

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following:

<blockquote>
<blockquote>
&quot;filterPattern&quot;: &quot;{($.eventSource = config.amazonaws.com) &amp;&amp;
(($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}&quot;&nbsp;
</blockquote>
</blockquote>

-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.2,Excessive use of administrator accounts,"The administrator accounts are used for all actions, not only for administrative actions. This
is because these users have not got a personal or a user account to do the daily actions.",,Hydras-AWS-Monitoring-4.2,Create root account usage alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is usage of the
root account. This account should not be used on a day to day basis due to its full unrestricted
privilege therefore usage should be by exception. Monitoring this usage should capture any
suspicous activity used on the account.





<b>Remediation:</b>



-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws logs
describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
$.userIdentity.type = \&quot;Root\&quot; &amp;&amp; $.userIdentity.invokedBy NOT
EXISTS &amp;&amp; $.eventType != \&quot;AwsServiceEvent\&quot; } &quot;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;&nbsp;



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
$.userIdentity.type = \&quot;Root\&quot; &amp;&amp; $.userIdentity.invokedBy
NOT EXISTS &amp;&amp; $.eventType != \&quot;AwsServiceEvent\&quot; } &quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&nbsp;aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED_ACCESS_SYSTEMS_AWS,Attackers access to the systems without being detected,"Attackers gain access to the systems and they are not detected and the changes of the
attackers could not be detected and audited.",,AWS-Monitoring-4.3,Lack of 2FA,"Login to the console without using the Multi-factor Authentication (MFA) and they are not
detected. The connection without the MFA must be audited and monitored, the correct security
group must be informed and they must validate this connection.",,Hydras-AWS-Monitoring-4.3,Create management console login alerts when MFA is not used,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is login on the
console without MFA. Since logging on at the console should be restricted to only those users
with an active MFA this alert will highlight those with password only access. This helps to
capture weaker login procedures (password only) as they occur.



<b>Remediation:</b>



-Create a metric filter that checks for console login without MFA: aws logs
put-metric-filter --log-group-name &lt;cloudwatch-logs-group&gt; --filter-name &lt;name&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{
$.userIdentity.sessionContext.attributes.mfaAuthenticated != &quot;true&quot; }'
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn&nbsp;
-Get a list of all associated metric filters for this &lt;group&gt;:&nbsp;
aws logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{ $.userIdentity.sessionContext.attributes.mfaAuthenticated != &quot;true&quot;
}&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&nbsp;aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,AWS-Monitoring-4.7,Changes in the data encryption configuration cannot be detected,"The changes on the database encryption must be audited and monitored. When there are changes
on the database encryption, the security group must be alerted.",,Hydras-AWS-Monitoring-4.7,Create KMS CMK Deletion alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is KMS CMK
deletions or deactivation. KMS CMK can be used as the master keys for encrypting data and these
keys are stored within AWS. However if these keys are disabled or deactivated then the data that
was encrypted with them cannot be accessed. Therefore any scheduled deletions or deactivation of
keys should be monitored.





<b>Remediation:</b>



-Create a metric filter that checks for KMS CMK disables or deletions: aws logs
put-metric-filter --log-group-name &lt;group&gt; --filter-name &lt;name&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{($.eventSource =
kms.amazonaws.com) &amp;&amp;
(($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion))}'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;&nbsp;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{($.eventSource = kms.amazonaws.com) &amp;&amp;
(($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion))} }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&nbsp;aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic:&nbsp; aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,AWS-Monitoring-4.4,Changes in the security configurations can be not detected,"Monitoring and alerting for security configurations are not configured and changes cannot be
detected.&nbsp;",,Hydras-AWS-Monitoring-4.6,Create IAM Policy change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is management
IAM policy changes. IAM manages authorisations and authentication controls with AWS and
therefore it is virtal that unauthorised changes are detected. Enabling monitoring of these
changes ensures that these policies remain intact and as desired.



<b>Remediation:</b>



-Create a metric filter that checks for IAM policy changes: aws logs put-metric-filter
--log-group-name &lt;group&gt; --filter-name &lt;name&gt; --metric-
transformations &lt;value&gt; --filter-pattern
'{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=Delete
UserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=P
utUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=Cr
eatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)|
|($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUs
erPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above:aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{($.eventSource
= kms.amazonaws.com) &amp;&amp;
(($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion))} }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,AWS-Monitoring-4.4,Changes in the security configurations can be not detected,"Monitoring and alerting for security configurations are not configured and changes cannot be
detected.&nbsp;",,Hydras-AWS-Monitoring-4.8,Create s3 bucket policy change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is S3 bucket
policy changes. S3 bucket policies are a resource based policy that provide authorisations on S3
buckets.





Making sure that their integrity remains intact is vital in ensuring the data within the S3
bucket remains secure and authorisations intact. Therefore s3 bucket policy changes should be
alerted upon






<b>Remediation:</b>



-Create a metric filter that checks for S3 Bucket policy changes:


<blockquote>
<blockquote>

aws logs put-metric-filter --log-group-name &lt;group&gt; --filter-name &lt;value&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{ ($.eventSource =
s3.amazonaws.com) &amp;&amp; (($.eventName = PutBucketAcl) || ($.eventName =
PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) ||
($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName =
DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName =
DeleteBucketReplication)) }'

</blockquote>
</blockquote>


-Create an SNS topic for notifications:


<blockquote>
<blockquote>

aws sns create-topic --name &lt;topic_name&gt;

</blockquote>
</blockquote>


-Create an SNS subscription to the topic created above&nbsp;


<blockquote>
<blockquote>

aws sns subscribe --topic-arn &lt;topic_arn&gt; --protocol email --notification-endpoint
&lt;email@example.com&gt;

</blockquote>
</blockquote>


-Create an alarm based on the above steps:


<blockquote>
<blockquote>

aws cloudwatch put-metric-alarm --alarm-name &lt;value&gt; --metric-name &lt;metric_filter_name&gt;
--statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold
--evaluation-periods 1 --namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;

</blockquote>
</blockquote>
<blockquote>




</blockquote>

Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;:&nbsp;
aws logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
($.eventSource = s3.amazonaws.com) &amp;&amp; (($.eventName = PutBucketAcl) ||
($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName =
PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName =
DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName =
DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,AWS-Monitoring-4.10,Changes in the security groups cannot be detected,"The changes in the security groups must be audited and monitored and the correspondent
personnel must approve these changes. If the situation is not the correct, attackers can access
to security systems.",,Hydras-AWS-Monitoring-4.10,Create security group change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is security
group changes. Security groups are analagous to firewalls and therefore protect inbound and
outbound access to &amp; from AWS resources such as ec2 instances and RDS databases (amongst
other things. Therefore alerting on changes to security groups helps ensure that the resources
protected by them are not exposed.&nbsp;

&nbsp;


<b>Remediation:</b>



-Create a metric filter that checks for security group changes: aws logs
put-metric-filter --log-group-name &lt;group&gt; --filter-name &lt;name&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{ ($.eventName =
AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName =
RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName =
CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup)}'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName =
AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName
= RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName =
DeleteSecurityGroup)}&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-NETWORK-AWS,Sensitive data is compromised through undetected network access,"Attackers gain undetected access to the network systems and the changes of the attackers
could not be audited or detected.",,AWS-Monitoring-4.12,Changes in the network configuration cannot be detected,"The changes in the network configurations (NACLs, route and gateway tables) are not detected
because the monitorization and alerts of the network configuration are not configured to detect
these changes.",,Hydras-AWS-Monitoring-4.11,Create VPC NACL change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is VPC NACL
changes. Network Access Control Lists (NACLS) control inbound and outbound access to &amp;
from AWS subnets and work like packet filters to protect the network. Therefore alerting on
changes to NACLS helps ensure that the subnets protected by them are not exposed.&nbsp;

&nbsp;


<b>Remediation:</b>



-Create a metric filter that checks for NACL changes: aws logs put-metric-filter
--log-group-name &lt;group&gt; --filter-name &lt;name&gt; --metric-
transformations &lt;value&gt; --filter-pattern '{ ($.eventName = CreateNetworkAcl) ||
($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName =
DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName =
ReplaceNetworkAclAssociation) }'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) ||
($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName =
ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-NETWORK-AWS,Sensitive data is compromised through undetected network access,"Attackers gain undetected access to the network systems and the changes of the attackers
could not be audited or detected.",,AWS-Monitoring-4.12,Changes in the network configuration cannot be detected,"The changes in the network configurations (NACLs, route and gateway tables) are not detected
because the monitorization and alerts of the network configuration are not configured to detect
these changes.",,Hydras-AWS-Monitoring-4.12,Create VPC route table change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is VPC route
table changes. VPC route tables provide a means of routing network traffic between subnets and
via gateways and ensures traffic flows via the correct path. Therefore alerting on changes to
route tables ensuring traffic continues to flow as expected.&nbsp;

&nbsp;


<b>Remediation:
</b>

-Create a metric filter that checks for VPC route table changes: aws logs
put-metric-filter --log-group-name &lt;group&gt; --filter-name &lt;name&gt;
--metric- transformations &lt;value&gt; --filter-pattern '{ ($.eventName = CreateRoute)
|| ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName =
ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute)
|| ($.eventName = DisassociateRouteTable) }'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails&nbsp;
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn.
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following:&nbsp;&quot;filterPattern&quot;:
&quot;{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName
= ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName =
DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&nbsp;aws
cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-MON,AWS Monitoring,Cloudwatch Metric Alerts,UNAUTHORIZED-ACCESS-NETWORK-AWS,Sensitive data is compromised through undetected network access,"Attackers gain undetected access to the network systems and the changes of the attackers
could not be audited or detected.",,AWS-Monitoring-4.12,Changes in the network configuration cannot be detected,"The changes in the network configurations (NACLs, route and gateway tables) are not detected
because the monitorization and alerts of the network configuration are not configured to detect
these changes.",,Hydras-AWS-Monitoring-4.13,Create VPC gateway change alerts,"When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
to identify suspicious API activity. One such activity that should be monitored is VPC gateway
changes. VPC gateways are used as a means of sending traffic outside of a VPC (ie to the
internet) and are vital in ensuring traffic flows to the correct destination. Therefore alerting
on changes to VPC gateways ensuring traffic continues to flow as expected via the correct
gateway.&nbsp;

&nbsp;


<b>Remediation:</b>



-Create a metric filter that checks for VPC gateway changes: aws logs put-metric-filter
--log-group-name &lt;group&gt; --filter-name &lt;name&gt; --metric-
transformations &lt;value&gt; --filter-pattern '{ ($.eventName = CreateCustomerGateway)
|| ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) ||
($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName =
DetachInternetGateway) }'&nbsp;
-Create an SNS topic for notifications: aws sns create-topic --name &lt;topic_name&gt;
-Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
&lt;topic_arn&gt; --protocol email --notification-endpoint &lt;email@example.com&gt;
-Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
&lt;value&gt; --metric-name &lt;metric_filter_name&gt; --statistic Sum --period
300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
--namespace &lt;CloudTrailMetrics&gt; --alarm-actions &lt;topic_arn&gt;



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Identify the log group name: aws cloudtrail describe-trails
-Note the &lt;group&gt; value associated with CloudWatchLogsLogGroupArn&nbsp;
-Get a list of all associated metric filters for this &lt;group&gt;: aws
logs describe-metric-filters --log-group-name &quot;&lt;group&gt;&quot;&nbsp;
-Ensure the output contains the following: &quot;filterPattern&quot;: &quot;{
($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) ||
($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) ||
($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }&quot;&nbsp;
-Note the metricName value associated with the filterPattern found in step 4.&nbsp;
-Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&lt;metricName&gt;`]'
-Note the AlarmActions value - this will provide the SNS topic ARN value.&nbsp;
-Ensure there is at least one subscriber to the SNS topic: aws sns
list-subscriptions-by-topic --topic-arn &lt;topic_arm&gt;",
HYDRAS-AWS-NET,AWS Networking,Virtual Private Cloud (VPC) Network,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,Hydras-AWS-EC2-6.1,Launch EC2 instances into a VPC,"AWS virtual private cloud is the de-facto standard for networking AWS as it provides
additional security controls such as Security Groups, Network Access Control Lists (NACL's) and
routing. However the use of VPC is not compulsory and resources such as EC2 can be created
outside of VPC (usingEC2 Classic). It is the recommendedation to make all resources a member of
a VPC if possible to benefit from the increased security controls they offer and reduce undue
network exposure.&nbsp;

&nbsp;


<b>Remediation:</b>



-Login to the AWS Management Console.
-Select EC2 from the services menu.
-Select &quot;Launch Instance&quot;.
-Complete the wizard until step 3 at which point ensure a VPC ID is selected for the
&quot;Network&quot; option, choose an appropriate &quot;Subnet&quot; and &quot;Auto-assign
Public IP&quot; option.&nbsp;&nbsp;
-Complete the wizard to launch the instance.
NB: If you want to migrate an already running instance you will need to convert the
image into an AMI and then launch a new instance using the AMI and placing in a VPC as per the
steps above


Content provided by <a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","-Login to the AWS Management Console.
-Select EC2 from the services menu.
-Select &quot;Instances&quot; from the left hand menu.
-For each instance in the list:

-select the instance&nbsp;
-in the preview pane confirm the instance has a &quot;VPC ID&quot;. If a
hypen &quot;-&quot; is shown then your instance is running in EC2-Classic mode.",
HYDRAS-AWS-NET,AWS Networking,Virtual Private Cloud (VPC) Network,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,Hydras-AWS-Network-5.2,Seperate VPC into zones  by function,"AWS virtual private cloud is the de-facto standard for networking AWS as it provides
additional security controls such as Security Groups, Network Access Control Lists (NACL's) and
routing. It is recommended that resources be placed into VPC's according to use case (ie
dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such
resources accordingly ensures that a resource of a higher security level is not exposed by the
security settings of a lower labelled VPC.&nbsp;

&nbsp;


<b>Remediation:</b>



-Identify the resources that exist within an incorrect VPC.
-Migrate or move them to the correct VPC.



Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
test/dev/prod).",
HYDRAS-AWS-NET,AWS Networking,Virtual Private Cloud (VPC) Network,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.1,Non-identify the resources,"Resources are not registered in the safety net systems, and there are more unidentified
resources. That can be a problem because these unidentified resources can have unknown
weaknesses.",,Hydras-AWS-Network-5.1,Use AWS VPC for networking,"AWS virtual private cloud is the de-facto standard for networking AWS as it provides
additional security controls such as Security Groups, Network Access Control Lists (NACL's) and
routing.





However the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC
(usingEC2 Classic). It is the recommendedation to make all resources a member of a VPC if
possible to benefit from the increased security controls they offer and reduce undue network
exposure.&nbsp;

&nbsp;


<b>Remediation:
</b>Move or migrate the resources to a VPC.



 Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>",Ensure that each AWS resource you own that is able to exist in a VPC does so.,
HYDRAS-AWS-NET,AWS Networking,Virtual Private Cloud (VPC) Network,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.8,The access to the routing tables are not restricted,"Being highly selective in peering routing tables is a very effective way of minimizing the
impact of breach as resources outside of these routes are inaccessible to the peered VPC.",,Hydras-AWS-Network-5.8,"Ensure routing tables for VPC peering are ""least access""","Once a VPC peering connection is established, routing tables must be updated to establish any
connections between the peered VPCs. These routes can be as specific as desired - even peering a
VPC to only a single host on the other side of the connection.






<b> Rationale: </b>


Being highly selective in peering routing tables is a very effective way of minimizing the
impact of breach as resources outside of these routes are inaccessible to the peered VPC.






<b> Remediation: </b>


Remove and add route table entries to ensure that the least number of subnets or hosts as is
required to accomplish the purpose for peering are routable.






Via CLI:



-For each &lt;route_table_id&gt; containing routes non compliant with your
routing policy (which grants more than desired &quot;&quot;least access&quot;&quot;),
delete the non compliant route:


<blockquote>
<blockquote>

aws ec2 delete-route --route-table-id &lt;route_table_id&gt; --destination-cidr-block
&lt;non_compliant_destination_CIDR&gt;

</blockquote>
</blockquote>






-Create a new compliant route:


<blockquote>
<blockquote>

aws ec2 create-route --route-table-id &lt;route_table_id&gt; --destination-cidr-block
&lt;compliant_destination_CIDR&gt; --vpc-peering-connection-id &lt;peering_connection_id&gt;

</blockquote>
</blockquote>","<span style="" , Arial;"">Review routing tables of peered VPCs for whether they route
all subnets of each VPC and whether that is necessary to accomplish the intended purposes
for peering the VPCs.

<b>Via CLI:</b>
List all
the route tables from a VPC and check if &quot;GatewayId&quot; is pointing to a
&lt;peering_connection_id&gt; (e.g. pcx-1a2b3c4d) and if &quot;DestinationCidrBlock&quot;
is as specific as desired.
</span>
<blockquote>
<span style="" , Arial;"">aws ec2 describe-route-tables --filter &quot;Name=vpc-id,Values=&lt;vpc_id&gt;&quot;
--query &quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
AssociatedSubnets:Associations[*].SubnetId}&quot;</span>
</blockquote>",https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.htm
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,NON-UPDATED-SYSTEMS-AWS,Attackers gain unauthorised access to data on RDS instances,"Attackers cloud gain access to data on RDS instances through the weaknesses
in non-updated systems.",,AWS-EC2-6.2,The instances are not patched,"The instances are not patched with the last updates for the correspondent Operative System
(OS), and the instances have got weaknesses which are solved in the last updates.",,aws-tier-3.6,Enable Auto Minor Version Upgrade on RDS,"Amazon Relational Database Service (RDS) is a managed relational database service
which handles routine database tasks such as provisioning, patching, backup, recovery, failure
detection, and repair.
There are 6 database engines available for customer to run their database workloads on:

-Amazon Aurora (MySQL Compatible)
-MySQL
-MariaDB
-Oracle
-Microsoft SQL Server
-PostgreSQL

If the database engine used by your application supports it, ensure that the RDS
Instances have Auto Minor Version Upgrade Enabled.
<b>Remediation:</b>
Using the Amazon unified command line interface:


-Modify each DB instance with auto-minor-version-upgrade set to False, and enable
auto-minor-version-upgrade:


<blockquote>
<blockquote>
aws rds modify-db-instance --db-instance-identifier &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;your_db_instance&gt;&lt;/span&gt;
--auto-minor-version-upgrade
</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check if your application DB instances have Auto Minor Version Upgrade enabled:


<blockquote>
<blockquote>

aws rds describe-db-instances --filters Name=tag:&lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;data_tier_tag&gt;&lt;/span&gt;,Values=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;data_tier_tag_value&gt;&lt;/span&gt;
--query &quot;DBInstances[*].{AutoMinorVersionUpgrade:AutoMinorVersionUpgrade,
DBInstanceIdentifier:DBInstanceIdentifier}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,AWS-LOSS-CONTROL-ENV,Attackers gain unauthorized access to the control of the environment,"Attackers could gain unauthorized access to the control of the environment, due to
user accounts or role groups not being well defined and configured. Therefore, attackers
can make changes without root approval.",,AWS-IAM-2.7,The credentials for groups and roles are not configured,"The credentials for groups and roles are not correctly configured and there are user accounts
with more privileges than necessary.",,Hydras-AWS-RDS-02,Assign to IAM roles the permissions for RDS instances,"The following AWS managed policies, which you can attach to users in your account, are
specific to Amazon RDS:



-<b>AmazonRDSReadOnlyAccess:</b> Grants read-only access to all Amazon RDS
resources for the root AWS account.&nbsp;
-<b>AmazonRDSFullAccess:</b> Grants full access to all Amazon RDS resources
for the root AWS account.
You can also create custom IAM policies that allow users to access the required
Amazon RDS API actions and resources. You can attach these custom policies to the IAM users or
groups that require those permissions.



The permissions above shall be assigned to roles or groups:



-The roles or groups only do calls to the API to get information, the
AmazonRDSReadOnlyAccess permission shall be assigned.&nbsp;
-The roles or groups who are responsible of managing the RDS instances shall be
assigned the AmazonRDSFullAccess permission.","-Review the IAM roles and groups.&nbsp;
-Check that all roles or groups have got the AmazonRDSReadOnlyAccess permission.
-Check that only the appropriate personnel have got AmazonRDSFullAccess permissions
to manage the RDS instances.",
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,database-publically-accesible,Database is publically accesible,Everyones can access to the RDS database and get the data from the database.,,aws-tier-6.30,Do not publically accessible the RDS database,"Amazon Relational Database Service (RDS) is a managed relational database service which handles
routine database tasks such as provisioning, patching, backup, recovery, failure detection, and
repair.






There are 6 database engines available for customer to run their database workloads on:



-Amazon Aurora (MySQL Compatible)
-MySQL
-MariaDB
-Oracle
-Microsoft SQL Server
-PostgreSQL
Customers can deploy RDS databases within a VPC through the configuration of:



-Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS
instances.
-Network access through configuration of Security Groups for RDS
-Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP
address







<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Modify each publicly accessible DB instance, and make it private:



<blockquote>
<blockquote>

<div style="""">
aws rds modify-db-instance --db-instance-identifier &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;your_db_instance&gt;&lt;/span&gt;
--no-publicly-accessible


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check if your application DB instances are publicly available:


<blockquote>
<blockquote>

aws rds describe-db-instances --filters Name=tag:&lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;data_tier_tag&gt;&lt;/span&gt;,Values=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;data_tier_tag_value&gt;&lt;/span&gt;
--query &quot;DBInstances[*].{PubliclyAccessible:PubliclyAccessible,
DBInstanceIdentifier:DBInstanceIdentifier}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,AWS-Network-5.2,Networks for Amazon resources are not properly segmentated.,"Resources in the same VNet are compromised because when one of them is attacked and the
attackers gain access, they also gain access to all resources.",,aws-tier-3.5,Enable Multi-AZ on RDS,"Amazon Relational Database Service (RDS) is a managed relational database service which handles
routine database tasks such as provisioning, patching, backup, recovery, failure detection, and
repair.






There are 6 database engines available for customer to run their database workloads on:



-Amazon Aurora (MySQL Compatible)
-MySQL
-MariaDB
-Oracle
-Microsoft SQL Server
-PostgreSQL








Provides AWS managed high availability of the Database Tier across 2 availability zones within a
region through asynchronous replication at the data layer.







<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Modify each no-multi-az DB instance, and make it Multi-AZ enabled:



<blockquote>
<blockquote>

<div style="""">
aws rds modify-db-instance --db-instance-identifier &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;your_db_instance&gt;&lt;/span&gt; --multi-az


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check if your application DB instances are Multi-AZ enabled:


<blockquote>
<blockquote>

aws rds describe-db-instances --filters Name=tag:&lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;data_tier_tag&gt;&lt;/span&gt;,Values=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;data_tier_tag_value&gt;&lt;/span&gt;
--query &quot;DBInstances[*].{MultiAZ:MultiAZ,
DBInstanceIdentifier:DBInstanceIdentifier}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,UNAUTHORIZED-CONECTIONS-AWS,Attackers gain unauthorized connection to the resources,"Attackers could gain an unauthorized connection to the resources through
misconfigured ports or security network configurations.",,no-access-control-onrds,Not access control on RDS databases,"It doesn't exist any access control in the RDS database resources and any user can gain access
to this database and get the data of it.",,aws-tier-6.34,Configure RDS database to use the Data Tier Security Group,"Amazon Relational Database Service (RDS) is a managed relational database service which handles
routine database tasks such as provisioning, patching, backup, recovery, failure detection, and
repair.






There are 6 database engines available for customer to run their database workloads on:



-Amazon Aurora (MySQL Compatible)
-MySQL
-MariaDB
-Oracle
-Microsoft SQL Server
-PostgreSQL



Customers can deploy RDS databases within a VPC through the configuration of:



-Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS
instances.
-Network access through configuration of Security Groups for RDS
-Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP
address
-Network access to the managed Data-Tier must be tightly controlled using Security
Groups for RDS and non local accessibility of the DB instance.







<b>Remedation: </b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Modify each non-compliant DB instance, and configure it to use the Data Tier Security
Group:



<blockquote>
<blockquote>

<div style="""">
aws rds modify-db-instance --db-instance-identifier &lt;&lt;em&gt;your_db_instance&lt;/em&gt;&gt;
--vpc-security-group-ids &lt;&lt;em&gt;data_tier_security_group&lt;/em&gt;&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check if your application DB instances are configured to use the Data Tier
Security Group:


<blockquote>
<blockquote>

aws rds describe-db-instances --filters Name=tag:&lt;&lt;em&gt;data_tier_tag&lt;/em&gt;&gt;,Values=&lt;&lt;em&gt;data_tier_tag_value&lt;/em&gt;&gt;
--query &quot;DBInstances[*].{VpcSecurityGroups:VpcSecurityGroups,
DBInstanceIdentifier:DBInstanceIdentifier}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,no-notification-incident,Not notification when an incident occurs,"There is no notification when any security incident occurs. Therefore, we don't know when an
attacker gain access to our systems or/and security systems",,aws-tier-4.3,Enable Event subscriptions for Instance level events on RDS,"AWS Relational Database Services offers customers a managed database engine solution for hosting
customer created databases which can allow for a reduction in operational burden on customers.






RDS event subscriptions provide notification of selected event changes at Data Base engine level
such as:



-Deletion
-Failure
-Failover
-Low Storage
-Maintentance



Event subscriptions are designed to provide incident notification of events which may affect the
availability of a RDS database instance.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a new event subscription for DB instance level events:



<blockquote>
<blockquote>

<div style="""">
aws rds create-event-subscription --subscription-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;rds_event_subscription&gt; &lt;/span&gt;--sns-topic-arn
&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;
--source-type db-instance --event-categories &lt;em&gt;&lt;rds_events&gt;&lt;/em&gt;
--source-ids &lt;em&gt;&lt;events_source_ids&gt;&lt;/em&gt; --enabled


</blockquote>
</blockquote>","Using the Amazon unified CLI:



-List all present event subscriptions and review the value of &quot;db-instance&quot;
associated with &quot;SourceType&quot; element:


<blockquote>
<blockquote>

aws rds describe-event-subscriptions --query
'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
EventCategoriesList:EventCategoriesList}'





</blockquote>
</blockquote>

&quot;EventCategoriesList&quot; will list all event categories which will be
reported on


&quot;SourceIdsList&quot; will list all RDS DB instances included (null=all
instances)","http://docs.aws.amazon.com/cli/latest/reference/rds/create-event-subscription.html
http://docs.aws.amazon.com/cli/latest/reference/rds/describe-event-subscriptions.html
http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html#USER_Events.Message"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS,Attackers gain undetected access to the security system configurations,"Attackers could gain undetected access to the security configurations and the changes of
the attackers could not be detected and audited.",,no-notification-incident,Not notification when an incident occurs,"There is no notification when any security incident occurs. Therefore, we don't know when an
attacker gain access to our systems or/and security systems",,aws-tier-4.4,Enable event subscriptions for DB security on RDS,"AWS Relational Database Services offers customers a managed database engine solution
for hosting customer created databases which can allow for a reduction in operational burden on
customers.
RDS event subscriptions provide notification of selected event changes at a DB security
group level.
Event subscriptions are designed to provide incident notification of events which may
affect the network availability of the RDS instance.
<b>Remediation:</b>
Using the Amazon unified CLI:


-Create a new event subscription for DB Security Group events:



<blockquote>
<blockquote>
aws rds create-event-subscription --subscription-name &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;rds_event_subscription&gt; &lt;/span&gt;--sns-topic-arn
&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;
--source-type db-security-group --event-categories &lt;em&gt;&lt;rds_events&gt;&lt;/em&gt;
--source-ids &lt;em&gt;&lt;events_source_ids&gt;&lt;/em&gt; --enabled
</blockquote>
</blockquote>","Using the Amazon unified CLI:



-List all present event subscriptions and review the value of &quot;db-security-group&quot;
associated with &quot;SourceType&quot; element:


<blockquote>
<blockquote>

aws rds describe-event-subscriptions --query
'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
EventCategoriesList:EventCategoriesList}'





</blockquote>
</blockquote>

&quot;EventCategoriesList&quot; will list all event categories which will be
reported on


&quot;SourceIdsList&quot; will list all RDS DB instances included (null=all
instances)",
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,DATA-DELETED-EASY-AWS,Data is intentionally or accidentally deleted,"Data can be deleted intentionally or accidentally, and the data cannot be
recovered because there are not recovery systems for these scenarios or the data is easy
to delete it.",,NOT_BACKUP_POLICIES,Not backup retention policies,It doesn't exists any retention policy to do backups of data.,,aws-tier-3.7,Set Backup retention policy on RDS,"Amazon Relational Database Service (RDS) is a managed relational database service which handles
routine database tasks such as provisioning, patching, backup, recovery, failure detection, and
repair.






There are 6 database engines available for customer to run their database workloads on:



-Amazon Aurora (MySQL Compatible)
-MySQL
-MariaDB
-Oracle
-Microsoft SQL Server
-PostgreSQL




Provides a managed backup function of the RDS Database, it is possible to define the backup
window and retention period of the backup. Each customer should have a retention policy set for
the type of data being stored. Recommend setting this to at least 7.






Possible values are from 0 to 35 days.







<b>Remediation:</b>


<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Modify each DB instance with Backup Retention Period of 0, and set a desired Backup
Retention Period in days (recommended value = 7):



<blockquote>
<blockquote>

<div style="""">
aws rds modify-db-instance --db-instance-identifier &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;your_db_instance&gt;&lt;/span&gt;
--backup-retention-period &lt;em&gt;&lt;backup_retention_period&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-Check if your application DB instances have a Backup Retention Period set (0 =
there is no backup retention in place, 7 = there are 7 daily backups retained):


<blockquote>
<blockquote>

aws rds describe-db-instances --filters Name=tag:&lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;data_tier_tag&gt;&lt;/span&gt;,Values=&lt;span
style=&quot;font-style: italic;&quot;&gt;&lt;data_tier_tag_value&gt;&lt;/span&gt;
--query &quot;DBInstances[*].{BackupRetentionPeriod:BackupRetentionPeriod,
DBInstanceIdentifier:DBInstanceIdentifier}&quot;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is in transit in clear text,
or when the data is stored without encryption.",,AWS-S3-7.4,Sensitive data is accessible,Sensitive data is not encrypted and is exposed.,,aws-tier-1.4,Enable the encryption at rest for Databases running on RDS,"Amazon RDS instances and snapshots can be encrypted at rest by enabling the encryption option on
the Amazon RDS DB instance. Data that is encrypted at rest includes the underlying storage for a
DB instance, its automated backups, read replicas, and snapshots. The encryption at rest shall
be enabled.






<b>Remediation:</b>


Using the Amazon unified CLI:



-Perform a snapshot of the DB instance:


<blockquote>
<blockquote>

aws rds create-db-snapshot --db-snapshot-identifier &lt;em&gt;&lt;db_snapshot&gt;&lt;/em&gt;
--db-instance-identifier &lt;em&gt;&lt;your_db_instance&gt;&lt;/em&gt;

</blockquote>
</blockquote>


-Confirm created snapshot is available (once snapshot process has completed):


<blockquote>
<blockquote>

<pre> aws rds describe-db-snapshots --query
'DBSnapshots[*].{DBSnapshotIdentifier:DBSnapshotIdentifier,
DBInstanceIdentifier:DBInstanceIdentifier, Snapshotstatus:Status}' </pre>

</blockquote>
</blockquote>


-List all KMS Customer Managed Keys:


<blockquote>
<blockquote>

<pre> aws kms list-aliases </pre>

</blockquote>
</blockquote>


-Copy to source RDS snapshot (from previous step) to a destination snapshot which will
be encrypted:


<blockquote>
<blockquote>
aws rds copy-db-snapshot --source-db-snapshot-identifier &lt;em&gt;&lt;db_snapshot&gt;&lt;/em&gt;&nbsp;
--target-db-snapshot-identifier &lt;em&gt;&lt;encrypted_db_snapshot&gt;&lt;/em&gt;
--kms-key-id &lt;em&gt;&lt;data_tier_kms_key&gt;&lt;/em&gt;
</blockquote>
</blockquote>

-Restore a snapshot to the target DB instance(from previous step) with same values as
original db instance with additional encrypted storage values:

<blockquote>
<blockquote>

<pre>aws rds restore-db-instance-from-db-snapshot --db-instance-identifier &lt;em&gt;&lt;your_db_instance&gt;&lt;/em&gt;
--db-snapshot-identifier &lt;em&gt;&lt;encrypted_db_snapshot&gt;&lt;/em&gt;</pre>

</blockquote>
</blockquote>","Using the Amazon unified CLI:

-List all current RDS instances and review the encryption status of the DB
instance:

<blockquote>
<blockquote>
<pre>aws rds describe-db-instances --query 'DBInstances[*].{DBName:DBName,
EncryptionEnabled:StorageEncrypted, CMK:KmsKeyId}'</pre>
</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/rds/copy-db-snapshot.html
http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html
http://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html
http://docs.aws.amazon.com/cli/latest/reference/rds/create-db-snapshot.html
http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html
http://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-snapshots.html
http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html
http://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.htm"
HYDRAS-AWS-RDS,AWS RDS,Amazon Web Services,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is in transit in clear text,
or when the data is stored without encryption.",,AWS-S3-7.3,Sensitive data is exposed in transit,"Sensitive data is not encrypted in transit with HTTPS or SSL, and this data is accessible
whilst traversing the network.",,Hydras-AWS-RDS-01,Use SSL to Encrypt the connection to a DB Instance,"Use SSL from your application to encrypt a connection to a DB instance running MySQL, MariaDB,
Amazon Aurora, SQL Server, Oracle, or PostgreSQL. Each DB engine has its own process for
implementing SSL. To learn how to implement SSL for your particular DB instance, please see link
provided in &quot;References&quot; section.",Check that the SSL protocol is used to encrypt the data in transit.,
HYDRAS-AWS-S3,AWS S3,Amazon Web Services,DATA-DELETED-EASY-AWS,Data is intentionally or accidentally deleted,"Data can be deleted intentionally or accidentally, and the data cannot be
recovered because there are not recovery systems for these scenarios or the data is easy
to delete it.",,AWS-S3-7.1,Backup is not created,"The sensitive data cannot be recovered because there is not any method to do a backup or to do
versions of the data.",,Hydras-AWS-S3-7.1,Configure S3 bucket versioning for sensitive data,"Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale
computing easier for developers.



Amazon S3 has a simple web services interface that you can use to store and retrieve
any amount of data, at any time, from anywhere on the web. It gives any developer access to the
same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses
to run its own global network of web sites.



To add an extra layer of security to data stored within S3 it is possible to enable
object versioning. Object versioning enables the recovery of objects from accidental overwrite
or accidental deletion. If an object is deleted, instead of being removed, S3 write a delete
marker which becomes the current version that means previous versions can always be recovered.
It is recommended that versioning be enabled for buckets storing sensitive data.



<b>Remediation:
</b>

<blockquote>

aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration Status=Enabled

</blockquote>

Content provided by <a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","<blockquote>
aws s3api get-bucket-versioning --bucket my-bucket&nbsp;
</blockquote>If you don't see &quot;Status&quot;: &quot;Enabled&quot;
then your bucket has no versioning enabled.",
HYDRAS-AWS-S3,AWS S3,Amazon Web Services,DATA-DELETED-EASY-AWS,Data is intentionally or accidentally deleted,"Data can be deleted intentionally or accidentally, and the data cannot be
recovered because there are not recovery systems for these scenarios or the data is easy
to delete it.",,AWS-S3-7.2,Data is easily removed,"Someone without credentials can remove sensitive data, the remove function is not protected
for an MFA.",,Hydras-AWS-S3-7.2,Use S3 MFA to delete sensitive information,"Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale
computing easier for developers.



Amazon S3 has a simple web services interface that you can use to store and retrieve
any amount of data, at any time, from anywhere on the web. It gives any developer access to the
same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses
to run its own global network of web sites.



To add an extra layer of security to data stored within S3 the account owner (root)
can enable MFA Delete which means that buckets and the objects within them can only be deleted
with the use of Multi-factor authentication device. It is recommended to enable MFA Delete on
any buckets containing sensitive data to protect against accidental deletion

Remediation

1. aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration
Status=Enabled,MFADelete=Enabled


Content provided by <a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","<blockquote>
aws s3api get-bucket-versioning --bucket my-bucket&nbsp;
</blockquote>

If you don't see &quot;MFADelete&quot;: &quot;Enabled&quot; then your bucket
has no MFA delete enabled.",
HYDRAS-AWS-S3,AWS S3,Amazon Web Services,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is transit in clear
text or when the data is stored without encryption.",,AWS-S3-7.4,Sensitive data are accessible,Sensitive data are not encrypted and the sensitive data is exposed.,,Hydras-AWS-S3-7.4,Encrypt sensitive data at rest with KMS,"Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale
computing easier for developers.



Amazon S3 has a simple web services interface that you can use to store and retrieve
any amount of data, at any time, from anywhere on the web. It gives any developer access to the
same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses
to run its own global network of web sites.



To ensure that sensitive data is encrypted at rest you can use AWS KMS–managed
keys (SSE-KMS). This provides several advantages:&nbsp;

-You can create and manage the CMK encryption keys yourself.&nbsp;
-You can use a single CMK to encrypt and decrypt log files for multiple accounts across
all regions.&nbsp;
-You have control over who can use your key for encrypting and decrypting CloudTrail
log files. You can assign permissions for the key to the users in your organization according to
your requirements.&nbsp;
-You have enhanced security. With this feature, in order to read log files, you now
need to meet two conditions: 1) you must have S3 read permission on the bucket, and 2) you must
be granted decrypt permission by the CMK policy.&nbsp;


It is recommended to encrypt all sensitive data with SSE-KMS to avoid undue
exclosure of information and provide an extra layer of security.



<b>Remediation:</b>

The following example shows how to upload data using AWS KMS Encryption:



<blockquote>

aws s3api put-object --bucket &lt;my_bucket&gt; --server-side-encryption aws:kms
--ssekms-key-id &lt;kms_key_id&gt; --key &lt;object_to_upload&gt;

</blockquote>

Content provided by <a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","<blockquote>
aws s3api head-object --bucket &lt;my_bucket&gt; --key &lt;my_key&gt;
</blockquote>Look for the line &quot;ServerSideEncryption&quot; and verify
that it is set to &quot;aws:kms&quot; which indicates KMS Encryption.",
HYDRAS-AWS-S3,AWS S3,Amazon Web Services,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is transit in clear
text or when the data is stored without encryption.",,AWS-S3-7.3,Sensitive data is exposed in transit,"The sensitive data is not encrypted in transit with HTTPS or SSL, and the data is accessible
in the canal.",,Hydras-AWS-S3-7.3,Enforce HTTPS for sensitive information,"Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale
computing easier for developers.



Amazon S3 has a simple web services interface that you can use to store and retrieve
any amount of data, at any time, from anywhere on the web. It gives any developer access to the
same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses
to run its own global network of web sites.



To ensure that data is only accessible via HTTPS (as opposed to both HTTP and HTTPS)
it is possible to add a condition to the S3 bucket policy. It is recommended to enable this for
any bucket containing sensitive data to ensure that data is encrypted in transit.



<b>Remediation:
</b>The following is an example of how to create an S3
bucket policy that enforces HTTPS/SSL only



-Sign in to the AWS Management Console (with S3 update privileges)&nbsp;
-Go to the S3 Service on the AWS Console&nbsp;
-Select a bucket under &quot;All buckets&quot;&nbsp;
-Click the properties tab&nbsp;
-Under the permissions select &quot;Add a bucket policy&quot;&nbsp;
-Add the following policy to ensure all objects are accessed via https only&nbsp;


<blockquote>
<blockquote>

<i> {</i>

</blockquote>
</blockquote>
<blockquote>
<blockquote>

<i> &quot;Statement&quot;:[</i>
<i>{</i>

</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i> &quot;Action&quot;: &quot;s3:*&quot;,</i>


<i>&quot;Effect&quot;:&quot;Allow&quot;,</i>


<i>&quot;Principal&quot;: &quot;*&quot;,</i>


<i>&quot;Resource&quot;:&quot;arn:aws:s3:::bucketname/*&quot;,</i>


<i>&quot;Condition&quot;:{</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i>&quot;Bool&quot;:</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i>{&nbsp;</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i>&quot;aws:SecureTransport&quot;: true&nbsp;</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i>}</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<i>}</i>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>

<i> }</i>
<i>]</i>

</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>

<i>} </i>

</blockquote>
</blockquote>


-Click &quot;&quot;Save&quot;&nbsp;

Content provided by <a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>","The following checks that HTTPS is forced on a bucket policy:&nbsp;



-Sign in to the AWS Management Console (with S3 update privileges).&nbsp;
-Go to the S3 Service on the AWS Console.
-Select the S3 bucket under &quot;All buckets&quot;.&nbsp;
-Click the &quot;properties&quot; tab.
-Click &quot;edit bucket policy&quot;.&nbsp;
-In the policy document check for the presence of the line &quot;Condition&quot;:
{&quot;Bool&quot;: {&quot;aws:SecureTransport&quot;: &quot;true&quot;}}&nbsp;
-In the same statement as &quot;Effect&quot;:&quot;Allow&quot;,",
HYDRAS-AWS-SNS,AWS SNS,Cloudwatch Metric Alerts,AWS-LOST-CONTROL-NOTIFICATION,Sensitive data is compromised through notifications,"Attackers can gain access to the resources sensitive data if the system notifications
and alerts are not configured properly and the notifications are not received by the
appropriate personnel.",,log-actions-sending-out-notifications,Log the actions to send out notifications,,,aws-tier-4.1,Create a SNS topic for sending out notifications from Cloudtwatch Alarms,"For the Cloudwatch alarms and Auto-Scaling Groups to be able to send out notifications, a SNS
topic should be created.






Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages
the delivery or sending of messages to subscribing endpoints or clients.






When using Amazon SNS, you (as the owner) create a topic and control access to it by defining
policies that determine which publishers and subscribers can communicate with the topic.






Cloudwatch alarms and certain actions inside Auto-Scaling Groups needs to be sent out to
administrators, in order to be acted upon.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a new topic, and note the topic-arn value:



<blockquote>
<blockquote>

<div style="""">
aws sns create-topic --name &lt;em&gt;&lt;sns_topic_name&gt;&lt;/em&gt;


</blockquote>
</blockquote>

<div style="""">

-Create a subscription to the new topic:



<blockquote>
<blockquote>

<div style="""">
aws sns subscribe --topic-arn &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;
--protocol &lt;em&gt;&lt;protocol_for_sns&gt;&lt;/em&gt;
--notification-endpoint &lt;em&gt;&lt;sns_subscription_endpoints&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified CLI:



-List all cloudwatch alarms and filter by alarm action (review &quot;AlarmActions&quot;:
[]):


<blockquote>
<blockquote>

aws cloudwatch describe-alarms --query 'MetricAlarms[*].{AlarmName:AlarmName,
AlarmActions:AlarmActions, Dimensions:Dimensions}'

</blockquote>
</blockquote>


-List SNS topic attributes:


<blockquote>
<blockquote>

aws sns list-topic-attributes --topic-arn &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;

</blockquote>
</blockquote>


-List SNS topic subscriptions (endpoint which receives messages captured by the SNS
topic):


<blockquote>
<blockquote>

aws sns list-subscriptions-by-topic --topic-arn &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html
http://docs.aws.amazon.com/cli/latest/reference/sns/list-subscriptions-by-topic.html
http://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html
http://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.htm"
HYDRAS-AWS-SNS,AWS SNS,Cloudwatch Metric Alerts,AWS-LOST-CONTROL-NOTIFICATION,Sensitive data is compromised through notifications,"Attackers can gain access to the resources sensitive data if the system notifications
and alerts are not configured properly and the notifications are not received by the
appropriate personnel.",,log-actions-sending-out-notifications,Log the actions to send out notifications,,,aws-tier-4.2,Create a SNS topic for sending out notifications from RDS events,"For the RDS event subscriptions to be able to send out notifications, a SNS topic should be
created.






Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages
the delivery or sending of messages to subscribing endpoints or clients.






When using Amazon SNS, you (as the owner) create a topic and control access to it by defining
policies that determine which publishers and subscribers can communicate with the topic.






RDS events generaged through defined RDS event subscriptions needs to be sent out to
administrators, in order to be acted upon.






<b>Remediation:</b>


<div style="""">
Using the Amazon unified CLI:

<div style="""">

-Create a new topic, and note the topic-arn value:



<blockquote>
<blockquote>

<div style="""">
aws sns create-topic --name &lt;em&gt;&lt;sns_topic_name&gt;&lt;/em&gt;


</blockquote>
</blockquote>

<div style="""">

-Create a subscription to the new topic:



<blockquote>
<blockquote>

<div style="""">
aws sns subscribe --topic-arn &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;
--protocol &lt;em&gt;&lt;protocol_for_sns&gt;&lt;/em&gt;
--notification-endpoint &lt;em&gt;&lt;sns_subscription_endpoints&gt;&lt;/em&gt;


</blockquote>
</blockquote>","Using the Amazon unified CLI:



-List all RDS event subscriptions in order to capture the topic-arn:


<blockquote>
<blockquote>

aws rds describe-event-subscriptions --query
'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
EventCategoriesList:EventCategoriesList}'

</blockquote>
</blockquote>


-List SNS topic attributes:


<blockquote>
<blockquote>

aws sns list-topic-attributes --topic-arn &lt;span style=&quot;font-style: italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span
style=&quot;font-style: italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;

</blockquote>
</blockquote>


-List SNS topic subscriptions (endpoint which receives messages captured by the SNS
topic):


<blockquote>
<blockquote>

aws sns list-subscriptions-by-topic --topic-arn &lt;span style=&quot;font-style:
italic;&quot;&gt;&lt;&lt;/span&gt;&lt;span style=&quot;font-style:
italic;&quot;&gt;sns_topic_arn&gt;&lt;/span&gt;

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html
http://docs.aws.amazon.com/cli/latest/reference/sns/list-subscriptions-by-topic.html
http://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html
http://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.htm"
HYDRAS-AWS-SNS,AWS SNS,Cloudwatch Metric Alerts,AWS-LOST-CONTROL-NOTIFICATION,Sensitive data is compromised through notifications,"Attackers can gain access to the resources sensitive data if the system notifications
and alerts are not configured properly and the notifications are not received by the
appropriate personnel.",,AWS-SNS-01,Notifications are not centralized,"The notifications are not centralized; therefore, the control of these notifications and who
receives them is not easily managed.",,Hydras-AWS-SNS-01,Use Amazon SNS to centralize notifications,"Configure all alerts from the Amazon environment with the Amazon Simple Notification Service
(SNS) to have centralized notifications and control over who receives these notifications, in
the same place.




<b> <b>Remediation:</b> </b>



-Go to CoudWatch alarms.
-Edit each alarm and change the notification configuration to the SNS service.","Check that all alerts from the Amazon environment are configured with the Amazon Simple
Notification Service (SNS).",
HYDRAS-AWS-SNS,AWS SNS,Virtual Private Cloud (VPC) Network,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is in transit in clear text
or when the data is stored without encryption.",,no-access-control-publish-sns-topics,No access control to publish on SNS topics,,,aws-tier-2.9,Not allow ‘Everyone’ to publish on SNS topics,"Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages
the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there
are two types of clients—publishers and subscribers—also referred to as producers and consumers.
Publishers communicate asynchronously with subscribers by producing and sending a message to a
topic, which is a logical access point and communication channel. Subscribers (i.e., web
servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the
message or notification over one of the supported protocols (i.e., Amazon SQS, HTTP/S, email,
SMS, Lambda) when they are subscribed to the topic.






The entities who can publish messages to a SNS topic can be controlled by modifying the topic
policy, and they can be:



-The topic owner
-Everyone
-Specific AWS users or resources
From the above message publisher options you should make sure that &quot;Everyone&quot;
is not used with any SNS topic in the AWS account.






If a SNS topic policy allows &quot;Everyone&quot; to publish messages to a specific
topic, this could pose a security risk as any unauthenticated entity could send malicious
messages to all the topic subscribers.






<b>Remediation:</b>


<div style="""">
Edit your existing policy by deleting the above snippet or replacing &quot;Principal&quot;:{&quot;AWS&quot;
: &quot;*&quot;} with &quot;Principal&quot;:{&quot;AWS&quot; : &quot;&quot;},
and save it locally as a .json file named policy.json.

<div style="""">



<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Set the new policy to the SNS topic



<blockquote>
<blockquote>

<div style="""">
aws sns set-topic-attributes --topic-arn &lt;&lt;em&gt;sns_topic_arn&gt;&lt;/em&gt;
--attribute-name Policy --attribute-value file://policy.json


</blockquote>
</blockquote>

<b>
</b>","Using the Amazon unified command line interface:



-List all the SNS topics from your AWS account:


<blockquote>
<blockquote>

aws sns list-topics

</blockquote>
</blockquote>


-For each topic in step 1, list the topic attributes:


<blockquote>
<blockquote>

aws sns get-topic-attributes --topic-arn &lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;sns_&lt;/em&gt;&lt;em&gt;topic_arn&gt;&lt;/em&gt;

</blockquote>
</blockquote>


-Check the Policy field for the presence of:


<blockquote>
<blockquote>

&lt;span class=&quot;sBrace structure-1&quot;&gt;{

</blockquote>
</blockquote>
<blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Effect&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;Allow&quot;&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Principal&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sBrace
structure-2&quot;&gt;{

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp; &nbsp; &lt;span class=&quot;sObjectK&quot;&gt;&quot;AWS&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;*&quot;

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sBrace structure-2&quot;&gt;}&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Action&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;SNS:Publish&quot;&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;&lt;/span&gt;&lt;span
class=&quot;sObjectV&quot;&gt;&lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;sns_&lt;/em&gt;&lt;em&gt;topic_arn&gt;&lt;/em&gt;&quot;

</blockquote>
<blockquote>

&lt;/span&gt;}

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html
http://docs.aws.amazon.com/cli/latest/reference/sns/list-topics.html
http://docs.aws.amazon.com/cli/latest/reference/sns/set-topic-attributes.html
http://docs.aws.amazon.com/sns/latest/dg/UsingIAMwithSNS.html#ExamplePolicies_SN"
HYDRAS-AWS-SNS,AWS SNS,Virtual Private Cloud (VPC) Network,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is in transit in clear text
or when the data is stored without encryption.",,no-access-control-subscribe-sns-topics,No access control to subscribe on SNS topics,,,aws-tier-2.10,Not allow 'Everyone' to subscribe on SNS topics,"Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages
the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there
are two types of clients—publishers and subscribers—also referred to as producers and consumers.
Publishers communicate asynchronously with subscribers by producing and sending a message to a
topic, which is a logical access point and communication channel. Subscribers (i.e., web
servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the
message or notification over one of the supported protocols (i.e., Amazon SQS, HTTP/S, email,
SMS, Lambda) when they are subscribed to the topic.






The entities who can subscribe to a SNS topic can be controlled by modifying the topic policy,
and they can be:



-The topic owner
-Everyone
-Specific AWS users or resources
-Users whose endpoint URL,protocol, email address, or ARN from a Subscriberequest match
a specified value



From the above topic subscribers, you should make sure that &quot;Everyone&quot; is not
used with any SNS topic in the AWS account.






If a SNS topic policy allows &quot;Everyone&quot; to subscribe to a specific topic, this
could pose a security risk as any unauthenticated entity could subscribe and receive messages
from the topic publishers, messages that should be destined only to specific, known subscribers.






<b>Remediation:</b>


<div style="""">
Edit your existing policy by deleting the above snippet or replacing &quot;Principal&quot;:{&quot;AWS&quot;
: &quot;*&quot;} with &quot;Principal&quot;:{&quot;AWS&quot; : &quot;&quot;},
and save it locally as a .json file named policy.json.

<div style="""">



<div style="""">
Using the Amazon unified command line interface:

<div style="""">

-Set the new policy to the SNS topic



<blockquote>
<blockquote>

<div style="""">
aws sns set-topic-attributes --topic-arn &lt;&lt;em&gt;sns_topic_arn&gt;&lt;/em&gt;
--attribute-name Policy --attribute-value file://policy.json


</blockquote>
</blockquote>","Using the Amazon unified command line interface:



-List all the SNS topics from your AWS account:


<blockquote>
<blockquote>

aws sns list-topics

</blockquote>
</blockquote>


-For each topic in step 1, list the topic attributes:


<blockquote>
<blockquote>

aws sns get-topic-attributes --topic-arn &lt;&lt;em&gt;sns_topic_arn&gt;&lt;/em&gt;

</blockquote>
</blockquote>


-Check the Policy field for the presence of:


<blockquote>
<blockquote>

&lt;span class=&quot;sBrace structure-1&quot;&gt;{

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Effect&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;Allow&quot;&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Principal&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sBrace
structure-2&quot;&gt;{

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp; &nbsp; &lt;span class=&quot;sObjectK&quot;&gt;&quot;AWS&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;*&quot;

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sBrace structure-2&quot;&gt;}&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Action&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sBracket
structure-2&quot;&gt;[

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp; &nbsp; &lt;span class=&quot;sArrayV&quot;&gt;&quot;SNS:Subscribe&quot;&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp; &nbsp; &lt;span class=&quot;sArrayV&quot;&gt;&quot;SNS:Receive&quot;

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sBracket structure-2&quot;&gt;]&lt;/span&gt;&lt;span
class=&quot;sComma&quot;&gt;,

</blockquote>
<blockquote>

&lt;/span&gt;&nbsp; &nbsp;&lt;span class=&quot;sObjectK&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span
class=&quot;sColon&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sObjectV&quot;&gt;&quot;&lt;/span&gt;&lt;span
class=&quot;sObjectV&quot;&gt;&lt;em&gt;&lt;&lt;/em&gt;&lt;em&gt;sns_&lt;/em&gt;&lt;em&gt;topic_arn&gt;&lt;/em&gt;&quot;

</blockquote>
<blockquote>

&lt;/span&gt;}

</blockquote>
</blockquote>","http://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html
http://docs.aws.amazon.com/cli/latest/reference/sns/list-topics.html
http://docs.aws.amazon.com/cli/latest/reference/sns/set-topic-attributes.html
http://docs.aws.amazon.com/sns/latest/dg/UsingIAMwithSNS.html#ExamplePolicies_SN"
HYDRAS-AWS-SNS,AWS SNS,Virtual Private Cloud (VPC) Network,ACCESS-TO-DATA-AWS,Sensitive data is compromised through unauthorized access to data,"Attackers can gain access to sensitive data when the data is in transit in clear text
or when the data is stored without encryption.",,AWS-S3-7.3,Sensitive data is exposed in transit,"Sensitive data is not encrypted in transit with HTTPS or SSL, and the data is accessible
whilst traversing the network.",,Hydras-AWS-SNS-02,Enforce HTTPS to encrypt notifications,"To send messages to an HTTPS endpoint through a topic, you must subscribe the endpoint to the
Amazon SNS topic. You specify the endpoint using its URL. To subscribe to a topic, you can use
the Amazon SNS console, the sns-subscribe command, or the Subscribe API action.




<b> <b>Remediation:</b> </b>



-Sign in to the AWS Management Console and open the Amazon SNS console at
https://console.aws.amazon.com/sns/v2/home.&nbsp;
-In the left navigation pane, click Topics and then select the topic.&nbsp;
-Click the Other actions drop-down list and select Subscribe to topic.&nbsp;
-In the Protocol drop-down list, select HTTPS.&nbsp;
-In the Endpoint box, paste in the URL for the endpoint that you want the topic to send
messages to and then click Create subscription.&nbsp;
-For the Subscription request received! message, click Close.&nbsp;
-Your new subscription's Subscription ID displays PendingConfirmation. When you confirm
the subscription, Subscription ID will display the subscription ID.&nbsp;
Content provided by
<a href=""https://hydrasit.com"" target=""_blank""> Hydras IT LTD</a>.","-Sign in to the AWS Management Console and open the Amazon SNS console at
https://console.aws.amazon.com/sns/v2/home.&nbsp;
-In the left navigation panel, click Topics and then select the topic.&nbsp;
-Click the Other actions drop-down list and select Subscribe to topic.I
-In the Protocol drop-down list, check that the protocol HTTPS is selected.",
