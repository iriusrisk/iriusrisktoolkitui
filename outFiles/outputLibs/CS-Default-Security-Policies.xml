<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012-2019 Continuum Security.  All rights reserved.
The content of this library is the property of Continuum Security SL and may only be used in whole or in part with a valid license for IriusRisk. -->
<project ref="CS-Default-Security-Policies" name="Continuum Security Policies" revision="1" type="LIBRARY" status="OPEN" enabled="true" priority="0" tags="" workflowState="">
    <desc>A default set of rules that implement security policies such as applying PCI DSS and EU GDPR when required.
        This library has not got any Risk Pattern.
    </desc>
    <categoryComponents/>
    <componentDefinitions/>
    <udts/>
    <dataflows/>
    <supportedStandards/>
    <components/>
    <rules>
        <rule name="Security Standard: Apply EU GDPR - EU citizen" module="component" generatedByGui="true">
            <condition name="Question is answered" type="Question" field="id" value="eu_gdpr.handle.group.yes">
                <pattern name="Condition with answer" pattern='${type}(${field} == "${value}", answer == true);'/>
            </condition>
            <action project="" value="EU-GDPR_::_EU-GDPR" name="Apply security standard" type="drools-without-variable-type">
                <pattern name="Apply security standard" pattern='insertLogical(new SecurityStandard("${value-1}", "${value-2}")); insertLogical(new com.iriusrisk.drools.model.Notification(com.iriusrisk.drools.model.NotificationType.INFO, "apply.standard.${value-1}", "apply.standard.msg,${value-1}", true));insertLogical(new Conclusion(ConclusionType.POLICY, "id-${value-1}", "security.standard.will.apply", "${value-1}"));'/>
            </action>
        </rule>
        <rule name="Security Standard: Apply EU GDPR - EU GDPR Environment" module="component" generatedByGui="true">
            <condition name="Risk pattern exists" type="drools-without-variable-type" field="id" value="EU GDPR_::_EU_GDPR_APPLICATION">
                <pattern name="Risk pattern exists" pattern='$riskPattern : ImportWholeRiskPatternAwareDto(libraryRef == "${value-1}",riskPatternRef == "${value-2}");'/>
            </condition>
            <action project="" value="EU-GDPR_::_EU-GDPR" name="Apply security standard" type="drools-without-variable-type">
                <pattern name="Apply security standard" pattern='insertLogical(new SecurityStandard("${value-1}", "${value-2}")); insertLogical(new com.iriusrisk.drools.model.Notification(com.iriusrisk.drools.model.NotificationType.INFO, "apply.standard.${value-1}", "apply.standard.msg,${value-1}", true));insertLogical(new Conclusion(ConclusionType.POLICY, "id-${value-1}", "security.standard.will.apply", "${value-1}"));'/>
            </action>
        </rule>
        <rule name="Security Standard: Apply PCI-DSS - Cardholder Data Environment" module="component" generatedByGui="true">
            <condition name="Risk pattern exists" type="drools-without-variable-type" field="id" value="PCI-DSSv3.2_::_PCI-CDE">
                <pattern name="Risk pattern exists" pattern='$riskPattern : ImportWholeRiskPatternAwareDto(libraryRef == "${value-1}",riskPatternRef == "${value-2}");'/>
            </condition>
            <action project="" value="PCI-DSS-v3.2_::_PCI-DSS-v3.2" name="Apply security standard" type="drools-without-variable-type">
                <pattern name="Apply security standard" pattern='insertLogical(new SecurityStandard("${value-1}", "${value-2}")); insertLogical(new com.iriusrisk.drools.model.Notification(com.iriusrisk.drools.model.NotificationType.INFO, "apply.standard.${value-1}", "apply.standard.msg,${value-1}", true));insertLogical(new Conclusion(ConclusionType.POLICY, "id-${value-1}", "security.standard.will.apply", "${value-1}"));'/>
            </action>
        </rule>
        <rule name="Security Standard: Apply PCI-DSS - Credit Card Data Processed" module="component" generatedByGui="true">
            <condition name="Question is answered" type="Question" field="id" value="Credit Card DataProcessed">
                <pattern name="Condition with answer" pattern='${type}(${field} == "${value}", answer == true);'/>
            </condition>
            <action project="" value="PCI-DSS-v3.2_::_PCI-DSS-v3.2" name="Apply security standard" type="drools-without-variable-type">
                <pattern name="Apply security standard" pattern='insertLogical(new SecurityStandard("${value-1}", "${value-2}")); insertLogical(new com.iriusrisk.drools.model.Notification(com.iriusrisk.drools.model.NotificationType.INFO, "apply.standard.${value-1}", "apply.standard.msg,${value-1}", true));insertLogical(new Conclusion(ConclusionType.POLICY, "id-${value-1}", "security.standard.will.apply", "${value-1}"));'/>
            </action>
        </rule>
        <rule name="Security Standard: Apply PCI-DSS - Credit Card Data Stored" module="component" generatedByGui="true">
            <condition name="Question is answered" type="Question" field="id" value="Credit Card DataStored">
                <pattern name="Condition with answer" pattern='${type}(${field} == "${value}", answer == true);'/>
            </condition>
            <action project="" value="PCI-DSS-v3.2_::_PCI-DSS-v3.2" name="Apply security standard" type="drools-without-variable-type">
                <pattern name="Apply security standard" pattern='insertLogical(new SecurityStandard("${value-1}", "${value-2}")); insertLogical(new com.iriusrisk.drools.model.Notification(com.iriusrisk.drools.model.NotificationType.INFO, "apply.standard.${value-1}", "apply.standard.msg,${value-1}", true));insertLogical(new Conclusion(ConclusionType.POLICY, "id-${value-1}", "security.standard.will.apply", "${value-1}"));'/>
            </action>
        </rule>
    </rules>
</project>
