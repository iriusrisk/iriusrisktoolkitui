<?xml version="1.0" encoding="UTF-8"?>
<project ref='iot-security-compliance-framework' name='IoT Security Compliance Framework' revision='1' type='LIBRARY' status='OPEN' enabled='true' priority='0' tags=''>
  <desc>Library with Risk Patterns for IoT Security based on the controls of "IoT Security Compliance Framework" (Release 2.0, December 2018) published by the IOT Security Foundation (https://www.iotsecurityfoundation.org/).</desc>
  <categoryComponents>
    <categoryComponent ref='iot-components' name='IoT components' />
  </categoryComponents>
  <componentDefinitions>
    <componentDefinition ref='iot-operating-system' name='IoT Operating System' desc='' categoryRef='iot-components'>
      <riskPatterns>
        <riskPattern ref='iot-authentication-and-authorization' />
        <riskPattern ref='iot-device-interfaces' />
        <riskPattern ref='iot-device-software-os' />
        <riskPattern ref='iot-device-operating-system' />
      </riskPatterns>
    </componentDefinition>
    <componentDefinition ref='iot-application' name='IoT Application' desc='' categoryRef='iot-components'>
      <riskPatterns>
        <riskPattern ref='iot-device-software' />
        <riskPattern ref='iot-authentication-and-authorization' />
      </riskPatterns>
    </componentDefinition>
    <componentDefinition ref='iot-mobile-application' name='IoT Mobile Application' desc='' categoryRef='iot-components'>
      <riskPatterns>
        <riskPattern ref='iot-authentication-and-authorization' />
        <riskPattern ref='iot-mobile-application' />
      </riskPatterns>
    </componentDefinition>
  </componentDefinitions>
  <supportedStandards>
    <supportedStandard ref='OWASP-MASVS-L1+R' name='OWASP-MASVS-L1+R' />
    <supportedStandard ref='OWASP-MASVS-L2+R' name='OWASP-MASVS-L2+R' />
    <supportedStandard ref='OWASP-MASVS-L1' name='OWASP-MASVS-L1' />
    <supportedStandard ref='OWASP-MASVS-L2' name='OWASP-MASVS-L2' />
    <supportedStandard ref='EU-GDPR' name='EU-GDPR' />
    <supportedStandard ref='iotsf-class-0' name='IoTSF Class 0' />
    <supportedStandard ref='iotsf-class-1' name='IoTSF Class 1' />
    <supportedStandard ref='iotsf-class-2' name='IoTSF Class 2' />
    <supportedStandard ref='iotsf-class-3' name='IoTSF Class 3' />
    <supportedStandard ref='iotsf-class-4' name='IoTSF Class 4' />
    <supportedStandard ref='ISO/IEC 27002:2013' name='ISO/IEC 27002:2013' />
    <supportedStandard ref='OWASP-ASVS-Level-1' name='OWASP-ASVS-Level-1' />
    <supportedStandard ref='OWASP-ASVS-Level-2' name='OWASP-ASVS-Level-2' />
    <supportedStandard ref='OWASP-ASVS-Level-3' name='OWASP-ASVS-Level-3' />
    <supportedStandard ref='NIST 800-53' name='NIST 800-53' />
  </supportedStandards>
  <udts />
  <components>
    <component ref='iot-authentication-and-authorization' name='IoT Authentication and Authorization' desc='' groupName='' tags='' position='4' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-770' name='Allocation of Resources Without Limits or Throttling' state='0' impact='100'>
          <desc>The software allocates a reusable resource or group of
                        resources on behalf of an actor without imposing any restrictions on how many
                        resources can be allocated, in violation of the intended security policy for
                        that actor.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:27:12.662'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-250' name='Execution with Unnecessary Privileges' state='0' impact='100'>
          <desc>The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.
New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges. Privilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-732' name='Incorrect Permission Assignment for Critical Resource' state='0' impact='100'>
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='NO-PASSWORD-CHANGE' name='Lack of password change facility' state='0' impact='100'>
          <desc>When the application does not offer a password change facility, a compromise of the current user password will lead to an attacker having persistent access to the account. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-306' name='Missing Authentication for Critical Function' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources. 
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-257' name='Plaintext Storage of a Password' state='0' impact='100'>
          <desc>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit overplaintextpasswords since they are subject not only to reuse by maliciousattackersbut also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-521' name='Poor quality passwords in use' state='0' impact='100'>
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.
An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-307' name='The application does not implement anti-automation mechanisms to prevent automated long time-sustained probes' state='0' impact='100'>
          <desc>The software does not properly limit the number or frequency of interactions that it has with
                        an actor, such as the number of incoming requests.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;This can allow the actor to perform actions more frequently than expected. The actor
                        could be a human or an automated process such as a virus or bot. This could be used to cause a
                        denial of service, compromise program logic (such as limiting humans to a single vote), or other
                        consequences. For example, an authentication routine might not limit the number of times an
                        attacker can guess a password. Or, a web site might conduct a poll but only expect humans to
                        vote a maximum of once a day.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:25:28.831'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-799' url='https://cwe.mitre.org/data/definitions/799.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-255' name='The application does not wipe used and not needed passwords or key material' state='0' impact='100'>
          <desc>When using password or key material within an application, these are copied in memory and can, be copied back to the disk depending on several factors.
If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-327' name='Use of a Broken or Risky Cryptographic Algorithm' state='0' impact='100'>
          <desc>The use of a broken or risky cryptographic algorithm is an
                        unnecessary risk that may result in the exposure of sensitive
                        information.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:28:43.643'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='CWE-285' name='Apply authorisation checks to segregate and control access to user data' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Applications protecting sensitive or otherwise restricted resources must ensure only appropriate and authorised users may access the application data. It is important that an application prevents unauthorised users gaining inappropriate access to each other's data; although user A and user B may both be trusted to access data within the application, they may be authorised to only access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are manipulation of an ID value or other object reference sent in the URL or body of an HTTP request). 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this will be through checking the validity of the session token issued after login.&lt;/li&gt; 
   &lt;li&gt;Confirm the user is entitled to access the data or resource they are requesting. E.g. their confirmed identify checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt; 
   &lt;li&gt;Access controls should be granular, and allow for access to individual resources to be issued to individual users or roles.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;div&gt;
    URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework. 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='Art.32' supportedStandardRef='EU-GDPR' />
            <standard ref='9.1.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-24' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-5' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-6' supportedStandardRef='NIST 800-53' />
            <standard ref='CM-7' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-12' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-4' supportedStandardRef='NIST 800-53' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='9.5' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='9.5' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Using two different browsers configured with an intercepting proxy.&lt;/li&gt;
                            &lt;li&gt;Login as user A in browser A.&lt;/li&gt;
                            &lt;li&gt;Login as user B in browser B.&lt;/li&gt;
                            &lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Perform the operation as user A and view their sensitive data&lt;/li&gt;
                            &lt;li&gt;Obtain the session ID of user B&lt;/li&gt;
                            &lt;li&gt;Configure the proxy to intercept&lt;/li&gt;
                            &lt;li&gt;Perform the operation as user A again, but this time intercept all the requests
                            and replace user A's session ID with that of user B&lt;/li&gt;
                            &lt;li&gt;Ensure that user A's sensitive data is &lt;b&gt;not &lt;/b&gt;visible&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:14.266'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='STRONG-ALGORITHMS-PROTOCOLS' name='Ensure that only strong algorithms, cyphers and protocols are used' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  Ensure that the application is using strong algorithms, cyphers and protocols. The general practice and required minimum key lengths depend on the scenarios listed below. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Key exchange: Diffie Hellman key exchange with minimum 2048 bits&lt;/li&gt; 
  &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt; 
  &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt; 
  &lt;li&gt;Assymetric encryption: RSA 2048 bits&lt;/li&gt; 
  &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt; 
  &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references>
            <reference name='NIST SP 800-175b' url='https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-175b.pdf' />
            <reference name='NIST SP 800-57' url='https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-57pt1r4.pdf' />
            <reference name='OWASP cryptographic storage' url='https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet' />
            <reference name='OWASP key management' url='https://www.owasp.org/index.php/Key_Management_Cheat_Sheet' />
          </references>
          <standards>
            <standard ref='10.1.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='13.2.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.8.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.8' supportedStandardRef='iotsf-class-4' />
            <standard ref='SC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='SC-12' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-6' supportedStandardRef='NIST 800-53' />
            <standard ref='10.15' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='7.7' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='10.15' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='7.7' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='10.15' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='7.7' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='7.8' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>Check that the Cryptographic protocols comply to the best practices listed bellow:
                            &lt;br /&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Key exchange: Diffieâ€“Hellman key exchange with minimum 2048
                            bits&lt;/li&gt;
                            &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                            &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                            &lt;li&gt;Assymetric encryption: RSA 2048 bits&lt;/li&gt;
                            &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                            &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;br /&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-08-07T09:33:09.745'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-799' name='Implement application and network rate limiting' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
    A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks. 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environment may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt; 
    &lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks from multiple sources to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br /&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;b&gt;Remediation:&lt;/b&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    Implement the mechanisms to lockout accounts: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period.&lt;/li&gt; 
    &lt;li&gt;When the application detects that an account is locked more times than usual, this account shall be disabled. A disabled account shall only be restored by an administrator.&lt;/li&gt; 
    &lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references>
            <reference name='OWASP Blocking Brute Force Attacks' url='https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks' />
          </references>
          <standards>
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='AC-23' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-7' supportedStandardRef='NIST 800-53' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.14' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.14' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;This test requires triggering a bruteforce attack and checking if it has been
                            blocked.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt; To perform this kind of attacks you can use
                            &lt;a
                            href="https://support.portswigger.net/customer/portal/articles/1964020-using-burp-to-brute-force-a-login-page"&gt;Burp
                            proxy&amp;nbsp;bruteforcing feature&lt;/a&gt;.&amp;nbsp;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:17.736'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-799-LOGIN' name='Implement application and network rate limiting on the login function' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        A number of attacks rely on brute-force techniques to send large volumes of requests to
                        enumerate or attempt to exploit flaws in an application, for example, sending common passwords
                        to multiple target accounts within an application. By profiling normal traffic volumes, and
                        applying rate limiting, the application can be built to actively mitigate such attacks.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict
                        attacks against the authentication or registration systems. Multiple failures (or attempts) from
                        a single IP should result in temporarily blocking or dropping traffic from the source. Note
                        however that some corporate and ISP environment may place multiple valid and discrete clients
                        behind the same IP address, resulting in false-positives.&lt;/li&gt;
                        &lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks from
                        multiple sources to avoid IP based rate-limiting. To mitigate this class of attack, Indicators
                        of Compromise should be monitored (for example a higher rate of login failures than usual), and
                        appropriate actions taken. For example, when the application detects active brute-force attacks,
                        a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks
                        sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common
                        passwords across multiple accounts). Similarly, the application could respond by requiring a
                        CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Implement the mechanisms to lockout accounts:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;When the application detects a set number of failure login attempts, the account shall
                        be locked for a certain time period.&lt;/li&gt;
                        &lt;li&gt;When the application detects that an account is locked more times than usual, this
                        account shall be disabled. A disabled account shall only be restored by an administrator.&lt;/li&gt;
                        &lt;li&gt;When the application detects active brute-force attacks, the application shall require
                        a CAPTCHA, cookie, or JavaScript challenge.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='OWASP Blocking Brute Force Attacks' url='https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks' />
          </references>
          <standards>
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.8.7' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.7' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.7' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.7' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-16' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-2' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-7' supportedStandardRef='NIST 800-53' />
            <standard ref='IA-1' supportedStandardRef='NIST 800-53' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.23' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.20' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='2.23' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.5' supportedStandardRef='OWASP-MASVS-L1' />
            <standard ref='4.5' supportedStandardRef='OWASP-MASVS-L1+R' />
            <standard ref='4.5' supportedStandardRef='OWASP-MASVS-L2' />
            <standard ref='4.5' supportedStandardRef='OWASP-MASVS-L2+R' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>Use tools like
                            &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;,
                            &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt;
                            or
                            &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite&lt;/a&gt;&amp;nbsp;to simulate
                            brute force attacks against the login function.&amp;nbsp;
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Perform a simulation of the attack against the login function.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that the function is blocked for your source after n attempts.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that there is a log alerting function for an unusual amount of failed log
                            in attempts, even if they originated from different sources.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:15.179'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-521' name='Require the use of strong passwords' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        Passwords used either as a sole verification credentials, or as part of a multi-factor
                        authentication, are a key aspect of application security, and strong password selection should
                        be encouraged and enforced. The application should allow flexibility in user password selection,
                        and enforce minimum criteria for password quality. This should include:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt;
                        &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more
                        resistant to attack.&lt;/li&gt;
                        &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt;
                        &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through
                        black-lists. For example, a set of commonly used passwords can be found on SecLists at&amp;nbsp;&lt;a
                        href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;p&gt;&lt;b&gt;Password length&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Password length considers the minimum and maximum length of characters comprising the
                        password of your users. For ease of changing this length, its implementation can be configurable
                        possibly using a properties file or xml configuration file.&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Minimum length. Passwords should be at least ten (10) characters long. Combining this
                        length with complexity makes a password difficult to guess and/or brute force.&lt;/li&gt;
                        &lt;li&gt;Maximum length. People tend to forget their passwords easily. The longer the password,
                        the more likely people are to enter them incorrectly for the system. However, long pass-phrases
                        can be easily remembered, and should not be prevented through unnecessarily strict upper
                        restrictions on length.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;&lt;b&gt;Password Complexity&lt;/b&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Password characters should be a combination of alphanumeric characters. Alphanumeric
                        characters consist of letters, numbers, punctuation marks, mathematical and other conventional
                        symbols.&lt;/li&gt;
                        &lt;li&gt;For change and reset password functionality it is recommended a history of old
                        password (salted) hashes used. This can be used to prevent password reuse, or an attacker
                        alternating between a selection of passwords (Monday1, Tuesday2 etc.)&lt;/li&gt;
                        &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the
                        database is compromised.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.3.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-16' supportedStandardRef='NIST 800-53' />
            <standard ref='IA-1' supportedStandardRef='NIST 800-53' />
            <standard ref='2.7' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.7' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L1' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L1+R' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L2' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L2+R' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt;
                            &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or
                            OWASP.&lt;/li&gt;
                            &lt;/ol&gt;An example of strong password policy (
                            &lt;a
                            href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from
                            the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the
                            following 4 complexity rules:
                            &lt;ul&gt;
                            &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt;
                            &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt;
                            &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt;
                            &lt;li&gt;at least 1 special character (punctuation) â€” do not forget to
                            treat space as
                            special characters too&lt;/li&gt;
                            &lt;li&gt;at least 10 characters&lt;/li&gt;
                            &lt;li&gt;at most 128 characters&lt;/li&gt;
                            &lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:15.156'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.16' name='The product allows an authorized factory reset of the device’s authorization information.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product allows an authorized factory reset of the device’s authorization information.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The devices are often authorized to an account, based on license agreements with service providers. The device should have the option to be deauthorized and reset in case the user no longer wants to use it or if the user wants to authorize the device to another account.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product allows an authorized factory reset of the device’s authorization information.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.12' name='The product allows the factory issued or OEM login accounts to be disabled, erased or renamed.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts should be disabled, erased or renamed. This is to avoid the type of attacks where factory default logins and passwords are published on the web, which allows attackers to mount very simple scanning and dictionary attacks on devices.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed when installed or commissioned.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='IoT Security Guidance' url='https://www.owasp.org/index.php/IoT_Security_Guidance' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.11' name='The product only allows controlled user account access.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product only allows controlled user account access. Access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Product shall not allow any unjustified anonymous or guest access in order to prevent potential theft or disclosure of sensitive information, therefore only controlled user account access shall be permitted.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product only allows controlled user account access and access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Top 10 2013-A7-Missing Function Level Access Control' url='https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control' />
          </references>
          <standards>
            <standard ref='2.4.8.11' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.11' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.11' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.11' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;The best way to find out if an application has failed to properly restrict function level access is to verify every application function:&lt;/p&gt;

	&lt;p&gt;1. Does the UI show navigation to unauthorized functions?&lt;br /&gt;
2. Are server side authentication or authorization checks missing?&lt;br /&gt;
3. Are server side checks done that solely rely on information provided by the attacker?&lt;/p&gt;

	&lt;p&gt;Using a proxy, browse your application with a privileged role. Then revisit restricted pages using a less privileged role. If the server responses are alike, you&amp;#8217;re probably vulnerable. Some testing proxies directly support this type of analysis.&lt;br /&gt;
You can also check the access control implementation in the code. Try following a single privileged request through the code and verifying the authorization pattern. Then search the codebase to find where that pattern is not being followed.&lt;br /&gt;
Automated tools are unlikely to find these problems.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.5' name='The product will not allow new passwords containing the user account name with which the user account is associated.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product will not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Weak passwords are a serious threat to computer security, and specifically the guessable ones should be forbidden through organizational policy and suitable technical measures. Using the user account name as password or part of a password is completely insecure and makes a brute-force attack against the login interface much easier.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product does not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Implement Proper Password Strength Controls' url='https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls' />
            <reference name='Testing for Default or Guessable User Account (OWASP-AT-003)' url='https://www.owasp.org/index.php/Testing_for_Default_or_Guessable_User_Account_(OWASP-AT-003)' />
          </references>
          <standards>
            <standard ref='2.4.8.5' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.5' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;Please see reference [2] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.6' name='The product/system enforces passwords to be compliant with 3GPP TS33.117 or similar recommendations.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Password entry follows industry standard practice such recommendations of the 3GPP TS33.117 Password policy. [ref. 1] or &lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3] on password length, characters from the groupings and special characters.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
A key concern when using passwords for authentication is password strength. A &amp;#8220;strong&amp;#8221; password policy makes it difficult or even improbable for one to guess the password through either manual or automated means. The main characteristics that define a strong password are length, complexity and topology (the pattern that a password is written).&lt;br /&gt;
Passwords shall not be vulnerable to dictionary attack, which is a type of brute force attack technique for defeating a cipher or authentication mechanism by trying to determine its decryption key or passphrase by trying hundreds or sometimes millions of likely possibilities, such as words in a dictionary. &lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product/system enforces passwords to be compliant with 3GPP TS33.117 or similar (&lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3]) recommendations to include: At least eight characters in length, characters from the groupings: alpha, numeric and special characters and shall not be vulnerable to dictionary attack.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Catalogue of general security assurance requirements' url='https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=2928' />
            <reference name='NIST Special Publication 800-63B: Digital Identity Guidelines' url='https://pages.nist.gov/800-63-3/sp800-63b.html' />
            <reference name='Password strategies that can help your organisation remain secure' url='https://www.ncsc.gov.uk/guidance/password-collection' />
          </references>
          <standards>
            <standard ref='2.4.8.6' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.6' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.6' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.6' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;Please see reference [3] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.3' name='Where a UI password is used for login authentication, the factory issued or reset password is unique to each device in the product family.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where a user interface password is used for login authentication, the factory issued or reset password is unique to each device in the product family.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Apply a process which ensures that the initial user interface password or factory reset password is unique to each device in the product family. If a password-less authentication is used the same principles of uniqueness apply.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='US-CERT: Risks of Default Passwords on the Internet' url='https://www.us-cert.gov/ncas/alerts/TA13-175A' />
          </references>
          <standards>
            <standard ref='2.4.8.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.3' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.15' name='Where passwords are entered on a UI, the actual pass phrase is obscured by default.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (•), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against &amp;#8220;shoulder surfing&amp;#8221;, in other words to prevent nearby observers reading the password &amp;#8220;over the user&amp;#8217;s shoulder&amp;#8221; and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The Pros and Cons of Password Masking' url='https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html' />
          </references>
          <standards>
            <standard ref='2.4.8.15' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.15' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.15' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.15' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.17' name='Where the product  has the ability to remotely recover from attack, it should rely on a known good state, to enable safe recovery and updating of the device' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The ability to remotely recover from these situations should rely on a known good state, such as locally storing a known good version to enable safe recovery and updating of the device. This will avoid denial of service and costly recalls or maintenance visits, whilst managing the risk of potential takeover of the device by an attacker subverting update or other network communications mechanisms.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Ensuring Software Integrity in IoT Devices' url='https://www.omicsonline.org/open-access/ensuring-software-integrity-in-iot-devices-2165-7866-1000217.pdf' />
          </references>
          <standards>
            <standard ref='2.4.8.17' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.8.17' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.17' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.17' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.17' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.8.2' name='Where the product has a secure source of time there is a method of validating its integrity.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where the product has a secure source of time there is a method of validating its integrity.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Network Time Protocol (&lt;span class="caps"&gt;NTP&lt;/span&gt;) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks. In operation since before 1985, &lt;span class="caps"&gt;NTP&lt;/span&gt; is one of the oldest Internet protocols in current use. &lt;span class="caps"&gt;NTP&lt;/span&gt;sec is a fork implementation of &lt;span class="caps"&gt;NTP&lt;/span&gt; that has been systematically security-hardened.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where the product has a secure source of time there is a method of validating its integrity such as &lt;span class="caps"&gt;NTP&lt;/span&gt;sec (please see reference &lt;span class="caps"&gt;URL&lt;/span&gt; [1]).&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='NTPsec project - a secure, hardened, and improved implementation of Network Time Protocol derived from NTP' url='https://www.ntpsec.org/' />
          </references>
          <standards>
            <standard ref='2.4.8.2' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.8.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.2' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-232' name='Anonymous users could gain access to sensitive data' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers could access data for which they are not authorised by connecting directly
                                to the resource, without authenticating. E.g.: GET /userdetails?ID=145 to gain direct
                                access to that user's personal information.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='50' easeOfExploitation='50' />
              <references>
                <reference name='OWASP Development Guide: Authorisation' url='https://www.owasp.org/index.php/Guide_to_Authorization' />
                <reference name='OWASP Top Ten' url='https://www.owasp.org/index.php/Top_10_2007-Failure_to_Restrict_URL_Access' />
                <reference name='WASC-02' url='http://projects.webappsec.org/w/page/13246940/Insufficient%20Authorization' />
              </references>
              <weaknesses>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='CWE-285' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-285' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-112' name='Brute Force' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers&amp;#8217; ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one&amp;#8217;s secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='NO-PASSWORD-CHANGE'>
                  <controls>
                    <control ref='IOT2.4.8.12' mitigation='17' />
                  </controls>
                </weakness>
                <weakness ref='CWE-257'>
                  <controls>
                    <control ref='IOT2.4.8.15' mitigation='17' />
                  </controls>
                </weakness>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='IOT2.4.8.12' mitigation='17' />
                    <control ref='IOT2.4.8.3' mitigation='17' />
                    <control ref='IOT2.4.8.5' mitigation='17' />
                    <control ref='IOT2.4.8.6' mitigation='17' />
                  </controls>
                </weakness>
                <weakness ref='CWE-255'>
                  <controls>
                    <control ref='IOT2.4.8.12' mitigation='17' />
                    <control ref='IOT2.4.8.16' mitigation='17' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.8.12' mitigation='17' />
                <control ref='IOT2.4.8.15' mitigation='17' />
                <control ref='IOT2.4.8.16' mitigation='17' />
                <control ref='IOT2.4.8.3' mitigation='17' />
                <control ref='IOT2.4.8.5' mitigation='17' />
                <control ref='IOT2.4.8.6' mitigation='17' />
              </controls>
            </threat>
            <threat ref='CAPEC-130' name='Denial of service through resource exhaustion' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An attacker causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request. For example, using an Integer Attack, the attacker could cause a variable that controls allocation for a request to hold an excessively large value. Excessive allocation of resources can render a service degraded or unavailable to legitimate users and can even lead to crashing of the target. 
&lt;br /&gt;</desc>
              <riskRating confidentiality='50' integrity='50' availability='100' easeOfExploitation='100' />
              <references />
              <weaknesses>
                <weakness ref='CWE-770'>
                  <controls>
                    <control ref='CWE-799' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-799' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-250'>
                  <controls>
                    <control ref='IOT2.4.8.11' mitigation='100' />
                  </controls>
                </weakness>
                <weakness ref='CWE-732'>
                  <controls>
                    <control ref='IOT2.4.8.11' mitigation='100' />
                  </controls>
                </weakness>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='IOT2.4.8.11' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.8.11' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-158' name='Sensitive data is compromised through network sniffing attacks' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An attacker monitoring network traffic between nodes of a public or multicast network.&amp;nbsp;
                                &lt;div&gt;
                                &lt;ul&gt;
                                &lt;li&gt;The attacker need not be able to prevent reception or change content but must
                                simply be able to observe and read the traffic.&amp;nbsp;&lt;/li&gt;
                                &lt;li&gt;The attacker might precipitate or indirectly influence the content of the
                                observed transaction, but the attacker is never the intended recipient of the
                                information.&amp;nbsp;&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This differs from other sniffing attacks in that it is over a public network rather via
                                some other communications channel, such as radio.
                                &lt;br /&gt;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='75' integrity='75' availability='50' easeOfExploitation='50' />
              <references />
              <weaknesses>
                <weakness ref='CWE-327'>
                  <controls>
                    <control ref='STRONG-ALGORITHMS-PROTOCOLS' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='STRONG-ALGORITHMS-PROTOCOLS' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-112-USERNAME' name='User accounts compromised through username guessing' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='50' integrity='50' availability='25' easeOfExploitation='50' />
              <references />
              <weaknesses>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='CWE-521' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-307'>
                  <controls>
                    <control ref='CWE-799-LOGIN' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-521' mitigation='50' />
                <control ref='CWE-799-LOGIN' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.8.15' mitigation='33' />
                    <control ref='IOT2.4.8.17' mitigation='33' />
                    <control ref='IOT2.4.8.2' mitigation='33' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.8.15' mitigation='33' />
                <control ref='IOT2.4.8.17' mitigation='33' />
                <control ref='IOT2.4.8.2' mitigation='33' />
              </controls>
            </threat>
            <threat ref='CAPEC-37' name='Retrieve Embedded Sensitive Data' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.8.11' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.8.11' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-interfaces' name='IoT Device Interfaces' desc='' groupName='' tags='' position='8' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-319' name='Cleartext Transmission of Sensitive Information' state='0' impact='100'>
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.
Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-326' name='Inadequate Encryption Strength' state='0' impact='100'>
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNPATCHED-PRODUCT' name='Recommended security patches are not applied' state='0' impact='100'>
          <desc>When patches and updates are not applied in a timely manner then a product (e.g. Operating System, Software or Mobile App) or a system could be vulnerable to known security issues. These issues could be used by an attacker to gain access to the system. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNRESTRICTED-NETWORK' name='Service is exposed to a wide attack surface' state='0' impact='100'>
          <desc>The product is exposed or reachable to an unnecessarily large group of potential attackers. An over-exposure of a component increases the chance of an attacker gaining access to the system through a vulnerability. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-284' name='The service contains vulnerabilities that could grant access to data' state='0' impact='100'>
          <desc>The services may contain security vulnerabilities that can be exploited by attackers to gain
                        unauthorised access to data or additional services.&amp;nbsp;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:29:08.603'>
              <output></output>
            </source>
            <references>
              <reference name='OWASP Top 10 - A9' url='https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='UNNECESSARY-SERVICES' name='Unnecessary services are exposed' state='0' impact='100'>
          <desc>The application exposes unnecessary services which increase the attack surface.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:29:44.983'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='SSL-WEAK-CIPHERS' name='Use of weak TLS cipher suites' state='0' impact='100'>
          <desc>A weak TLS cipher suite could allow an attacker to sniff the transmission by exploiting this weakness. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.7.5' name='Alerting on unauthorized changes.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;If an unauthorised change is detected, the device should alert the user/administrator to an issue and should not connect to wider networks than those necessary to perform the alerting function.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
IoT device software should be verified using secure boot mechanisms. When an unauthorized change is detected, the device should alert operators to the issue. The issue notification should not connect to wider networks than necessary to deliver the alert.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that If an unauthorised change is detected, the device alerts the user/administrator to an issue and doesn&amp;#8217;t connect to wider networks than those necessary to perform the alerting function.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Top 10-2017 A3-Sensitive Data Exposure' url='https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure' />
          </references>
          <standards>
            <standard ref='2.4.7.5' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.7.5' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.5' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.12' name='All network communications keys are stored securely, in accordance with industry standards.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;All network communications keys are stored securely, in accordance with industry standards such as &lt;span class="caps"&gt;FIPS&lt;/span&gt; 140 or similar.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Network communications keys shall be securely stored in accordance with industry standards. &lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that cryptographic keys for update integrity protection and confidentiality are securely managed in accordance with industry standards such as &lt;span class="caps"&gt;FIPS&lt;/span&gt; 140-2.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Security Requirements for Cryptographic Modules' url='https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf' />
          </references>
          <standards>
            <standard ref='2.4.7.12' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.12' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.12' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.12' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.24' name='As far as reasonably possible, devices should remain operating and locally functional in the case of a loss of network connection and should recover cleanly in the case of restoration of a loss of power. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;As far as reasonably possible, devices should remain operating and locally functional in the case of a loss of network connection and should recover cleanly in the case of restoration of a loss of power. Devices should be able to return to a network in a sensible state and in an orderly fashion, rather than in a massive scale reconnect.&lt;br /&gt;
Continuous operation ensures that devices provide basic functionality without relying on other systems or networks. It is important to note here that a device should only be required to supply basic features when the network is inaccessible. Devices should provide continuous operation if the network or the Internet is inaccessible. Manual controls where needed, either physical buttons or digital on the device itself.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.7.24' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.7.24' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.24' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.24' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.24' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.21' name='If a factory reset is made the device should warn that secure operation may be compromised unless updated.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;If a factory reset is made the device should warn that secure operation may be compromised unless updated.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions into a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For that reason after a factory reset, the device is reverting to an earlier, out-of-date and probably insecure version and it has to be updated again to ensure its secure operation.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that if a factory reset is made the device warns that secure operation may be compromised unless updated.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.7.21' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.21' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.21' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.21' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='INF-UNNECESSARY-SERVICES' name='Restrict access to required services only' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        The attack surface, and therefore susceptibility to attack, should be minimised. &amp;nbsp;In
                        particular, services that are not explicitly required for the proper operation of the server or
                        service should be disable, or access to them be restricted.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Any service, feature, or functionality that is not required should be disabled or
                        removed. &amp;nbsp;This applies equally to the operating system, middleware, web-server, or
                        other software in use.&lt;/li&gt;
                        &lt;li&gt;Access to the server and remaining services (in particular those that cannot be
                        disabled or removed) should be controlled use host-based and/or network security controls; for
                        example host firewalls, network firewalls, routers, or switches.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Conduct a host review to confirm the software and services running and exposed on
                            the system.&lt;/li&gt;
                            &lt;li&gt;Support the host review with network based scans across at least all TCP and UDP
                            ports (0-65535), together with RPC and other remote call services.&lt;/li&gt;
                            &lt;li&gt;Verify the running and accessible services against expected configuration for the
                            system, and against the security principal of 'least privilege'&lt;/li&gt;
                            &lt;li&gt;Where a network or host based firewall is in use, it should be configured to drop
                            connections rather than reject them. i.e. port-scans should identify only 'open' or
                            'filtered' services; no service should be identifiably 'closed'.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note however that different network based security solutions exhibit different
                            behaviour in this regard.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:18.528'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='RESTRICT-SERVICE' name='Restrict access to the service at the network layer to reduce exposure' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  Access to services should be restricted to expected sources, limiting exposure of the service and its attack surface; and the likelihood of a malicious actor gaining access to the system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Apply network layer security controls so that only the necessary and expected IP addresses are permitted access to connect to the service.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that the network access to the service is only allowed for the components
                            which needs it.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;There should be a firewall protecting the network segment in which the service is
                            installed.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the firewall restricts all access and only permits the minimum
                            connections required using the principal of least privilege.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-23T21:01:06.125'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.1' name='The product prevents unauthorized connections to it or other devices the product is connected to.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product prevents unauthorized connections to it or other devices the product is connected to.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
A significant vulnerability is networked system accessibility. Because by definition IoT systems are connected to the Internet, attacks can be conducted remotely, either by direct access to networked control interfaces, or by downloading malware to devices. For that reason product shall prevent unauthorized connections to it or other devices the product is connected to, for example by firewalls.&lt;br /&gt;
Firewall is a software used to maintain the security of a private network and block unauthorized access to or from private networks and are often employed to prevent unauthorized Web users or malware from gaining access to private networks connected to the Internet.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product prevents unauthorized connections to it or other devices the product is connected to. For example, there is a firewall on each interface and internet layer protocol.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='IoT Security Guidance' url='https://www.owasp.org/index.php/IoT_Security_Guidance' />
            <reference name='NIST Guidelines on Firewalls and Firewall Policy' url='https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=901083' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.3' name='The uncontrolled and any unintended packet forwarding function should be blocked.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;For products with one or more network interfaces, the uncontrolled and any unintended packet forwarding function should be blocked.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Forwarding refers to the router-local action of transferring the packet from an input link interface to the appropriate output link interface. When applications allow user input to forward requests between different parts of the site, the application must check that the user is authorized to access the &lt;span class="caps"&gt;URL&lt;/span&gt;, perform the functions it provides, and it is an appropriate &lt;span class="caps"&gt;URL&lt;/span&gt; request. If the application fails to perform these checks, an attacker crafted &lt;span class="caps"&gt;URL&lt;/span&gt; may pass the application’s access control check and then forward the attacker to an administrative function that is not normally permitted.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the uncontrolled and any unintended packet forwarding function is blocked to stop undesirable communication paths.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Top 10 2013-A10-Unvalidated Redirects and Forwards' url='https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards' />
            <reference name='Unvalidated Redirects and Forwards Cheat Sheet' url='https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;The best way to find out if an application has any unvalidated redirects or forwards is to:&lt;/p&gt;

	&lt;p&gt;1. Review the code for all uses of redirect or forward (called a transfer in .NET). For each use, identify if the target &lt;span class="caps"&gt;URL&lt;/span&gt; is included in any parameter values. If so, if the target &lt;span class="caps"&gt;URL&lt;/span&gt; isn’t validated against a whitelist, you are vulnerable.&lt;br /&gt;
2. Also, spider the site to see if it generates any redirects (&lt;span class="caps"&gt;HTTP&lt;/span&gt; response codes 300-307, typically 302). Look at the parameters supplied prior to the redirect to see if they appear to be a target &lt;span class="caps"&gt;URL&lt;/span&gt; or a piece of such a &lt;span class="caps"&gt;URL&lt;/span&gt;. If so, change the &lt;span class="caps"&gt;URL&lt;/span&gt; target and observe whether the site redirects to the new target.&lt;br /&gt;
3. If code is unavailable, check all parameters to see if they look like part of a redirect or forward &lt;span class="caps"&gt;URL&lt;/span&gt; destination and test those that do.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.14' name='Where the CoAP protocol is used, it is protected by a DTLS connection with no known cipher vulnerabilities.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where the CoAP protocol is used, it is protected by a &lt;span class="caps"&gt;DTLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Constrained Application Protocol (CoAP) is a service layer protocol that is intended for use in resource-constrained internet devices, such as wireless sensor network nodes. CoAP is designed to easily translate to &lt;span class="caps"&gt;HTTP&lt;/span&gt; for simplified integration with the web, while also meeting specialized requirements such as multicast support, very low overhead, and simplicity which are extremely important for IoT.&lt;br /&gt;
Because CoAP is built on top of &lt;span class="caps"&gt;UDP&lt;/span&gt; not &lt;span class="caps"&gt;TCP&lt;/span&gt;, &lt;span class="caps"&gt;SSL&lt;/span&gt;/TLS are not available to provide security.Datagram Transport Layer Security (&lt;span class="caps"&gt;DTLS&lt;/span&gt;) provides the same assurances as &lt;span class="caps"&gt;TLS&lt;/span&gt; but for transfers of data over &lt;span class="caps"&gt;UDP&lt;/span&gt;. &lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where the CoAP protocol is used, it is protected by a &lt;span class="caps"&gt;DTLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='MQTT and CoAP, IoT Protocols' url='https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.13' name='Where the MQTT protocol is used, it is protected by a TLS connection with no known cipher vulnerabilities.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
&lt;span class="caps"&gt;MQTT&lt;/span&gt; (Message Queue Telemetry Transport), is a very lightweight and widely used messaging and information exchange protocol for IoT devices throughout the world. The &lt;span class="caps"&gt;MQTT&lt;/span&gt; communication can be encrypted using &lt;span class="caps"&gt;TLS&lt;/span&gt; / &lt;span class="caps"&gt;SSL&lt;/span&gt; protocols, ensuring a secure and safe communication.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='MQTT and CoAP, IoT Protocols' url='https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php' />
            <reference name='MQTT Version 3.1.1 Plus Errata 01' url='http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.17' name='Where there is a loss of communications it shall not compromise the integrity of the device. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where there is a loss of communications it shall not compromise the integrity of the device.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
A device of course is expected to lose communications, but when it does it will be in a safe way and security controls and settings remain in effect. The integrity of a system should remain even though networking has been lost. Therefore, device&amp;#8217;s integrity shall be ensured regardless of being connected to a network or not. &lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where there is a loss of communications it shall not compromise the integrity of the device.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.7.17' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.7.17' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.17' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.17' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.17' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='VULN-SERVICE' name='Attackers gain access to unauthorised data by exploiting vulnerabilities in the service' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers exploit vulnerabilities in the service and gain access to data, or to
                                services for which they are not authorised.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='100' />
              <references />
              <weaknesses>
                <weakness ref='CWE-284'>
                  <controls>
                    <control ref='RESTRICT-SERVICE' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='RESTRICT-SERVICE' mitigation='100' />
              </controls>
            </threat>
            <threat ref='SERVER-ATTACK' name='Data compromised if the server itself is compromised' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>If attackers compromise the server that hosts the service or data, then the data and
                                the service itself could be at risk of compromise. The server could be compromised
                                through any of the services that it exposes.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNNECESSARY-SERVICES'>
                  <controls>
                    <control ref='INF-UNNECESSARY-SERVICES' mitigation='20' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='INF-UNNECESSARY-SERVICES' mitigation='20' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='OWASP A6:2017' name='Exploitation of Security Misconfiguration' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
unpatched flaws or access default&lt;br /&gt;
accounts, unused pages, unprotected&lt;br /&gt;
files and directories, etc to gain&lt;br /&gt;
unauthorized access or knowledge of&lt;br /&gt;
the system.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNPATCHED-PRODUCT'>
                  <controls>
                    <control ref='IOT2.4.7.21' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.21' mitigation='100' />
              </controls>
            </threat>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.7.17' mitigation='50' />
                    <control ref='IOT2.4.7.24' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.17' mitigation='50' />
                <control ref='IOT2.4.7.24' mitigation='50' />
              </controls>
            </threat>
            <threat ref='CAPEC-37' name='Retrieve Embedded Sensitive Data' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.7.12' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.12' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='networking' name='Networking' desc='' library=''>
          <threats>
            <threat ref='IOT-WIDE-ATTACK-SURFACE' name='Exploitation of a wide attack surface' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNRESTRICTED-NETWORK'>
                  <controls>
                    <control ref='IOT2.4.7.1' mitigation='50' />
                    <control ref='IOT2.4.7.3' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.1' mitigation='50' />
                <control ref='IOT2.4.7.3' mitigation='50' />
              </controls>
            </threat>
            <threat ref='CAPEC-157' name='Sniffing Attacks' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-319'>
                  <controls>
                    <control ref='IOT2.4.7.13' mitigation='25' />
                    <control ref='IOT2.4.7.14' mitigation='25' />
                    <control ref='IOT2.4.7.5' mitigation='25' />
                  </controls>
                </weakness>
                <weakness ref='CWE-326'>
                  <controls>
                    <control ref='IOT2.4.7.12' mitigation='25' />
                    <control ref='IOT2.4.7.13' mitigation='25' />
                    <control ref='IOT2.4.7.14' mitigation='25' />
                    <control ref='IOT2.4.7.5' mitigation='25' />
                  </controls>
                </weakness>
                <weakness ref='SSL-WEAK-CIPHERS'>
                  <controls>
                    <control ref='IOT2.4.7.13' mitigation='25' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.12' mitigation='25' />
                <control ref='IOT2.4.7.13' mitigation='25' />
                <control ref='IOT2.4.7.14' mitigation='25' />
                <control ref='IOT2.4.7.5' mitigation='25' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-operating-system' name='IoT Device Operating System' desc='' groupName='' tags='' position='3' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-250' name='Execution with Unnecessary Privileges' state='0' impact='100'>
          <desc>The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.
New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges. Privilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-708' name='Incorrect Ownership Assignment' state='0' impact='100'>
          <desc>The software assigns an owner to a resource, but the owner is outside of the intended control sphere.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-732' name='Incorrect Permission Assignment for Critical Resource' state='0' impact='100'>
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-485' name='The application does not define isolated boundaries (Insufficient Encapsulation)' state='0' impact='100'>
          <desc>The application does not sufficiently encapsulate critical data or functionality. Encapsulation is about drawing strong boundaries. In a web browser that might mean ensuring that your mobile code cannot be abused by other mobile code. On the server it might mean differentiation between validated data and unvalidated data, between one user's data and another's, or between data users are allowed to see and data that they are not.
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-2' name='Unexpected Environment Condition' state='0' impact='100'>
          <desc>This is a generic weakness that includes several different situations, they are all related to unexpected environmental conditions and they could be related to:   
• Misconfiguration. 
• Uncleared buffers, shared memory, files, etc. 
• Problems between the interaction of two different entities that cause unexpected behaviour.   </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.6.7' name='All OS command line access to the most privileged accounts has been removed from the operating system.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;All OS command line access to the most privileged accounts has been removed from the Operating System.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The Devices’ OS’s most privileged account or &amp;#8220;superuser&amp;#8221; is a special user account used for system administration, capable of making unrestricted, potentially adverse, system-wide changes. For that reason it is often recommended that no-one use &amp;#8220;superuser&amp;#8221; as their normal user account and any access from the command line should be removed.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Remove all OS command line access to the most privileged accounts from the Operating System.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.10' name='All the applicable security features supported by the OS are enabled.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;All the applicable security features supported by the Operating System are enabled.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Operating System security features are essential to ensure the OS security and to prevent various types of malicious actions and attacks such as malware, viruses, etc. Therefore all the applicable security features shall be enabled.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Enable all the applicable security features supported by the Operating System such as updates, anti-spyware and anti-virus protection, etc.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='MacOS Security. Built right in.' url='https://www.apple.com/macos/security/' />
            <reference name='Overview of Linux Kernel Security Features' url='https://www.linux.com/learn/overview-linux-kernel-security-features' />
            <reference name='Windows 10 Enterprise Security' url='https://docs.microsoft.com/en-us/windows/security/' />
          </references>
          <standards>
            <standard ref='2.4.6.10' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.6.10' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.10' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.10' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.4' name='Files and directories are set to appropriate access privileges.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Files and directories are set to appropriate access privileges on a need to access basis.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Most Operating Systems have methods to assign permissions or access rights to specific users or groups. These permissions control the ability of the users to view, change, navigate, and execute the contents of the file system. Therefore files and directories should be set to appropriate access privileges according to the principle of the least privilege.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Set files, directories and persistent data to minimum access privileges required to correctly function.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The principle of least privilege' url='https://www.owasp.org/index.php/Least_privilege' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.3' name='OS accounts or logins have been disabled or eliminated at the end of the development process. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;All unnecessary Accounts or logins have been disabled or eliminated from the software at the end of the software development process. E.g. Development or debug accounts&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Interactive Operating System accounts have been used during the software development process in most of the cases have high privileges. That gives them access to critical resources and consequently they can be exploitable if they remain active after the development process. Therefore any interactive accounts or logins have to be disabled or eliminated at the end of the software development process.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Disable or eliminated all interactive Operating System accounts or logins at the end of the development process.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.8' name='OS kernel and its functions are prevented from being called by external product level interfaces and unauthorized applications.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product’s OS kernel and its functions are prevented from being called by external product level interfaces and unauthorized applications.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The kernel is a computer program that is the core of a computer&amp;#8217;s Operating System, with complete control over everything in the system. Therefore only internal calls shall be allowed and only from authorized applications in order to minimize the exposed attack surface.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Configure product&amp;#8217;s OS kernel and it&amp;#8217;s functions to be prevented from being called by external product level interfaces and unauthorized applications.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.6.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.6.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.8' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.5' name='Passwords file(s) ownership and access/write permissions are set to Devices’ OS’s most privileged account.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;If passwords absolutely must be stored in a local file, then passwords file(s) are owned by and are only accessible to and writable by the by the Devices’ OS’s most privileged account.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The Devices’ OS’s most privileged account or &amp;#8220;superuser&amp;#8221; is a special user account used for system administration, capable of making unrestricted, potentially adverse, system-wide changes. For that reason it is often recommended that no-one use &amp;#8220;superuser&amp;#8221; as their normal user account. According to the principle of least privilege, most users and applications run under an ordinary account to perform their work, and must be able to access only the information and resources that are necessary for their legitimate purpose. Thus, if a user only needs to be able to view a particular file, that user should have read-only access to it and should not be able to write to that file. Therefore all files that contain critical or sensitive data like the passwords file(s) shall have their ownership and their access/write permissions set to the Devices’ OS’s most privileged account.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Set ownership and access/write permissions for passwords file(s) to Devices’ OS’s most privileged account.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The principle of least privilege' url='https://www.owasp.org/index.php/Least_privilege' />
          </references>
          <standards>
            <standard ref='2.4.6.5' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.6.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.5' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.12' name='The OS implements a separation architecture to separate trusted from untrusted applications' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The trusted execution environment, or &lt;span class="caps"&gt;TEE&lt;/span&gt;, is an isolated area on the main processor of a device that is separate from the main operating system. It ensures that data is stored, processed and protected in a trusted environment. &lt;span class="caps"&gt;TEE&lt;/span&gt; provides protection for any connected “thing” by enabling end-to-end security, protected execution of authenticated code, confidentiality, authenticity, privacy, system integrity and data access rights.&lt;/p&gt;

	&lt;p&gt;It is already used widely in complex devices, such as smartphones, tablets and set-top boxes, and also by manufacturers of constrained chipsets and IoT devices in sectors such as industrial automation, automotive and healthcare, who are now recognizing its value in protecting connected things.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Trusted Execution Environment Provisioning (TEEP) Architecture' url='https://tools.ietf.org/id/draft-ietf-teep-architecture-01.html' />
          </references>
          <standards>
            <standard ref='2.4.6.12' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.12' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.12' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.11' name='The OS is separated from the application(s) and is only accessible via defined secure interfaces. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The Operating System is separated from the application(s) and is only accessible via defined secure interfaces.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Every device that is to be operated by an individual requires a user interface, usually referred to as a shell. This is because shell it&amp;#8217;s the outermost layer around the Operating System kernel and it&amp;#8217;s used to access its services including file management, process management (running and terminating applications), batch processing, and operating system monitoring and configuration.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the Operating System is separated from the application(s) and is only accessible via defined secure interfaces.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Operating System Structure' url='http://ycpcs.github.io/cs420-fall2014/lectures/lecture4_operating_system_structure.pdf' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.6.13' name='The product’s OS kernel is designed such that each component runs with the minimal security capabilities required (e.g. a microkernel architecture)' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Monolithic kernels are large in size and the structure, or lack of structure, makes them difficult to change and maintain without affecting other parts of the kernel. The microkernel approach is based on the idea of only placing essential core real-time operating system functions in the kernel, and other functionality is designed in modules that communicate through the kernel via minimal well-defined interfaces. The microkernel approach results in easy reconfigurable systems without the need to rebuild the kernel.&lt;/p&gt;

	&lt;p&gt;Modern mainstream operating systems (OSes) are designed for functionality, speed and ease of development. With the increase of functionality and support for more diverse hardware, their size and complexity keeps growing. These OSes have a monolithic structure, with most services contained in the kernel, i.e. the part of the system that executes in the privileged mode of the hardware. The result is an explosive growth in the amount of privileged code.&lt;/p&gt;

	&lt;p&gt;Any code executing in privileged mode can bypass security, and is therefore inherently part of a system&amp;#8217;s trusted computing base (&lt;span class="caps"&gt;TCB&lt;/span&gt;). Hence we are experiencing a rapid growth of the &lt;span class="caps"&gt;TCB&lt;/span&gt; of mainstream OSes. As almost all code is buggy, and the number of bugs grows with the size of the code base, this &lt;span class="caps"&gt;TCB&lt;/span&gt; growth is bound to lead to a growth of the number of vulnerabilities.&lt;br /&gt;
Microkernel design, with its ability to reduce &lt;span class="caps"&gt;TCB&lt;/span&gt; size, contain faults and encapsulateuntrusted components, is, in terms of security, superior to&lt;br /&gt;
monolithic systems.&lt;/p&gt;

	&lt;p&gt;Examples for microkernel architecture are: Mach, L4, &lt;span class="caps"&gt;QNX&lt;/span&gt;, &lt;span class="caps"&gt;MINIX&lt;/span&gt;, &lt;span class="caps"&gt;IBM&lt;/span&gt; K42.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The Jury Is In: Monolithic OS Design Is Flawed' url='http://ts.data61.csiro.au/publications/csiro_full_text/Biggs_LH_18.pdf' />
          </references>
          <standards>
            <standard ref='2.4.6.13' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.13' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.13' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-250'>
                  <controls>
                    <control ref='IOT2.4.6.11' mitigation='14' />
                    <control ref='IOT2.4.6.13' mitigation='14' />
                    <control ref='IOT2.4.6.3' mitigation='14' />
                    <control ref='IOT2.4.6.4' mitigation='14' />
                    <control ref='IOT2.4.6.5' mitigation='14' />
                    <control ref='IOT2.4.6.7' mitigation='14' />
                    <control ref='IOT2.4.6.8' mitigation='14' />
                  </controls>
                </weakness>
                <weakness ref='CWE-708'>
                  <controls>
                    <control ref='IOT2.4.6.5' mitigation='14' />
                  </controls>
                </weakness>
                <weakness ref='CWE-732'>
                  <controls>
                    <control ref='IOT2.4.6.11' mitigation='14' />
                    <control ref='IOT2.4.6.3' mitigation='14' />
                    <control ref='IOT2.4.6.4' mitigation='14' />
                    <control ref='IOT2.4.6.5' mitigation='14' />
                    <control ref='IOT2.4.6.7' mitigation='14' />
                    <control ref='IOT2.4.6.8' mitigation='14' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.6.11' mitigation='14' />
                <control ref='IOT2.4.6.13' mitigation='14' />
                <control ref='IOT2.4.6.3' mitigation='14' />
                <control ref='IOT2.4.6.4' mitigation='14' />
                <control ref='IOT2.4.6.5' mitigation='14' />
                <control ref='IOT2.4.6.7' mitigation='14' />
                <control ref='IOT2.4.6.8' mitigation='14' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='OWASP A6:2017' name='Exploitation of Security Misconfiguration' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
unpatched flaws or access default&lt;br /&gt;
accounts, unused pages, unprotected&lt;br /&gt;
files and directories, etc to gain&lt;br /&gt;
unauthorized access or knowledge of&lt;br /&gt;
the system.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-485'>
                  <controls>
                    <control ref='IOT2.4.6.11' mitigation='33' />
                    <control ref='IOT2.4.6.12' mitigation='33' />
                  </controls>
                </weakness>
                <weakness ref='CWE-2'>
                  <controls>
                    <control ref='IOT2.4.6.10' mitigation='33' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.6.10' mitigation='33' />
                <control ref='IOT2.4.6.11' mitigation='33' />
                <control ref='IOT2.4.6.12' mitigation='33' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-ownership-transfer' name='IoT Device Ownership Transfer' desc='' groupName='' tags='' position='12' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.16.4' name='The device has an irrevocable method of decommissioning and recommissioning.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;In case of ownership change, the device has an irrevocable method of decommissioning and recommissioning.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Decommissioning is the last stage in the device&amp;#8217;s life cycle. For example an IoT device may need to be decommissioned, because it will be commissioned in another network (recommissioning) or because it is due for replacement which is the case when the device reaches its end of life. In both cases resetting the device to its factory configuration is an important activity and should be handled properly by an irrevocable method.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the device has an irrevocable method of decommissioning and recommissioning.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='A staged approach to decommissioning' url='https://www.nao.org.uk/decommissioning/a-staged-approach-to-decommissioning/' />
          </references>
          <standards>
            <standard ref='2.4.16.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.16.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.16.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.16.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='CAPEC-37' name='Retrieve Embedded Sensitive Data' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.16.4' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.16.4' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-software' name='IoT Device Software' desc='' groupName='' tags='' position='1' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-319' name='Cleartext Transmission of Sensitive Information' state='0' impact='100'>
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.
Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-287' name='Improper Server&apos;s Identity Validation' state='0' impact='100'>
          <desc>The software does not validate, or incorrectly validates, the server's identity. 
If the server's identity is not validated, an attacker could spoof a trusted entity by using a man-in-the-middle (MITM) attack. The software might connect to a malicious host while believing it is a trusted host, or the software might be deceived into accepting spoofed data that appears to originate from a trusted host. 
 
One way to perform server's authentication is by using X509 certificates over TLS. 
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-209' name='Information Exposure Through an Error Message' state='0' impact='100'>
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-306' name='Missing Authentication for Critical Function' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources. 
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNPATCHED-PRODUCT' name='Recommended security patches are not applied' state='0' impact='100'>
          <desc>When patches and updates are not applied in a timely manner then a product (e.g. Operating System, Software or Mobile App) or a system could be vulnerable to known security issues. These issues could be used by an attacker to gain access to the system. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-654' name='Reliance on a Single Factor in a Security Decision' state='0' impact='100'>
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNRESTRICTED-NETWORK' name='Service is exposed to a wide attack surface' state='0' impact='100'>
          <desc>The product is exposed or reachable to an unnecessarily large group of potential attackers. An over-exposure of a component increases the chance of an attacker gaining access to the system through a vulnerability. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.5.5' name='Any product&apos;s port(s) that are not required for normal operation should be restricted or disabled.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;If the product has any virtual port(s) that are not required for normal operation, they are only allowed to communicate with authorised and authenticated entities or securely disabled when shipped. &lt;br /&gt;
Where a port is used for field diagnostics, the port input commands are deactivated and the output provides no information which could compromise the device, such as credentials, memory address or function names.                                                                         &lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
One of the most important principles in information security is to reduce the attack surface. Open ports are not always a security risk, for example a web server has to have 80 or 443 open otherwise users can not connect to use the web server. Thus taking into account that every open port increases the attack surface, any product&amp;#8217;s port(s) that are not required for normal operation should be restricted or disabled.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Restrict or disable any port(s) that are not required for normal operation.&lt;br /&gt;
Deactivate port input for port(s) that are used for field diagnostics and ensure their output provides no information which could compromise the device.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Developer IoT Security Guidance' url='https://www.owasp.org/index.php/IoT_Security_Guidance#Developer_IoT_Security_Guidance' />
            <reference name='Top 10 2014-I3 Insecure Network Services' url='https://www.owasp.org/index.php/Top_10_2014-I3_Insecure_Network_Services' />
          </references>
          <standards>
            <standard ref='2.4.5.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.5' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;Checking for Insecure Network Services includes:&lt;/p&gt;

	&lt;p&gt;1. Determining if insecure network services exist by reviewing your device for open ports using a port scanner.&lt;br /&gt;
2. As open ports are identified, each can be tested using any number of automated tools that look for DoS vulnerabilities, vulnerabilities related to &lt;span class="caps"&gt;UDP&lt;/span&gt; services and vulnerabilities related to buffer overflow and fuzzing attacks.&lt;br /&gt;
3. Reviewing network ports to ensure they are absolutely necessary and if there are any ports being exposed to the internet using UPnP.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.33' name='Memory locations used to store sensitive material (e.g. cryptographic keys, passwords/passphrases, etc.) are sanitised as soon as possible after they are no longer needed. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Memory locations used to store sensitive material (e.g. cryptographic keys, passwords/passphrases, etc.) are sanitised as soon as possible after they are no longer needed. These can include but are not limited to locations on the heap, the stack, and statically-allocated storage.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='ISO/IEC TR 24772:2013' url='https://www.iso.org/standard/61457.html' />
            <reference name='MEM03-C. Clear sensitive information stored in reusable resources' url='https://wiki.sei.cmu.edu/confluence/display/c/MEM03-C.+Clear+sensitive+information+stored+in+reusable+resources' />
          </references>
          <standards>
            <standard ref='2.4.5.33' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.33' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.33' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.2' name='Software images are digitally signed by the organization’s approved signing authority. (for remote software upgrade)' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where remote software upgrade can be supported by the device, the software images are digitally signed by the organization’s approved signing authority.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. Certificate authority (CA) acts as a trusted third party, trusted both by the software author and the device, and verifies the entity&amp;#8217;s identity.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that for remote software upgrades, the software images are digitally signed by the organization’s approved signing authority.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Protecting Software Integrity through code signing' url='https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=925977' />
            <reference name='Technical FAQs for Code Signing Certificate' url='https://www.instantssl.com/code-signing/code-signing-technical.html' />
          </references>
          <standards>
            <standard ref='2.4.5.2' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.2' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.4' name='Software images shall be encrypted whilst being transferred to a device. (for remote software upgrade)' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;If remote software upgrade is supported by a device, software images shall be encrypted whilst being transferred to it.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Data transmitted over a public network can be intercepted by unauthorized parties. A secure file transfer adds security features to the transmission by encrypting  the file to preserve its confidentiality and integrity. This prevents eavesdroppers on the networks between the systems from accessing the file contents and reading or modifying them, necessitating the use of encryption for software images that are used for remote software upgrades.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Utilize encrypted protocols wherever possible to protect all data in transit. Where protocol encryption is not possible consider encrypting data before transfer.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Developer IoT Security Guidance' url='https://www.owasp.org/index.php/IoT_Security_Guidance#Developer_IoT_Security_Guidance' />
            <reference name='Security Guide for Interconnecting Information Technology Systems' url='https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-47.pdf' />
          </references>
          <standards>
            <standard ref='2.4.5.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.21' name='Software uses certificate pinning or public/private key equivalent for TCP/IP or UDP/IP connections.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where the device software communicates with a product related webserver or application over &lt;span class="caps"&gt;TCP&lt;/span&gt;/IP or &lt;span class="caps"&gt;UDP&lt;/span&gt;/IP, the device software uses certificate pinning or public/private key equivalent, where appropriate.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Secure connections are a cornerstone for a client/server communication. Users, developers, and applications expect end-to-end security on their secure channels, but some secure channels are not meeting the expectation. Specifically, channels built using well known protocols can be vulnerable to a number of attacks. For example, traditional certificate validation protects against many types of man-in-the-middle (&lt;span class="caps"&gt;MITM&lt;/span&gt;) attacks, but it doesn’t prevent all of them.&lt;br /&gt;
Certificate pinning can still prevent the interception of a program&amp;#8217;s network traffic. Pinning is the process of associating a host with their expected X509 certificate or public key, which can be added to an application at development time, or it can be added upon first encountering the certificate or public key.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that device software uses certificate pinning or public/private key equivalent for &lt;span class="caps"&gt;TCP&lt;/span&gt;/IP or &lt;span class="caps"&gt;UDP&lt;/span&gt;/IP connections.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Certificate and Public Key Pinning' url='https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning#What_Is_Pinning' />
            <reference name='Pinning Cheat Sheet' url='https://www.owasp.org/index.php/Pinning_Cheat_Sheet' />
          </references>
          <standards>
            <standard ref='2.4.5.21' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.21' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.21' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.26' name='Support for partially downloading updates is provided.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Support for partially downloading updates is provided for devices whose network access is limited or sporadic.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions into a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For that reason, support for partially downloading updates may be provided for devices whose network access is limited or sporadic.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that software provides support for partially downloading updates.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The importance of general software updates and patches' url='https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html' />
            <reference name='Why Software Updates Are So Important' url='https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.25' name='Support for partially installing updates is provided.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Support for partially installing updates is provided for devices whose on-time is insufficient for the complete installation of a whole update.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions into a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For that reason, support for partially installing updates may be provided for devices whose on-time is insufficient for the complete installation of a whole update.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that software provides support for partially installing updates.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The importance of general software updates and patches' url='https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html' />
            <reference name='Why Software Updates Are So Important' url='https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.8' name='The product has protection against software reverting.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product has protection against reverting the software to an earlier and potentially less secure version.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions into a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For that reason the product should have protection against reverting software to an earlier, out-of-date and probably insecure version.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product has mechanisms against software reverting.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The importance of general software updates and patches' url='https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html' />
            <reference name='Why Software Updates Are So Important' url='https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/' />
          </references>
          <standards>
            <standard ref='2.4.5.8' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.8' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.24' name='The software has been designed to fail safely.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The software has been designed to meet the safety requirements identified in the risk assessment, i.e. in the case of unexpected invalid inputs, or erroneous software operation, the product does not become dangerous, or compromise security of other connected systems.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
A fail safe software is expected to fail, but when it does it will be in a safe way and security controls and settings remain in effect. The confidentiality and integrity of a system should remain even though availability has been lost. Attackers must not be permitted to gain access rights to privileged objects during a failure that are normally inaccessible. Upon failing, a system that reveals sensitive information about the failure to potential attackers could supply additional knowledge for creating an attack.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that software has been designed to fail safely. This typically involves several things:&lt;br /&gt;
- Secure defaults (default is to deny access)&lt;br /&gt;
- On failure undo changes and restore to a secure state&lt;br /&gt;
- Always check return values for failure &lt;br /&gt;
- In conditional code/filters make sure that there is a default case that does the right thing&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='US-CERT: Failing Securely' url='https://www.us-cert.gov/bsi/articles/knowledge/principles/failing-securely' />
          </references>
          <standards>
            <standard ref='2.4.5.24' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.24' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.24' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.30' name='When a device cannot verify authenticity of updates itself, it shall be possible revert to the last known good configuration which was stored on the device before the update was attempted.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;When a device cannot verify authenticity of updates itself, it shall be possible revert to the last known good configuration which was stored on the device before the update was attempted.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
To implement certain control capability into a system, you’ll want to remotely reset the device so as to achieve a known-good state and recover from errors and implement new configuration changes. You may also want to be able reset the device to a factory default configuration, which is useful when you want to decommission a device or as a more invasive way to recover from unknown error conditions. Lastly, issuing a command to update or reload firmware is very important in order maintain security of the remote device, implement feature enhancements, and patch bugs.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
When a device cannot verify authenticity of updates itself, it shall be possible revert to the last known good configuration which was stored on the device before the update was attempted.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Code of Practice for Consumer IoT Security' url='https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/747413/Code_of_Practice_for_Consumer_IoT_Security_October_2018.pdf' />
          </references>
          <standards>
            <standard ref='2.4.5.30' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.30' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.30' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.30' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.30' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.29' name='Where a device cannot verify authenticity of updates itself, only local update is permitted.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where a device cannot verify authenticity of updates itself (e.g. due to no cryptographic capabilities), only local update by a physically present user is permitted.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. This process is used for remote updates, too, where devices can verify the signature to confirm that the package is authentic and complete. For that reason, in case where a device cannot verify authenticity of updates itself, only local update shall be permitted.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
If the device cannot verify authenticity of updates itself, permit local update only.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='OWASP Top 10 2014-I9 Insecure Software/Firmware' url='https://www.owasp.org/index.php/Top_10_2014-I9_Insecure_Software/Firmware' />
          </references>
          <standards>
            <standard ref='2.4.5.29' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.29' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.29' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.29' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.29' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='IOT2.4.5.2' mitigation='50' />
                    <control ref='IOT2.4.5.30' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-654'>
                  <controls>
                    <control ref='IOT2.4.5.30' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.2' mitigation='50' />
                <control ref='IOT2.4.5.30' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.5.33' mitigation='14' />
                  </controls>
                </weakness>
                <weakness ref='CWE-209'>
                  <controls>
                    <control ref='IOT2.4.5.24' mitigation='14' />
                  </controls>
                </weakness>
                <weakness ref='UNPATCHED-PRODUCT'>
                  <controls>
                    <control ref='IOT2.4.5.25' mitigation='14' />
                    <control ref='IOT2.4.5.26' mitigation='14' />
                    <control ref='IOT2.4.5.29' mitigation='14' />
                    <control ref='IOT2.4.5.30' mitigation='14' />
                  </controls>
                </weakness>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.5.8' mitigation='14' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.24' mitigation='14' />
                <control ref='IOT2.4.5.25' mitigation='14' />
                <control ref='IOT2.4.5.26' mitigation='14' />
                <control ref='IOT2.4.5.29' mitigation='14' />
                <control ref='IOT2.4.5.30' mitigation='14' />
                <control ref='IOT2.4.5.33' mitigation='14' />
                <control ref='IOT2.4.5.8' mitigation='14' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='networking' name='Networking' desc='' library=''>
          <threats>
            <threat ref='IOT-WIDE-ATTACK-SURFACE' name='Exploitation of a wide attack surface' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNRESTRICTED-NETWORK'>
                  <controls>
                    <control ref='IOT2.4.5.5' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.5' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-94' name='Man in the Middle Attack' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-287'>
                  <controls>
                    <control ref='IOT2.4.5.21' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.21' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-157' name='Sniffing Attacks' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-319'>
                  <controls>
                    <control ref='IOT2.4.5.4' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.4' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-software-os' name='IoT Device Software OS' desc='' groupName='' tags='' position='2' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-250' name='Execution with Unnecessary Privileges' state='0' impact='100'>
          <desc>The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.
New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges. Privilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-306' name='Missing Authentication for Critical Function' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources. 
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNPATCHED-PRODUCT' name='Recommended security patches are not applied' state='0' impact='100'>
          <desc>When patches and updates are not applied in a timely manner then a product (e.g. Operating System, Software or Mobile App) or a system could be vulnerable to known security issues. These issues could be used by an attacker to gain access to the system. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-2' name='Unexpected Environment Condition' state='0' impact='100'>
          <desc>This is a generic weakness that includes several different situations, they are all related to unexpected environmental conditions and they could be related to:   
• Misconfiguration. 
• Uncleared buffers, shared memory, files, etc. 
• Problems between the interaction of two different entities that cause unexpected behaviour.   </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='UNNECESSARY-SERVICES' name='Unnecessary services are exposed' state='0' impact='100'>
          <desc>The application exposes unnecessary services which increase the attack surface.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T13:00:58.428'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.5.3' name='A software update package is verified by the device before the update process begins.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;A software update package has its digital signature, signing certificate and signing certificate chain verified by the device before the update process begins.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. Certificate authority (CA) acts as a trusted third party, trusted both by the software author and the device, and verifies the entity&amp;#8217;s identity. A chain of trust is established by validating each certificate from the end entity to the root certificate.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the device verifies the digital signature, signing certificate and signing certificate chain of a software update before the update process begins.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='How certificate chains work' url='https://knowledge.digicert.com/solution/SO16297.html' />
            <reference name='Microsoft Trusted Root Certificate: Program Requirements' url='https://technet.microsoft.com/en-us/library/cc751157.aspx' />
            <reference name='Understanding An SSL Certificate Chain' url='https://ssl.comodo.com/articles/understanding-an-ssl-certificate-chain.php' />
          </references>
          <standards>
            <standard ref='2.4.5.3' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.3' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='RESTRICT-ACCESS-DATABASE' name='Access the data store from an account with the least privileges necessary' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>Use an account with only the minimum set of permissions required to access the data store.&amp;nbsp; The account should not be able to perform operations that are not explicitly required by the component that performs these operations.
                      &lt;div&gt;
                      For example, if a web application needs to read data from certain tables and insert and update data from others, then a database account with only those specific permissions should be used by the application server.
                      &lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='13.2.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.6.9' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.6.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.6.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.6.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.6.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-3' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-6' supportedStandardRef='NIST 800-53' />
            <standard ref='19.3' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='19.3' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                          &lt;li&gt;Identify the user account used by external components to access this data store&lt;/li&gt;
                          &lt;li&gt;Check which permissions are assigned to this user account&lt;/li&gt;
                          &lt;li&gt;Verify that they are the minimum set of permissions necessary and no unnecessary permissions are assigned&lt;/li&gt;
                          &lt;/ol&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-11-20T18:23:44.319'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='INF-UNNECESSARY-SERVICES' name='Restrict access to required services only' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  The attack surface, and therefore susceptibility to attack, should be minimised. &amp;nbsp;In particular, services that are not explicitly required for the proper operation of the server or service should be disable, or access to them be restricted. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Any service, feature, or functionality that is not required should be disabled or removed. &amp;nbsp;This applies equally to the operating system, middleware, web-server, or other software in use.&lt;/li&gt; 
  &lt;li&gt;Access to the server and remaining services (in particular those that cannot be disabled or removed) should be controlled use host-based and/or network security controls; for example host firewalls, network firewalls, routers, or switches.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.18' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Conduct a host review to confirm the software and services running and exposed on
                            the system.&lt;/li&gt;
                            &lt;li&gt;Support the host review with network based scans across at least all TCP and UDP
                            ports (0-65535), together with RPC and other remote call services.&lt;/li&gt;
                            &lt;li&gt;Verify the running and accessible services against expected configuration for the
                            system, and against the security principal of 'least privilege'&lt;/li&gt;
                            &lt;li&gt;Where a network or host based firewall is in use, it should be configured to drop
                            connections rather than reject them. i.e. port-scans should identify only 'open' or
                            'filtered' services; no service should be identifiably 'closed'.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note however that different network based security solutions exhibit different
                            behaviour in this regard.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:18.528'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.1' name='The product has measures to prevent unauthenticated software and files being loaded onto it or to limit their permissions.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product has measures to prevent unauthenticated software and files being loaded onto it. In the event that the product is intended to allow un-authenticated software, such software should only be run with limited permissions and/or sandbox.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The product shall have software execution control to limit which software applications and services are able to run on the Operating System and to control the exposed attack surface of the system by reducing the number of potential vulnerabilities.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Software execution control is used in combination with an administrator defined set of rules, which define which software a non-privileged user is able to execute. These rules can be based on:&lt;br /&gt;
- Software&amp;#8217;s properties e.g. name, signature, etc.&lt;br /&gt;
- More generic rules e.g. permitting execution of files based on their storage location on the system.&lt;br /&gt;
In the event that the product is intended to allow un-authenticated software, such software should only be run with limited permissions and/or sandbox (security mechanism which executes the software in a restricted operating system environment).&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Software Execution Control: CPA SC' url='https://www.ncsc.gov.uk/documents/cpa-security-characteristic-software-execution-control' />
          </references>
          <standards>
            <standard ref='2.4.5.1' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.5.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.5.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.5.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.5.1' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.5.27' name='Update mechanisms must not interfere with performance expectations.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where real-time expectations of performance are present, update mechanisms must not interfere with meeting these expectations.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Software update mechanisms may reduce the device&amp;#8217;s performance when running simultaneously with other processes.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that update mechanisms are not interfering with performance expectations, e.g. by running update processes at low priority.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Best practices for software updates in Configuration Manager' url='https://docs.microsoft.com/en-us/sccm/sum/plan-design/software-updates-best-practices' />
            <reference name='Ubuntu SoftwareUpdates' url='https://wiki.ubuntu.com/SoftwareUpdates' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:57.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='AUTH-DATASTORE-LEAST-PRIV' name='Attackers who compromise the application or application server could directly access and modify the data store' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>If attackers gain access to the application or the application server, then they could directly access the data store using the privilege assigned to the application.
                              &lt;div&gt;
                              If the data store user account used by the application has elevated privileges then this could allow attackers to perform unauthorised operations such as dropping tables, modifying the database schema or modifying data.
                              &lt;/div&gt;</desc>
              <riskRating confidentiality='1' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-250'>
                  <controls>
                    <control ref='RESTRICT-ACCESS-DATABASE' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='RESTRICT-ACCESS-DATABASE' mitigation='100' />
              </controls>
            </threat>
            <threat ref='SERVER-ATTACK' name='Data compromised if the server itself is compromised' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>If attackers compromise the server that hosts the service or data, then the data and
                                the service itself could be at risk of compromise. The server could be compromised
                                through any of the services that it exposes.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNNECESSARY-SERVICES'>
                  <controls>
                    <control ref='INF-UNNECESSARY-SERVICES' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='INF-UNNECESSARY-SERVICES' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-250'>
                  <controls>
                    <control ref='IOT2.4.5.1' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='IOT2.4.5.1' mitigation='50' />
                    <control ref='IOT2.4.5.3' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.1' mitigation='50' />
                <control ref='IOT2.4.5.3' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='OWASP A6:2017' name='Exploitation of Security Misconfiguration' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
unpatched flaws or access default&lt;br /&gt;
accounts, unused pages, unprotected&lt;br /&gt;
files and directories, etc to gain&lt;br /&gt;
unauthorized access or knowledge of&lt;br /&gt;
the system.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNPATCHED-PRODUCT'>
                  <controls>
                    <control ref='IOT2.4.5.27' mitigation='100' />
                  </controls>
                </weakness>
                <weakness ref='CWE-2'>
                  <controls>
                    <control ref='IOT2.4.5.27' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.5.27' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-device-wireless-interfaces' name='IoT Device Wireless Interfaces' desc='' groupName='' tags='' position='9' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-319' name='Cleartext Transmission of Sensitive Information' state='0' impact='100'>
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.
Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-326' name='Inadequate Encryption Strength' state='0' impact='100'>
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-778' name='Insufficient Logging' state='0' impact='100'>
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.
When security-critical events are not logged properly, such as a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analysis after an attack succeeds.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-654' name='Reliance on a Single Factor in a Security Decision' state='0' impact='100'>
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-307' name='The application does not implement anti-automation mechanisms to prevent automated long time-sustained probes' state='0' impact='100'>
          <desc>The software does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.
This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, compromise program logic (such as limiting humans to a single vote), or other consequences. For example, an authentication routine might not limit the number of times an attacker can guess a password. Or, a web site might conduct a poll but only expect humans to vote a maximum of once a day.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.7.10' name='For any WiFi connection, WPA2 with AES or a similar strength encryption has been used and insecure protocols such as WPA and TKIP are disabled.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;For any WiFi connection, WPA2 with &lt;span class="caps"&gt;AES&lt;/span&gt; or a similar strength encryption has been used and insecure protocols such as &lt;span class="caps"&gt;WPA&lt;/span&gt; and &lt;span class="caps"&gt;TKIP&lt;/span&gt; are disabled.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Most Wi-Fi networks are configured to encrypt traffic between client devices and access points, so that someone outside the network cannot read or interfere with communications on the network. WPA2 is one protocol that can be used for this purpose.&lt;/p&gt;

	&lt;p&gt;Note: Keep in mind to get protected from &amp;#8220;Krack&amp;#8221; WPA2 vulnerability, please see reference &lt;span class="caps"&gt;URL&lt;/span&gt; [1] for details.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that for any WiFi connection, WPA2 with &lt;span class="caps"&gt;AES&lt;/span&gt; or a similar strength encryption has been used and insecure protocols such as &lt;span class="caps"&gt;WPA&lt;/span&gt; and &lt;span class="caps"&gt;TKIP&lt;/span&gt; are disabled.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='IEEE 802.11i-2004 - IEEE Standard for information technology' url='https://standards.ieee.org/standard/802_11i-2004.html' />
          </references>
          <standards>
            <standard ref='2.4.7.10' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.10' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.10' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.10' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.8' name='Where a wireless communications interface requires an initial pairing process, a Strong Authentication shall be used.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where a wireless communications interface requires an initial pairing process, a Strong Authentication shall be used.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Strong authentication blends at least two different authentication factors of different types to improve the safety of identity verification and to prevent unauthorized logins even when passwords have been compromised. For example, this can be achieved by using something the user has (e.g. security token) and something the user knows (e.g. password). &lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where a wireless communications interface requires an initial pairing process, a Strong Authentication is be used, requiring physical interaction with the device or possession of a shared secret. For example, Bluetooth Numeric Comparison.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Guide to Bluetooth Security' url='https://csrc.nist.gov/publications/detail/sp/800-121/rev-1/archive/2012-06-11' />
          </references>
          <standards>
            <standard ref='2.4.7.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.8' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.11' name='Where WPA2 WPS is used it has a unique, random key per device and enforces exponentially increasing retry attempt delays.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where WPA2 &lt;span class="caps"&gt;WPS&lt;/span&gt; is used it has a unique, random key per device and enforces exponentially increasing retry attempt delays.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
When the same secret key programmed into a product at manufacture is shared between multiple devices, it exposes them to various types of malicious attacks. In other words, this means that if an attacker is able to access one device, he/she can possibly log into a huge quantity of other devices that share the same secret key.&lt;br /&gt;
Where WPA2 &lt;span class="caps"&gt;WPS&lt;/span&gt; is used and allows users to enter passwords as many times as they want, an attacker may try to exploit this by using scripts that enter different combinations until the password cracks. To prevent this kind of brute force attack, the product shall have defense such as exponentially increasing retry attempt delays.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that where WPA2 &lt;span class="caps"&gt;WPS&lt;/span&gt; is used it has a unique, random key per device and enforces exponentially increasing retry attempt delays.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Mutual Authentication on Network product management protocols' url='https://www.etsi.org/deliver/etsi_ts/133100_133199/133117/15.00.00_60/ts_133117v150000p.pdf#page=31' />
          </references>
          <standards>
            <standard ref='2.4.7.11' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.7.11' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.7.11' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.7.11' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-112' name='Brute Force' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers&amp;#8217; ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one&amp;#8217;s secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-307'>
                  <controls>
                    <control ref='IOT2.4.7.11' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.11' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-654'>
                  <controls>
                    <control ref='IOT2.4.7.8' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.8' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='logging-and-monitoring' name='Logging and Monitoring' desc='' library=''>
          <threats>
            <threat ref='OWASP A10:2017' name='Exploitation of insufficient logging and monitoring' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-778'>
                  <controls>
                    <control ref='IOT2.4.7.11' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.11' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='networking' name='Networking' desc='' library=''>
          <threats>
            <threat ref='CAPEC-157' name='Sniffing Attacks' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-319'>
                  <controls>
                    <control ref='IOT2.4.7.10' mitigation='50' />
                    <control ref='IOT2.4.7.11' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-326'>
                  <controls>
                    <control ref='IOT2.4.7.10' mitigation='50' />
                    <control ref='IOT2.4.7.11' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.10' mitigation='50' />
                <control ref='IOT2.4.7.11' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-encryption-and-key-management-for-hardware' name='IoT Encryption and Key Management for Hardware' desc='' groupName='' tags='' position='5' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.9.8' name='The cryptographic key chain used for signing production software is different from that used for any other software images.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The cryptographic key chain used for signing production software is different from that used for any other test, development or other software images.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Often test or development images have fewer restrictions and/or more privileges. Therefore, to prevent the installation of nonproduction software into production devices, a different cryptographic key chain should be used for signing production software.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Use a different cryptographic key chain for signing production software from that used for any other test, development or other software images.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Best Practices to Securely Operate Hardware Security Modules' url='https://pdfs.semanticscholar.org/78f4/0fb3b0142c63cfba0a52fa7573a944d8f461.pdf' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.9.4' name='There is a secure method of key insertion that protects keys against copying.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;There is a secure method of key insertion that protects keys against copying.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Keys shall be protected from copying, using a secure insertion method. This can be achieved by using a dedicated secure and trusted hardware module which stores and protects the keys.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Trusted Platform Module (&lt;span class="caps"&gt;TPM&lt;/span&gt;, also known as &lt;span class="caps"&gt;ISO&lt;/span&gt;/IEC 11889) is an international standard for a secure cryptoprocessor, a dedicated microcontroller designed to secure hardware through integrated cryptographic keys. Each &lt;span class="caps"&gt;TPM&lt;/span&gt; chip has a unique and secret &lt;span class="caps"&gt;RSA&lt;/span&gt; key burned in as it is produced. Pushing the security down to the hardware level provides more protection than a software-only solution.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Trusted Platform Module (TPM)' url='https://trustedcomputinggroup.org/wp-content/uploads/TPM-2.0-A-Brief-Introduction.pdf' />
            <reference name='Trusted Platform Module (TPM) definition' url='https://whatis.techtarget.com/definition/trusted-platform-module-TPM' />
          </references>
          <standards>
            <standard ref='2.4.9.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.9.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.9.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.9.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.9.8' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.9.8' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='CAPEC-37' name='Retrieve Embedded Sensitive Data' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.9.4' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.9.4' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-mobile-application' name='IoT Mobile Application' desc='' groupName='' tags='' position='7' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='SOCI-ENG-SS' name=' Shoulder surfing attack' state='0' impact='100'>
          <desc>Attacks using social engineering such as monitoring the keyboard entry by the user or collecting his personal
information to verify whether it is used as a password or forms part of the password. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CSD-ADM-OPEN' name='Access to the administration interfaces is open to untrusted parties' state='0' impact='100'>
          <desc>The application does not restrict access to administration interfaces to untrusted parties.&amp;nbsp;
                        &lt;br /&gt;This fact could allow an attacker to chain vulnerabilities to gain unauthorized
                        access to the system.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:25:53.776'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-312' name='Cleartext Storage of Sensitive Information' state='0' impact='100'>
          <desc>The application stores sensitive information in cleartext within a resource that might be
                        accessible to another control sphere.

                        Because the information is stored in cleartext, attackers could potentially read it. Even if the
                        information is encoded in a way that is not human-readable, certain techniques could determine
                        which encoding is being used, then decode the information.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:56:40.520'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-312: Cleartext Storage of Sensitive Information' url='https://cwe.mitre.org/data/definitions/312.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-319' name='Cleartext Transmission of Sensitive Information' state='0' impact='100'>
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.
Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-798, CWE-603' name='Client side code stores secret keys, sensitive business logic or other proprietary information' state='0' impact='100'>
          <desc>Client side code is fully controlled by the user, a malicious user could read the code or
                        reverse engineer it if it is compiled on any form.&amp;nbsp;&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;If the client side code includes secret keys, sensitive business logic &amp;nbsp;(like
                        client authentication) or proprietary information, all of this is directly exposed to the user,
                        allowing him to get the sensitive information or study the business logic with the aim of
                        bypassing it. Some examples of this which are Vulnerabilities are:
                        &lt;ul&gt;
                        &lt;li&gt;Perform an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Make privileged calls from the client based solely on client side conditions (i.e. a
                        cash check on client side and then to place a buy on an e-commerce platform).&lt;/li&gt;
                        &lt;li&gt;Hard-coding keys and secrets on client side to make client-to-client calls without a
                        proxy.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:25:08.682'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-602: client-side Enforcement of Server-Side Security' url='https://cwe.mitre.org/data/definitions/602.html' />
              <reference name='CWE-603: Use of client-side Authentication' url='https://cwe.mitre.org/data/definitions/603.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-250' name='Execution with Unnecessary Privileges' state='0' impact='100'>
          <desc>The software performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.
New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges. Privilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-732' name='Incorrect Permission Assignment for Critical Resource' state='0' impact='100'>
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
When a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-20' name='Input to exported activities, intents or content providers is not validated' state='0' impact='100'>
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:20:24.849'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-20: Input to exported activities, intents or content providers is not validated' url='https://cwe.mitre.org/data/definitions/20.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-306' name='Missing Authentication for Critical Function' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources. 
 </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-916' name='Password hashes can be reverted over a reasonable period of time' state='0' impact='100'>
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a
                        sufficient level of computational effort that would make password cracking attacks infeasible or
                        expensive.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Many password storage mechanisms compute a hash and store the hash, instead of storing the
                        original password in plaintext. In this design, authentication involves accepting an incoming
                        password, computing its hash, and comparing it to the stored hash. Many hash algorithms are
                        designed to execute quickly with minimal overhead, even cryptographic hashes. However, this
                        efficiency is a problem for password storage, because it can reduce an attacker's workload for
                        brute-force password cracking. If an attacker can obtain the hashes through some other method
                        (such as SQL injection on a database that stores hashes), then the attacker can store the hashes
                        offline and use various techniques to crack the passwords by computing hashes efficiently.
                        Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust
                        the entire space of all possible passwords, within a very short amount of time, using
                        massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such
                        a scenario, an efficient hash algorithm helps the attacker.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        There are several properties of a hash scheme that are relevant to its strength against an
                        offline, massively-parallel attack:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The amount of CPU time required to compute the hash (&amp;quot;stretching&amp;quot;)&lt;/li&gt;
                        &lt;li&gt;The amount of memory required to compute the hash (&amp;quot;memory-hard&amp;quot;
                        operations)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Including a random value, along with the password, as input to the hash computation (&amp;quot;salting&amp;quot;)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Given a hash, there is no known way of determining a password that produces this hash
                        value, other than by guessing possible passwords (&amp;quot;one-way&amp;quot; hashing)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Relative to the number of all possible hashes that can be generated by the scheme,
                        there is a low likelihood of producing the same hash for multiple different inputs (&amp;quot;collision
                        resistance&amp;quot;)&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;Note that the security requirements for the software may vary depending on the
                        environment and the value of the passwords. Different schemes might not provide all of these
                        properties, yet may still provide sufficient security for the environment. Conversely, a
                        solution might be very strong in preserving one property, which still being very weak for an
                        attack against another property, or it might not be able to significantly reduce the efficiency
                        of a massively-parallel attack.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:23:57.148'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-916' url='https://cwe.mitre.org/data/definitions/916.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-521' name='Poor quality passwords in use' state='0' impact='100'>
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.
An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-601' name='URL Redirection to Untrusted Site (&apos;Open Redirect&apos;)' state='0' impact='100'>
          <desc>A web application accepts a user-controlled input that
					specifies a link to an external site, and uses that link in a Redirect. This
					simplifies phishing attacks.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:27:00.383'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.11.3' name='Any related databases or files are either tamper resistant or restricted in their access.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The mobile application ensures that any related databases or files are either tamper resistant or restricted in their access.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Anti-tamper software is software which makes it harder for an attacker to modify it. Attackers can tamper with or install a backdoor on an app, re-sign it and publish the malicious version to third-party app marketplaces. Such attacks typically target popular apps and financial apps.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Employ anti-tamper and tamper-detection techniques to prevent illegitimate applications from executing. For example use checksums, digital signatures and other validation mechanisms to help detect file tampering. Upon detection of tampering, databases or files are re-initialized.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Anti-tampering technology typically makes the software somewhat larger and also has a performance impact.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Android application development guidance' url='https://www.ncsc.gov.uk/guidance/android-application-development-guidance-0' />
            <reference name='Implement Anti-tamper Techniques' url='https://books.nowsecure.com/secure-mobile-development/en/coding-practices/anti-tamper-techniques.html' />
          </references>
          <standards>
            <standard ref='2.4.11.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.3' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.11.4' name='Application communicates with product related remote server(s) or device over a secure connection.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where the application communicates with a product related remote server(s) or device it does so over a secure connection.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Secure connections are a cornerstone for a client/server communication. Cryptographic protocols such as Transport Layer Security (&lt;span class="caps"&gt;TLS&lt;/span&gt;) are used to prevent eavesdropping and tampering. Therefore the application shall always communicate over a secure connection.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the application communicates with product related remote server(s) or device over a secure connection such as a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection using certificate pinning.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Certificate and Public Key Pinning' url='https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning' />
            <reference name='The Transport Layer Security (TLS) Protocol Version 1.2' url='https://tools.ietf.org/html/rfc5246' />
            <reference name='Using TLS to protect data' url='https://www.ncsc.gov.uk/guidance/tls-external-facing-services' />
          </references>
          <standards>
            <standard ref='2.4.11.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CS-CLIENT-SECRET' name='Implement sensitive logic and data validation on the server-side' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  All data and functionality at the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  While controls may be duplicated at the client-side to improve the user experience, it is important these are enforced at the server-side. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented at the server-side. &amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored at the server-side, and only that which is explicitly required be duplicated at the client-side.&lt;/li&gt; 
  &lt;li&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication at the client-side against a stored password. &amp;nbsp;Decompilation of the binary (in this case flv file) or interception and modification of controls between the client and server could expose the password or allow unauthorised access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='12.2.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-24' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-10' supportedStandardRef='NIST 800-53' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;authentication&lt;/li&gt;
                            &lt;li&gt;input validation&lt;/li&gt;
                            &lt;li&gt;access to resources&lt;/li&gt;
                            &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure those decisions are made or validated at the server side, particularly
                            where client-side controls are implemented.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review sensitive data passed to the client side is appropriate, and ensure no
                            inappropriate data is stored or hard-coded into client-side components, for example&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;ul&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Personally Identifiable Information.&lt;/li&gt;
                            &lt;li&gt;Financial data, in particular cardholder data (as defined by the PCI Council).&lt;/li&gt;
                            &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-28T12:52:08.060'>
              <output></output>
            </source>
            <references>
              <reference name='OWASP Web Application Security Testing' url='https://www.owasp.org/index.php/Web_Application_Security_Testing_Cheat_Sheet' />
              <reference name='Testing for Business Logic' url='https://www.owasp.org/index.php/Testing_for_business_logic' />
            </references>
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.11.6' name='Pass phrase is obscured by default where entered on a UI.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default to prevent the capture of passwords.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (•), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against &amp;#8220;shoulder surfing&amp;#8221;, in other words to prevent nearby observers reading the password &amp;#8220;over the user&amp;#8217;s shoulder&amp;#8221; and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The Pros and Cons of Password Masking' url='https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html' />
          </references>
          <standards>
            <standard ref='2.4.11.6' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.6' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.6' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.6' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-521' name='Require the use of strong passwords' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
  &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
  &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
  &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at&amp;nbsp;&lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;b&gt;Password length&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Minimum length. Passwords should be at least ten (10) characters long. Combining this length with complexity makes a password difficult to guess and/or brute force.&lt;/li&gt; 
  &lt;li&gt;Maximum length. People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;b&gt;Password Complexity&lt;/b&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Password characters should be a combination of alphanumeric characters. Alphanumeric characters consist of letters, numbers, punctuation marks, mathematical and other conventional symbols.&lt;/li&gt; 
  &lt;li&gt;For change and reset password functionality it is recommended a history of old password (salted) hashes used. This can be used to prevent password reuse, or an attacker alternating between a selection of passwords (Monday1, Tuesday2 etc.)&lt;/li&gt; 
  &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.3.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.2' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.8.4' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-16' supportedStandardRef='NIST 800-53' />
            <standard ref='IA-1' supportedStandardRef='NIST 800-53' />
            <standard ref='2.7' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.7' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L1' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L1+R' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L2' />
            <standard ref='4.4' supportedStandardRef='OWASP-MASVS-L2+R' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt;
                            &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or
                            OWASP.&lt;/li&gt;
                            &lt;/ol&gt;An example of strong password policy (
                            &lt;a
                            href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from
                            the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the
                            following 4 complexity rules:
                            &lt;ul&gt;
                            &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt;
                            &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt;
                            &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt;
                            &lt;li&gt;at least 1 special character (punctuation) â€” do not forget to
                            treat space as
                            special characters too&lt;/li&gt;
                            &lt;li&gt;at least 10 characters&lt;/li&gt;
                            &lt;li&gt;at most 128 characters&lt;/li&gt;
                            &lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:15.156'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CSD-ADM-TRUST' name='Restrict access to administrative interfaces' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Restrict access to administrative interfaces to trusted actors from trusted locations to reduce the application attack surface and likelihood of compromise. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Restrict administrative access to specific networks or hosts.&lt;/li&gt; 
  &lt;li&gt;Use strong authentication for privileged access, for example a 2FA.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt;&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Try to access the administrative interface from an untrusted location.&lt;/li&gt;
                            &lt;/ol&gt;For example, if you are using a Wordpress CMS you should restrict access to
                            /wp-admin which should not be available from the internet but only from trusted networks or
                            IP addresses.&amp;nbsp;
                            &lt;br /&gt;&amp;nbsp;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-29T18:03:19.657'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-256' name='Store passwords in unrecoverable form to prevent disclosure' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        To protect users passwords from accidental or deliberate exposure, the application should store
                        cryptographic hashes of passwords instead of the passwords themselves.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Do not store passwords themselves in the data store for verification at login.&lt;/li&gt;
                        &lt;li&gt;Instead, create a cryptographic hash of the password using a strong hash function that
                        includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk
                        of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function
                        to balance security and performance.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.3.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-16' supportedStandardRef='NIST 800-53' />
            <standard ref='2.13' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.13' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the password storage code.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that it stores the password using a non recoverable method.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that the algorithm used uses a Salt and a high computational work factor.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt; Our recommendation is to use bcrypt or scrypt, or alternatively a system salt of
                            32 bits or more, a keyed HMAC hash using SHA-2 or SHA-3, and the â€œstretchingâ€
                            algorithm
                            PBKDF2 with at least 10,000 iterations.
                            &lt;br /&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:18.657'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-312-ENCRYPT' name='Store sensitive data in a cryptographically secure (system provided) store' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>Applications storing or caching data locally are at risk of attack and compromise of that data. Most mobile devices and operating systems offer built in API's to store data in their encrypted stores, such as the Keychain on iOS. These stores are ultimately encrypted using a key derived from the device passcode and require the user to set a passcode.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However, they do not enforce the quality of the passcode, nor is it possible to determine the quality of the passcode (and therefore, ultimately the key) from within the application.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Data should not be stored locally unless there is an explicit requirement to do so. This includes restricting thumbnails or screenshots of pages in the application that contain private data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Data that must be stored on the client side must be held in a cryptographically secure store.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Use OS provided stores to protect private data on the client side, acknowledging that the residual risk from users with weak passwords may affect that data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Do not store highly sensitive/financial data on the client-side without implementing a provably strong cryptographic process. For example, it should be encrypted using a key derived from an independent password where the strength of this password can be verified.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.11.5' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.5' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify in which points the component is storing sensitive data.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the storage routines and verify they are using OS APIs which are built on
                            top of secure storage components.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-08-02T10:21:32.718'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-20' name='Validate all input data sent to exported activities, intents or content providers' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. This affects all application platforms, including mobile. All data from the client side must be subjected to strict validation, sanitisation, and encoding against expected syntactic and semantic criteria.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colours such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data. While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright. Validate all data received from the client, including values such as HTTP headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This validation and sanitisation must be performed in context, for example, data sent to an SQL database must be escaped for SQL special characters whereas data sent as part of a shell command must be escaped for shell special characters. 
&lt;/div&gt;</desc>
          <implementations />
          <references>
            <reference name='OWASP MASVS - Android - Testing Custom URL Schemes' url='https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x05h-Testing-Platform-Interaction.html#testing-custom-url-schemes' />
            <reference name='OWASP MASVS - Android - Testing Input Validation and Sanitization' url='https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x05h-Testing-Platform-Interaction.html#testing-input-validation-and-sanitization' />
            <reference name='OWASP MASVS - iOS - Testing Custom URL Schemes' url='https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x06h-Testing-Platform-Interaction.html#testing-custom-url-schemes' />
            <reference name='OWASP MASVS - iOS - Testing Input Validation and Sanitization' url='https://sushi2k.gitbooks.io/the-owasp-mobile-security-testing-guide/content/0x06h-Testing-Platform-Interaction.html#testing-input-validation-and-sanitization' />
          </references>
          <standards>
            <standard ref='6.2' supportedStandardRef='OWASP-MASVS-L1' />
            <standard ref='6.3' supportedStandardRef='OWASP-MASVS-L1' />
            <standard ref='6.2' supportedStandardRef='OWASP-MASVS-L1+R' />
            <standard ref='6.3' supportedStandardRef='OWASP-MASVS-L1+R' />
            <standard ref='6.2' supportedStandardRef='OWASP-MASVS-L2' />
            <standard ref='6.2' supportedStandardRef='OWASP-MASVS-L2+R' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>- Identify exported activities, intents and contents providers.
                            - For every input, define accepted input (both syntactic and semantic criteria)
                            - Where possible, define a white-list of accepted input or characters
                            - For each of the inputs, ensure the data is validated against the defined whitelists (for
                            example with a regular expression) before being processed.
                            - Check the code to look for input validation methods and input restrictions.
                            - Test they are effective by fuzzing the identified features.
                            - Tools such as&lt;a href="https://labs.mwrinfosecurity.com/tools/drozer/"&gt;Drozer&lt;/a&gt;can
                            help with this task.
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-08-02T10:21:32.718'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.11.1' name='Where a UI password is used for login authentication, the initial password or factory reset password is unique to each device.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where an application’s user interface password is used for login authentication, the initial password or factory reset password is unique to each device in the product family.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Apply a process which ensures that the initial password or factory reset password is unique to each device in the product family.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='US-CERT: Risks of Default Passwords on the Internet' url='https://www.us-cert.gov/ncas/alerts/TA13-175A' />
          </references>
          <standards>
            <standard ref='2.4.11.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.1' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-601' name='Whitelist to which URLs the application can redirect to' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>The application should maintain a list of the URLs to which it can redirect. This whitelisting
                        can also be done by applying a regular expression. The application should only allow redirects
                        to trusted URLS.
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-4' supportedStandardRef='NIST 800-53' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the points of the application in which a redirection takes place.
                            Redirections are usually indicated by the use of the &amp;quot;&amp;quot;&amp;quot;&amp;quot;Location&amp;quot;&amp;quot;&amp;quot;&amp;quot;
                            HTTP header along with the 3xx code.&lt;/li&gt;
                            &lt;li&gt;If the content which is ending up inside the Location header is coming from user
                            input (URL string, Cookies, HTTP headers, forms, etc.), then.&lt;/li&gt;
                            &lt;li&gt;Using a browser, modify the input value which will be part of the Location header
                            to set up domains which should not be permitted.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-08-07T10:15:05.730'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='administration-service' name='Administration service' desc='' library=''>
          <threats>
            <threat ref='CSD-ADM-IFACE' name='Attackers gain access to the system through an unprotected administration interface' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Administrative interfaces grant access to sensitive operations that can typically
                                affect key security mechanisms, like modifying credentials and adding/removing user
                                accounts.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='100' />
              <references />
              <weaknesses>
                <weakness ref='CSD-ADM-OPEN'>
                  <controls>
                    <control ref='CSD-ADM-TRUST' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CSD-ADM-TRUST' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CSD-AUTH-HASH' name='Attackers gain access to user accounts by accessing the password database' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An attacker with access to the plain, readable credential database would have access to the system as any of those users.&amp;nbsp;</desc>
              <riskRating confidentiality='100' integrity='50' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-916'>
                  <controls>
                    <control ref='CWE-256' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-256' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-112' name='Brute Force' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers&amp;#8217; ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one&amp;#8217;s secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='IOT2.4.11.1' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.11.1' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-1-ANDROID' name='Malicious applications gain access to unauthorised data or perform unauthorised actions' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers could use malicious mobile applications to attack legitimate applications
                                that export their components improperly. The attacks and consequences of improperly
                                exporting a component may depend on the exported component: If access to an exported
                                Activity is not restricted, any application will be able to launch the activity.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This may allow a malicious application to gain access to sensitive information, modify
                                the internal state of the application, or trick a user into interacting with the victim
                                application whilst believing they are still interacting with the malicious application.
                                If access to an exported Service is not restricted, any application may start and bind
                                to the Service.&amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Depending on the exposed functionality, this may allow a malicious application to
                                perform unauthorized actions, gain access to sensitive information, or corrupt the
                                internal state of the application. If access to a Content Provider is not restricted to
                                only the expected applications, then malicious applications might be able to access the
                                sensitive data. Note that in Android before 4.2, the Content Provider is automatically
                                exported unless it has been explicitly declared as NOT exported.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='75' integrity='75' availability='1' easeOfExploitation='75' />
              <references />
              <weaknesses>
                <weakness ref='CWE-20'>
                  <controls>
                    <control ref='CWE-20' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-20' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-122' name='Privilege Abuse' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems &amp;#8211; all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-250'>
                  <controls>
                    <control ref='IOT2.4.11.3' mitigation='100' />
                  </controls>
                </weakness>
                <weakness ref='CWE-732'>
                  <controls>
                    <control ref='IOT2.4.11.3' mitigation='100' />
                  </controls>
                </weakness>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='IOT2.4.11.3' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.11.3' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-403' name='Social Engineering' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attack patterns within this category focus on the manipulation and exploitation of people. The techniques defined by each pattern are used to convince a target into performing actions or divulging confidential information that benefit the adversary, often resulting in access to computer systems or facilities. While similar to a confidence trick or simple fraud, the term typically applies to trickery or deception for the purpose of information gathering, fraud, or computer system access. In most cases, the adversary never comes face-to-face with the victim.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='SOCI-ENG-SS'>
                  <controls>
                    <control ref='IOT2.4.11.6' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.11.6' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-112-USERNAME' name='User accounts compromised through username guessing' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='50' integrity='50' availability='25' easeOfExploitation='50' />
              <references />
              <weaknesses>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='CWE-521' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-521' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='open-redirect-threat' name='An attacker may successfully launch a phishing scam and steal user credentials by modifying the URL value to a malicious site' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An http parameter may contain a URL value and could cause the web application to redirect the request to the specified URL. By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance.</desc>
              <riskRating confidentiality='50' integrity='50' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-601'>
                  <controls>
                    <control ref='CWE-601' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-601' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CSD-CLIENT-SECRET' name='Attackers gain unauthorised access to data or services by accessing a client side secret' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='100' integrity='50' availability='50' easeOfExploitation='75' />
              <references />
              <weaknesses>
                <weakness ref='CWE-798, CWE-603'>
                  <controls>
                    <control ref='CS-CLIENT-SECRET' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CS-CLIENT-SECRET' mitigation='100' />
              </controls>
            </threat>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.11.6' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.11.6' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='networking' name='Networking' desc='' library=''>
          <threats>
            <threat ref='CAPEC-157' name='Sniffing Attacks' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-319'>
                  <controls>
                    <control ref='IOT2.4.11.4' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.11.4' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='sensitive-read-or-post-data' name='Sensitive Read or Post data' desc='' library=''>
          <threats>
            <threat ref='CAPEC-16' name='Dictionary-based or brute force password attack' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An attacker tries each of the words in a dictionary as passwords to gain access to
                                the system via some user's account. If the password chosen by the user was a word
                                within the dictionary, this attack will be successful (in the absence of other
                                mitigations). This is a specific instance of the password brute forcing attack
                                pattern.&lt;/br&gt;
                            </desc>
              <riskRating confidentiality='75' integrity='75' availability='1' easeOfExploitation='50' />
              <references />
              <weaknesses>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='CWE-521' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-521' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-167' name='Sensitive Data stored on the mobile device could be accessed by an attacker' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An attacker could retrieve sensitive data stored on a mobile device.

                                This information may be stored in configuration files, embedded within the application
                                itself, or stored in other ways. Sensitive information may include long-term keys,
                                passwords, credit card or financial information, and other private material that the
                                mobile app uses in its interactions with the server.

                                In some cases, it may not even be necessary to gain access to another user's
                                installation - if all instances of the client software are embedded with the same
                                sensitive information (for example, long term keys for communication with the server)
                                then the attacker must simply find a way to gain their own copy of the client software
                                in order to perform this attack.
                            </desc>
              <riskRating confidentiality='75' integrity='75' availability='50' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-312'>
                  <controls>
                    <control ref='CWE-312-ENCRYPT' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-312-ENCRYPT' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-privacy' name='IoT Privacy' desc='' groupName='' tags='' position='10' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='EU-GDPR-NO-ANONYMISATION' name='Insufficient anonymisation or pseudonymisation' state='0' impact='100'>
          <desc>&lt;span style=""&gt;Personal data which is not - or incorrectly - anonymised or pseudonymised
                        is more vulnerable to malicious personal data processing because the data subjects are more
                        easily identifiable.&lt;br /&gt;&lt;br /&gt;Data subject = person of whom data is processed.&lt;/span&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:33:35.803'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA' name='Missing Encryption of Sensitive Data' state='0' impact='100'>
          <desc>&lt;ul&gt;
                        &lt;li&gt;Weak encryption algorithms&lt;/li&gt;
                        &lt;li&gt;Loss of encryption keys&lt;/li&gt;
                        &lt;li&gt;Compromised encryption keys&lt;/li&gt;
                        &lt;li&gt;Revoked keys are still active (bad key lifecycle management)&lt;/li&gt;
                        &lt;/ul&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:39:08.197'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='EU-GDPR-NO-LEGAL-GROUND-INTERNATIONAL-TRANSFER' name='No legal ground used for international data transfer to third countries' state='0' impact='100'>
          <desc>&lt;ul&gt;
                        &lt;li&gt;No binding corporate rules or standard model clauses with non-EU third party&lt;/li&gt;
                        &lt;li&gt;Inadequate due dilligence of third parties&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:35:54.074'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='EU-GDPR-NO-DELETION-FUNCTIONALITY' name='Not data deletion functionality' state='0' impact='100'>
          <desc>&lt;span style=""&gt;Personal data is not automatically deleted when retention periods have
                        expired, which means data must be manually deleted by an administrator who can easily forget
                        this task.&lt;br /&gt;&lt;br /&gt;Personal data that was deleted becomes operational again after
                        a restore because the data was not deleted from the back-ups nor was there a process in place to
                        reidentify and delete personal data that was previously deleted.&lt;/span&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:34:26.817'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='EU-GDPR-PRODUCTION-DATA-TEST-DATA' name='Production data used in a test environment' state='0' impact='100'>
          <desc>&lt;span style=""&gt;Production data is stored in a less protected test environment where
                        personal data
                        is easier breached and other security controls are in place.&lt;/span&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:33:35.722'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-921' name='Storage of Sensitive Data in a Mechanism without Access Control' state='0' impact='100'>
          <desc>The software stores sensitive information in a file system or device that does not have built-in access control.
While many modern file systems or devices utilize some form of access control in order to restrict access to data, not all storage mechanisms have this capability. For example, memory cards, floppy disks, CDs, and USB devices are typically made accessible to any user within the system. This can become a problem when sensitive data is stored in these mechanisms in a multi-user environment, because anybody on the system can read or write this data. On Android devices, external storage is typically globally readable and writable by other applications on the device. External storage may also be easily accessible through the mobile device's USB connection or physically accessible through the device's memory card port.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-398' name='The application has not been securely developed' state='0' impact='100'>
          <desc>The code has features that do not directly introduce aweakness or vulnerability, but indicate that the product has not been carefully developed or maintained. Programs are more likely to be secure when good development practices are followed. If a program is complex, difficult to maintain, not portable, or shows evidence of neglect, then there is a higher likelihood that weaknesses are buried in the code.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='EU-GDPR-UNNECESSARY-PRIVILEGES' name='Unnecessary privileges to process the data' state='0' impact='100'>
          <desc>&lt;span style=""&gt;Authorization can be bypassed&lt;/span&gt;</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:33:03.931'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='EU-GDPR-ANONYMISATION' name='Anonymisation/pseudonimisation the data' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;span style=" , Arial;"&gt;Implement anonymisation/pseudonymisation or give a risk based explanation (from the standpoint of the data subject) why anonymisation and pseudonymisation are not used. Anonymisation makes it impossible to reidentify the data subject while pseudonymisation uses randomization techniques to make personal data less identifiable.&lt;br /&gt;&lt;br /&gt;The following techniques provide a degree of anonymisation and pseudonymisation and might be used:&lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;noise addition&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;substitution&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;aggregation or K-anonymity&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;L-diversity&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;differential privacy&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;hashing or tokenization&lt;/li&gt; 
  &lt;li&gt;dummy data&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations />
          <references>
            <reference name='EU GDPR - EU Data Protection' url='http://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf' />
          </references>
          <standards>
            <standard ref='Art.5' supportedStandardRef='EU-GDPR' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Verify anonymized data is stripped of ALL personally identifiable information. It
                            should be impossible to reidentify specific users.&lt;/li&gt;
                            &lt;li&gt;Verify additional data would be required to reidentify a specific user when
                            leveraging data pseudonymization.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-01-18T12:56:50.151'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-285' name='Apply authorisation checks to segregate and control access to user data' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Applications protecting sensitive or otherwise restricted resources must ensure only appropriate and authorised users may access the application data. It is important that an application prevents unauthorised users gaining inappropriate access to each other's data; although user A and user B may both be trusted to access data within the application, they may be authorised to only access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are manipulation of an ID value or other object reference sent in the URL or body of an HTTP request). 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this will be through checking the validity of the session token issued after login.&lt;/li&gt; 
   &lt;li&gt;Confirm the user is entitled to access the data or resource they are requesting. E.g. their confirmed identify checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt; 
   &lt;li&gt;Access controls should be granular, and allow for access to individual resources to be issued to individual users or roles.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;div&gt;
    URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework. 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='Art.32' supportedStandardRef='EU-GDPR' />
            <standard ref='9.1.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-5' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-6' supportedStandardRef='NIST 800-53' />
            <standard ref='CM-7' supportedStandardRef='NIST 800-53' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Using two different browsers configured with an intercepting proxy.&lt;/li&gt;
                            &lt;li&gt;Login as user A in browser A.&lt;/li&gt;
                            &lt;li&gt;Login as user B in browser B.&lt;/li&gt;
                            &lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Perform the operation as user A and view their sensitive data&lt;/li&gt;
                            &lt;li&gt;Obtain the session ID of user B&lt;/li&gt;
                            &lt;li&gt;Configure the proxy to intercept&lt;/li&gt;
                            &lt;li&gt;Perform the operation as user A again, but this time intercept all the requests
                            and replace user A's session ID with that of user B&lt;/li&gt;
                            &lt;li&gt;Ensure that user A's sensitive data is &lt;b&gt;not &lt;/b&gt;visible&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:14.266'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.12.13' name='Devices and services should be designed with security usability in mind.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Devices and services should be designed with security usability in mind, reducing where possible, security friction and decision points that may have a detrimental impact on security. Best practices on usable security should be followed, particularly for user interaction and user interfaces.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Usability and cybersecurity complement one another. A well-designed system needs to make it easy for the user to do the right thing, hard to do the wrong thing, and easy to recover when the wrong things happen anyway. Usability has only recently become an important concern in the cybersecurity field, due to growing recognition of the fact that users themselves are a key component in organizational security programs. If users find a cybersecurity measure too difficult, they will try to circumvent it &amp;#8211; which harms organizational security. Therefore, it is in every organization’s interest to design cybersecurity measures in such a way that they take into account the perceptions, characteristics, needs, abilities, and behaviors of users themselves.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that devices and services are designed with security usability in mind.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Usability Of Security' url='https://csrc.nist.gov/Projects/Usability-Of-Security/' />
          </references>
          <standards>
            <standard ref='2.4.12.13' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.13' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.13' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.13' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.13' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='EU-GDPR-ENCRYPT-PERSONAL-DATA' name='Encrypt personal data' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='EDITED'>
          <desc>&lt;span style=""&gt;Implement encryption at rest (see guidance below) or give risk-based explanation why encryption was not implemented.&lt;br /&gt;&lt;br /&gt;Use well known encryption libraries, taking into account the data use, and do not invent your own. &lt;br /&gt;&lt;/span&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=""&gt;personal data must be encrypted&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=""&gt;data that is not used by the application (e.g. passwords, …) should be hashed so they cannot be recovered easily&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;</desc>
          <implementations />
          <references>
            <reference name='EU GDPR - EU Data Protection' url='http://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf' />
          </references>
          <standards>
            <standard ref='Art.32' supportedStandardRef='EU-GDPR' />
            <standard ref='2.4.12.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.2' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Verify user personal data processed by the application is encrypted at rest (eg
                            databases).&lt;/li&gt;
                            &lt;li&gt;If encryption is not being leveraged verify documentation exists outlining the
                            reasoning for that decision.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-01-18T14:44:50.785'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='EU-GDPR-IMPLEMENT-FORGET' name='Implement forget user functionality' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;span style=""&gt;Make sure that your deletion functionality also facilitates the manual
                        deletion
                        of
                        one data subject (person of whom personal data is processed) at any given point in time. All
                        data of
                        the
                        data subject should be deleted from the operational databases as well as back-ups.&lt;br /&gt;&lt;br
                        /&gt;Implementation
                        Advice: You should develop a script to ensure the re-deletion of data subjects (persons of whom
                        personal
                        data is processed) who exercised their right to be forgotten and run it after each database
                        restore.
                        The
                        data subjects should be deleted from the script whenever the retention period of the data has
                        expired.&lt;/span&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='EU GDPR - EU Data Protection' url='http://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf' />
          </references>
          <standards>
            <standard ref='Art.17' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.5' supportedStandardRef='EU-GDPR' />
            <standard ref='2.4.12.7' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.7' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.7' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.7' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.7' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Verify the capability to delete a user's personal data from within operational
                            storage.&lt;/li&gt;
                            &lt;li&gt;Verify this user data will not be reactivated during restoration of data backup.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-01-18T14:12:39.055'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='EU-GDPR-MANAGE-INTERNATIONAL-DATA-TRANSFERS' name='Manage international data transfers' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;span style=""&gt;You must involve the DPO/Legal in order to ensure that the international
                        transfer
                        of data is legal. The DPO can make use of adequacy decisions, Binding Corporate Rules (BCRs),
                        standard EU
                        model clauses or derivatives (Privacy shield) whenever they apply.&lt;/span&gt;
                    </desc>
          <implementations />
          <references>
            <reference name='EU GDPR - EU Data Protection' url='http://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf' />
          </references>
          <standards>
            <standard ref='Art.44' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.45' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.46' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.47' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.48' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.49' supportedStandardRef='EU-GDPR' />
            <standard ref='Art.50' supportedStandardRef='EU-GDPR' />
            <standard ref='2.4.12.8' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.8' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>Verify international transfer of user personal data to non-EU countries is compliant with
                            the requirements of the Data Protection Practitioner.
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-01-18T15:06:44.847'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.12.14' name='The product or service only records audio/visual data in accordance with the authorization of the user (e.g., no passive recording without explicit authorization).' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;IoT provider shall ensure the appropriate level of users’ privacy. This includes the obligation to inform users about the collection of their personal information, receive a consent to do so in certain cases, the data minimization obligation, the same cybersecurity measures discussed afore, and many more. Literally, users’ privacy must be implemented by design, considering data protection on the very early stages of development.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='ESOMAR Data Protection Checklist' url='https://www.esomar.org/uploads/public/knowledge-and-standards/codes-and-guidelines/ESOMAR-Data-Protection-Checklist_September-2017.pdf' />
          </references>
          <standards>
            <standard ref='2.4.12.14' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.14' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.14' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.14' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.14' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.12.1' name='The product/service stores the minimum amount of Personal Information from users.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;The product/service stores the minimum amount of Personal Information from users.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Data can present unintended privacy concerns when aggregated. Therefore the product/service shall collect and store the minimal amount of data possible.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the product/service stores the minimum amount of Personal Information from users. Consult with data scientists, legal and compliance teams to determine risk of data collection and storage. Consider implications of consent and the fact that IoT devices may not present an interface for collecting consent and may passively collect data about people other than owners and operators. IoT may collect information about individuals who cannot provide consent (such as minors) and data collection should be modified accordingly.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='IoT Security Guidance' url='https://www.owasp.org/index.php/IoT_Security_Guidance' />
            <reference name='MITRE Privacy Requirements Definition and Testing' url='https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/engineering-informationintensive' />
            <reference name='OWASP Top 10 Privacy Risks Project' url='https://www.owasp.org/index.php/OWASP_Top_10_Privacy_Risks_Project#tab=Top_10_Privacy_Risks_2' />
          </references>
          <standards>
            <standard ref='2.4.12.1' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.1' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>	&lt;p&gt;Please see reference [3] for &lt;span class="caps"&gt;MITRE&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='EU-GDPR-ANONYMISED-DATA-TEST' name='Use anonymised data in test environment' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;span style=""&gt;Implement anonymisation/pseudonymisation or give a risk based explanation (from the standpoint of the data subject) why anonymisation and pseudonymisation are not used. Anonymisation makes it impossible to reidentify the data subject while pseudonymisation uses randomization techniques to make personal data less identifiable.&lt;br /&gt;&lt;br /&gt;The following techniques provide a degree of anonymisation and pseudonymisation and might be used:&lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;noise addition&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;substitution&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;aggregation or K-anonymity&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;L-diversity&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;differential privacy&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;hashing or tokenization&lt;/li&gt; 
  &lt;li&gt;dummy data&lt;/li&gt; 
 &lt;/ul&gt;&lt;br /&gt;If anonymization/pseudonymization is not possible, other security controls should be implemented, such as:&lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;strong logical access control to test environment&lt;/li&gt; 
  &lt;li&gt;deletion of test environment data after tests have been conducted&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations />
          <references>
            <reference name='EU GDPR - EU Data Protection' url='http://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf' />
          </references>
          <standards>
            <standard ref='Art.32' supportedStandardRef='EU-GDPR' />
            <standard ref='2.4.12.4' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Verify anonymization / pseudonymization of all user personal data is leveraged for
                            data residing within the test environment (truly anonymized data is stripped of ALL
                            personally identifiable information and additional data would be required to reidentify a
                            specific user when leveraging data pseudonymization).&lt;/li&gt;
                            &lt;li&gt;If anonymization / pseudonymization is not leveraged for user personal data
                            residing within the test environment, verify documentation exists justifying why this is and
                            ensure security is as robust as the production environment.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-01-18T14:46:46.327'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-398'>
                  <controls>
                    <control ref='IOT2.4.12.13' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.12.1' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.12.1' mitigation='50' />
                <control ref='IOT2.4.12.13' mitigation='50' />
              </controls>
            </threat>
            <threat ref='CAPEC-37' name='Retrieve Embedded Sensitive Data' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-921'>
                  <controls>
                    <control ref='IOT2.4.12.14' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.12.14' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='personal-data' name='Personal data' desc='' library=''>
          <threats>
            <threat ref='EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES' name='Data leakage or disclosure to unauthorized parties' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>&lt;span style=""&gt;Unauthorized party might access/breach the personal data of the
                                data subject.&lt;/span&gt;
                            </desc>
              <riskRating confidentiality='50' integrity='50' availability='75' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='EU-GDPR-NO-ANONYMISATION'>
                  <controls>
                    <control ref='EU-GDPR-ANONYMISATION' mitigation='25' />
                  </controls>
                </weakness>
                <weakness ref='EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA'>
                  <controls>
                    <control ref='EU-GDPR-ENCRYPT-PERSONAL-DATA' mitigation='25' />
                  </controls>
                </weakness>
                <weakness ref='EU-GDPR-PRODUCTION-DATA-TEST-DATA'>
                  <controls>
                    <control ref='EU-GDPR-ANONYMISED-DATA-TEST' mitigation='25' />
                  </controls>
                </weakness>
                <weakness ref='EU-GDPR-UNNECESSARY-PRIVILEGES'>
                  <controls>
                    <control ref='CWE-285' mitigation='25' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-285' mitigation='25' />
                <control ref='EU-GDPR-ANONYMISATION' mitigation='25' />
                <control ref='EU-GDPR-ANONYMISED-DATA-TEST' mitigation='25' />
                <control ref='EU-GDPR-ENCRYPT-PERSONAL-DATA' mitigation='25' />
              </controls>
            </threat>
            <threat ref='EU-GDPR-ILLEGAL-PROCESSING-PERSONAL-DATA' name='Illegal processing of personal data' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>&lt;span style=" "&gt;Processing personal data without legal grounds which makes it
                                possible for
                                data subjects to file a complaint at local Data Protection Authority which might lead to
                                administrative
                                fines.&lt;/span&gt;
                            </desc>
              <riskRating confidentiality='75' integrity='50' availability='50' easeOfExploitation='50' />
              <references />
              <weaknesses>
                <weakness ref='EU-GDPR-NO-LEGAL-GROUND-INTERNATIONAL-TRANSFER'>
                  <controls>
                    <control ref='EU-GDPR-MANAGE-INTERNATIONAL-DATA-TRANSFERS' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='EU-GDPR-MANAGE-INTERNATIONAL-DATA-TRANSFERS' mitigation='100' />
              </controls>
            </threat>
            <threat ref='EU-GDPR-SUBJECT-RIGTHS' name='Subjects cannot exercise their rights over their personal data' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>&lt;span style=" "&gt;Data subject cannot exercise their rights which makes it
                                possible for data subjects to file a complaint at local Data Protection Authority which
                                might lead to administrative fines.&lt;br /&gt;&lt;br /&gt;Data subject = person of whom
                                personal data is processed&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='EU-GDPR-NO-DELETION-FUNCTIONALITY'>
                  <controls>
                    <control ref='EU-GDPR-IMPLEMENT-FORGET' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='EU-GDPR-IMPLEMENT-FORGET' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-secure-supply-chain-and-production' name='IoT Secure Supply Chain and Production' desc='' groupName='' tags='' position='11' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='UNNECESSARY-SERVICES' name='Unnecessary services are exposed' state='0' impact='100'>
          <desc>The application exposes unnecessary services which increase the attack surface.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.14.1' name='All the production test and calibration software is erased, removed or secured before the product is dispatched from the factory.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;All the production test and calibration software used during manufacture is erased, removed or secured before the product is dispatched from the factory.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The product should have all of the production test and calibration software used during manufacture erased, removed or secured before the product is dispatched from the factory. This is to prevent alteration of the product post manufacture when using authorized production software, for example hacking of the RF characteristics for greater RF &lt;span class="caps"&gt;ERP&lt;/span&gt;. Where such functionality is required in a service center, it shall be erased or removed upon completion of any servicing activities.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Erase, remove or secure all the production test and calibration software used during manufacture, before the product is dispatched from the factory.&lt;/p&gt;</desc>
          <implementations />
          <references />
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='IOT-WIDE-ATTACK-SURFACE' name='Exploitation of a wide attack surface' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='UNNECESSARY-SERVICES'>
                  <controls>
                    <control ref='IOT2.4.14.1' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.14.1' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='iot-web-user-interface' name='IoT Web User Interface' desc='' groupName='' tags='' position='6' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='WEB-SRV-ADM' name='Access to management functions is not limited to web service administrators' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable
                        user identity or consumes a significant amount of resources, gives access to sensitive data or
                        sensitive business logic.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:49:27.937'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-306: Missing Authentication for Critical Function' url='https://cwe.mitre.org/data/definitions/306.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CSD-ADM-OPEN' name='Access to the administration interfaces is open to untrusted parties' state='0' impact='100'>
          <desc>The application does not restrict access to administration interfaces to untrusted parties.&amp;nbsp;
                        &lt;br /&gt;This fact could allow an attacker to chain vulnerabilities to gain unauthorized
                        access to the system.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:49:27.851'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-798, CWE-603' name='Client side code stores secret keys, sensitive business logic or other proprietary information' state='0' impact='100'>
          <desc>Client side code is fully controlled by the user, a malicious user could read the code or
                        reverse engineer it if it is compiled on any form.&amp;nbsp;&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;If the client side code includes secret keys, sensitive business logic &amp;nbsp;(like
                        client authentication) or proprietary information, all of this is directly exposed to the user,
                        allowing him to get the sensitive information or study the business logic with the aim of
                        bypassing it. Some examples of this which are Vulnerabilities are:
                        &lt;ul&gt;
                        &lt;li&gt;Perform an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Make privileged calls from the client based solely on client side conditions (i.e. a
                        cash check on client side and then to place a buy on an e-commerce platform).&lt;/li&gt;
                        &lt;li&gt;Hard-coding keys and secrets on client side to make client-to-client calls without a
                        proxy.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:53:12.253'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-602: client-side Enforcement of Server-Side Security' url='https://cwe.mitre.org/data/definitions/602.html' />
              <reference name='CWE-603: Use of client-side Authentication' url='https://cwe.mitre.org/data/definitions/603.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-79' name='Improper Neutralization of Input During Web Page Generation (&apos;Cross-site Scripting&apos;)' state='0' impact='100'>
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it
                        is placed in output that is used as a web page that is served to other users. Cross-site
                        scripting (XSS) vulnerabilities occur when:
                        &lt;ol&gt;
                        &lt;li&gt;Untrusted data enters a web application, typically from a web request.&lt;/li&gt;
                        &lt;li&gt;The web application dynamically generates a web page that contains this untrusted
                        data.&lt;/li&gt;
                        &lt;li&gt;During page generation, the application does not prevent the data from containing
                        content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes,
                        mouse events, Flash, ActiveX, etc.&lt;/li&gt;
                        &lt;li&gt;A victim visits the generated web page through a web browser, which contains malicious
                        script that was injected using the untrusted data.&lt;/li&gt;
                        &lt;li&gt;Since the script comes from a web page that was sent by the web server, the victim's
                        web browser executes the malicious script in the context of the web server's domain.&lt;/li&gt;
                        &lt;li&gt;This effectively violates the intention of the web browser's same-origin policy, which
                        states that scripts in one domain should not be able to access resources or run code in a
                        different domain.&lt;/li&gt;
                        &lt;/ol&gt;There are three main kinds of XSS:
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 1: Reflected XSS (or Non-Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The server reads data directly from the HTTP request and reflects it back in the HTTP response.
                        Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a
                        vulnerable web application, which is then reflected back to the victim and executed by the web
                        browser. The most common mechanism for delivering malicious content is to include it as a
                        parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed
                        in this manner constitute the core of many phishing schemes, whereby an attacker convinces a
                        victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's
                        content back to the victim, the content is executed by the victim's browser.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 2: Stored XSS (or Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The application stores dangerous data in a database, message forum, visitor log, or other
                        trusted data store. At a later time, the dangerous data is subsequently read back into the
                        application and included in dynamic content. From an attacker's perspective, the optimal place
                        to inject malicious content is in an area that is displayed to either many users or particularly
                        interesting users. Interesting users typically have elevated privileges in the application or
                        interact with sensitive data that is valuable to the attacker. If one of these users executes
                        malicious content, the attacker may be able to perform privileged operations on behalf of the
                        user or gain access to sensitive data belonging to the user. For example, the attacker might
                        inject XSS into a log message, which might not be handled properly when an administrator views
                        the logs.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 0: DOM-Based XSS&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        In DOM-based XSS, the client performs the injection of XSS into the page; in the other types,
                        the server performs the injection. DOM-based XSS generally involves server-controlled, trusted
                        script that is sent to the client, such as Javascript that performs sanity checks on a form
                        before the user submits it. If the server-supplied script processes user-supplied data and then
                        injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is
                        possible.Once the malicious script is injected, the attacker can perform a variety of malicious
                        activities. The attacker could transfer private information, such as cookies that may include
                        session information, from the victim's machine to the attacker. The attacker could send
                        malicious requests to a web site on behalf of the victim, which could be especially dangerous to
                        the site if the victim has administrator privileges to manage that site. Phishing attacks could
                        be used to emulate trusted web sites and trick the victim into entering a password, allowing the
                        attacker to compromise the victim's account on that web site. Finally, the script could exploit
                        a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes
                        referred to as &amp;quot;drive-by hacking&amp;quot;.
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;In many cases, the attack can be launched without the victim even being aware
                        of it. Even with careful users, attackers frequently use a variety of methods to encode the
                        malicious portion of the attack, such as URL encoding or Unicode, so the request looks less
                        suspicious.
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:54:28.282'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-79: Improper Neutralization of Input During Web Page Generation (&apos;Cross-site Scripting&apos;)' url='https://cwe.mitre.org/data/definitions/79.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-613' name='Insufficient Session Expiration' state='0' impact='100'>
          <desc>Insufficient Session Expiration is when a web site permits an attacker to reuse old session
                        credentials or session IDs for authorization.&amp;nbsp;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:50:36.199'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-613: Insufficient Session Expiration' url='https://cwe.mitre.org/data/definitions/613.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='cwe-613-logout' name='Insufficient Session Logout' state='0' impact='100'>
          <desc>Insufficient Session Expiration is when a web site permits an attacker to reuse old session
                        credentials or session IDs for authorization. &amp;nbsp;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:50:36.141'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-613: Insufficient Session Expiration' url='https://cwe.mitre.org/data/definitions/613.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-306' name='Missing Authentication for Critical Function' state='0' impact='100'>
          <desc>The software does not perform any authentication for functionality that requires a provable
                        user identity or consumes a significant amount of resources.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T15:06:19.768'>
              <output></output>
            </source>
            <references>
              <reference name='CWE-306: Missing Authentication for Critical Function' url='http://cwe.mitre.org/data/definitions/306.html' />
            </references>
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-257' name='Plaintext Storage of a Password' state='0' impact='100'>
          <desc>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit overplaintextpasswords since they are subject not only to reuse by maliciousattackersbut also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts. </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-521' name='Poor quality passwords in use' state='0' impact='100'>
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.
An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-254-PROD' name='The product lacks key security features' state='0' impact='100'>
          <desc>The product lacks of key security features such as protection against tampering, unprotected storages or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
        <weakness ref='CWE-601' name='URL Redirection to Untrusted Site (&apos;Open Redirect&apos;)' state='0' impact='100'>
          <desc>A web application accepts a user-controlled input that
					specifies a link to an external site, and uses that link in a Redirect. This
					simplifies phishing attacks.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-06T14:58:38.647'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='CWE-285' name='Apply authorisation checks to segregate and control access to user data' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Applications protecting sensitive or otherwise restricted resources must ensure only appropriate and authorised users may access the application data. It is important that an application prevents unauthorised users gaining inappropriate access to each other's data; although user A and user B may both be trusted to access data within the application, they may be authorised to only access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are manipulation of an ID value or other object reference sent in the URL or body of an HTTP request). 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this will be through checking the validity of the session token issued after login.&lt;/li&gt; 
   &lt;li&gt;Confirm the user is entitled to access the data or resource they are requesting. E.g. their confirmed identify checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt; 
   &lt;li&gt;Access controls should be granular, and allow for access to individual resources to be issued to individual users or roles.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;div&gt;
    URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework. 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='Art.32' supportedStandardRef='EU-GDPR' />
            <standard ref='9.1.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.2.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.1' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.10.2' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.12.3' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.8.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-24' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-5' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-6' supportedStandardRef='NIST 800-53' />
            <standard ref='CM-7' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-12' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-4' supportedStandardRef='NIST 800-53' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='9.5' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.1' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.4' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.8' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='9.5' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Using two different browsers configured with an intercepting proxy.&lt;/li&gt;
                            &lt;li&gt;Login as user A in browser A.&lt;/li&gt;
                            &lt;li&gt;Login as user B in browser B.&lt;/li&gt;
                            &lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Perform the operation as user A and view their sensitive data&lt;/li&gt;
                            &lt;li&gt;Obtain the session ID of user B&lt;/li&gt;
                            &lt;li&gt;Configure the proxy to intercept&lt;/li&gt;
                            &lt;li&gt;Perform the operation as user A again, but this time intercept all the requests
                            and replace user A's session ID with that of user B&lt;/li&gt;
                            &lt;li&gt;Ensure that user A's sensitive data is &lt;b&gt;not &lt;/b&gt;visible&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:14.266'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CS-CLIENT-SECRET' name='Implement sensitive logic and data validation on the server-side' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        All data and functionality at the client-side must be considered tainted and subject to
                        manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or
                        obfuscation of client-side code or content). &amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        This includes application logic decisions, such as access controls, and data considered
                        sensitive or secret, such as encryption keys.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        While controls may be duplicated at the client-side to improve the user experience, it is
                        important these are enforced at the server-side.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Business logic, in particular access controls, must be implemented at the server-side.
                        &amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Secret data should be stored at the server-side, and only that which is explicitly
                        required be duplicated at the client-side.&lt;/li&gt;
                        &lt;li&gt;All data provided from the client-side (even from binary clients) should be considered
                        tainted, and security decisions should not be made solely on this data.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        For example, an insecure implementation could include a compiled application (e.g. Flash!)
                        performing authentication at the client-side against a stored password. &amp;nbsp;Decompilation
                        of the binary (in this case flv file) or interception and modification of controls between the
                        client and server could expose the password or allow unauthorised access to the authenticated
                        application content.
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='12.2.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.10' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.7' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-24' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-10' supportedStandardRef='NIST 800-53' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.9' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='5.5' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;authentication&lt;/li&gt;
                            &lt;li&gt;input validation&lt;/li&gt;
                            &lt;li&gt;access to resources&lt;/li&gt;
                            &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure those decisions are made or validated at the server side, particularly
                            where client-side controls are implemented.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review sensitive data passed to the client side is appropriate, and ensure no
                            inappropriate data is stored or hard-coded into client-side components, for example&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;ul&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Personally Identifiable Information.&lt;/li&gt;
                            &lt;li&gt;Financial data, in particular cardholder data (as defined by the PCI Council).&lt;/li&gt;
                            &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;&lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-28T12:52:08.060'>
              <output></output>
            </source>
            <references>
              <reference name='OWASP Web Application Security Testing' url='https://www.owasp.org/index.php/Web_Application_Security_Testing_Cheat_Sheet' />
              <reference name='Testing for Business Logic' url='https://www.owasp.org/index.php/Testing_for_business_logic' />
            </references>
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.10.7' name='Pass phrase is obscured by default where entered on a web UI.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where passwords are entered on a web user interface, the actual pass phrase is obscured by default to prevent the capture of passwords.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (•), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against &amp;#8220;shoulder surfing&amp;#8221;, in other words to prevent nearby observers reading the password &amp;#8220;over the user&amp;#8217;s shoulder&amp;#8221; and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Ensure that the actual pass phrase is obscured by default where entered on a web user interface.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='The Pros and Cons of Password Masking' url='https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html' />
          </references>
          <standards>
            <standard ref='2.4.10.7' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.7' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.7' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.7' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-79-ENCODE' name='Perform contextual HTML encoding of all user submitted data' platform='.NET' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  All data received from the client-side should be considered tainted and a potential risk. If handled properly at the point of input, this untrusted tainted data should have been sanitised and encoded safely. The context when returning the data to the user is important, however, as this will affect what metacharacters have significance, and how they will be interpreted at the client-side. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, if data is inserted into the HTML body then HTML Entity encoding should be performed, but if the data is inserted into a JavaScript block, then JavaScript escaping should be performed. Similarly, while JavaScript code should not be executed in the browser when returned in an application/json response, it may then be rendered in an unsafe manner. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Apply contextual encoding to all tainted data when returned to the users (including secondary users if the application has multiple interfaces - e.g. an internal user viewing data entered by an external customer).&lt;/li&gt; 
  &lt;li&gt;This should be in addition to, and in conjunction with, sanitisation and encoding applied at the time of data acquisition.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations>
            <implementation platform='.NET'>
              <desc>ClJlc3BvbnNlLldyaXRlKEh0dHBVdGlsaXR5Lkh0bWxFbmNvZGUoUmVxdWVzdC5Gb3JtWyJuYW1lIl0pKTs=</desc>
            </implementation>
            <implementation platform='Spring MVC'>
              <desc>CkluIHdlYi54bWwKCjxjb250ZXh0LXBhcmFtPgogICAgPHBhcmFtLW5hbWU+ZGVmYXVsdEh0bWxFc2NhcGU8L3BhcmFtLW5hbWU+CiAgICA8cGFyYW0tdmFsdWU+dHJ1ZTwvcGFyYW0tdmFsdWU+CjwvY29udGV4dC1wYXJhbT4=</desc>
            </implementation>
          </implementations>
          <references />
          <standards>
            <standard ref='12.2.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.11' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.11' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.11' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.11' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.11' supportedStandardRef='iotsf-class-4' />
            <standard ref='CA-8' supportedStandardRef='NIST 800-53' />
            <standard ref='CM-2' supportedStandardRef='NIST 800-53' />
            <standard ref='CM-6' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-1' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-10' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-14' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-15' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-2' supportedStandardRef='NIST 800-53' />
            <standard ref='11.2' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='5.15' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='11.2' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='5.15' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='5.23' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='5.24' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='11.2' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='5.15' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='5.23' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='5.24' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the areas of the application in which tainted data acquired from outside
                            the application presented back (e.g. user input, uploaded files, third party content)&lt;/li&gt;
                            &lt;li&gt;Review the encoding and sanitisation applied to the data before presentation.&lt;/li&gt;
                            &lt;li&gt;If possible, pass metacharacters and other unexpected content through the
                            application to review the efficacy of the encoding.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:21.033'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='WEB-SRV-ADM-AUTH' name='Restrict access to administrative functionality' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        If inadequate controls are in place, lower privileged users may be able to access higher
                        privilege or administrative functionality to subvert security within the application.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Restrict administration functions to designated administrators only through robust
                        access controls.&lt;/li&gt;
                        &lt;li&gt;Ensure this restriction is applied at the server-side; do not rely on 'secret' areas
                        of the application, menu hiding, or other client-side techniques to protect the functionality.&lt;/li&gt;
                        &lt;li&gt;Measures to prevent cross-site request forgery must be present on administrative
                        functions.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='12.1.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.3' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.3' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.3' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.3' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-2' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-3' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-5' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-6' supportedStandardRef='NIST 800-53' />
            <standard ref='SC-3' supportedStandardRef='NIST 800-53' />
            <standard ref='SC-30' supportedStandardRef='NIST 800-53' />
            <standard ref='SI-10' supportedStandardRef='NIST 800-53' />
            <standard ref='18.2' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='18.7' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='18.2' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='18.7' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='4.10' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='18.2' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='18.7' supportedStandardRef='OWASP-ASVS-Level-3' />
            <standard ref='4.10' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Try to access administration resources with a user who is not an administrator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the access is forbidden.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-30T22:37:08.424'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CSD-ADM-TRUST' name='Restrict access to administrative interfaces' platform='' cost='1' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Restrict access to administrative interfaces to trusted actors from trusted locations to reduce
                        the application attack surface and likelihood of compromise.
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Restrict administrative access to specific networks or hosts.&lt;/li&gt;
                        &lt;li&gt;Use strong authentication for privileged access, for example a 2FA.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;&lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.13' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.8' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-1' supportedStandardRef='NIST 800-53' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.32' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;ol&gt;
                            &lt;li&gt;Try to access the administrative interface from an untrusted location.&lt;/li&gt;
                            &lt;/ol&gt;For example, if you are using a Wordpress CMS you should restrict access to
                            /wp-admin which should not be available from the internet but only from trusted networks or
                            IP addresses.&amp;nbsp;
                            &lt;br /&gt;&amp;nbsp;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2016-11-29T18:03:19.657'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='ASVS-2014-3.4' name='Revoke user sessions after a fixed time period' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  User sessions that remain active for extended periods can expose them to attacks, or provide greater opportunities for a malicious actor to exploit a compromised session. &amp;nbsp;For example, cryptographic or brute-force attacks against a session ID may become practical in a longer time-window. &amp;nbsp;Similarly, if a user session has been compromised, an attacker may forcibly keep that session alive to maintain a foothold in the application or environment. These types of attack can be mitigated by setting a hard limit on user sessions, even where the user is (or appears to be) actively using the application. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Invalidate all user sessions with the application after an extended period, even when they appear active (e.g. after 24 hours the user should be warned to complete their tasks or forced to re-authenticate)&lt;/li&gt; 
  &lt;li&gt;Ensure session revocation is enforced at the server-side rather than the client-side; for example, the session ID should be invalidated at the server rather than the client-side cookie being deleted or changed.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.14' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.14' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.14' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.14' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-11' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-12' supportedStandardRef='NIST 800-53' />
            <standard ref='3.4' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='3.4' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Verify the expected active ('hard') timeout.&lt;/li&gt;
                            &lt;li&gt;Check 'normal' use through a browser:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the authentication feature of the component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Authenticate as a user.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Keep the session open, with manual or automated requests to the server to maintain
                            an active session.&lt;/li&gt;
                            &lt;li&gt;Revisit an authenticated page and determine if the session has expired (e.g. the
                            session is no longer authenticated).&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;li&gt;Check the control is enforced at the server side and not using code in the
                            browser:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy, the Web Developer Console,&amp;nbsp;or other tool;
                            intercept the browser request and server response, and determine which cookies or other
                            tokens are used to maintain session state. Alternatively, capture an authenticated
                            application request for replay.&lt;/li&gt;
                            &lt;li&gt;Keep the session open with manual or automated requests to the server.&lt;/li&gt;
                            &lt;li&gt;Store and replay the request after the timeout period to see if the application
                            response with authenticated data.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:20.276'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='ASVS-2014-3.3' name='Revoke user sessions after a period of inactivity' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  Unattended authenticated sessions may be hijacked by a malicious user; for example on a shared terminal or an unlocked computer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;User sessions should be invalidated and terminated after a period of inactivity.&lt;/li&gt; 
  &lt;li&gt;This period should be defined by the project; time limit of between 5 and 30 mins is common in most online applications. &amp;nbsp;Shorter periods for high-security applications, or longer periods dictated by the workflow may be appropriate.&lt;/li&gt; 
  &lt;li&gt;The timeout should be triggered when the user is no longer interacting with the (web) application; e.g. the are no longer manually browsing or using the application functionality. Ensure that any background automated processes (e.g. heartbeats, pricing or data updates) are not considered activities that reset the timeout.&lt;/li&gt; 
  &lt;li&gt;Session revocation must occur at the server-side; for example, the session associated with the session ID is terminated on the server, rather than simply resetting a client-side cookie containing the session ID.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.5' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.5' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.5' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.5' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-11' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-12' supportedStandardRef='NIST 800-53' />
            <standard ref='3.3' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='3.3' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='3.3' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Verify the expected inactive timeout.&lt;/li&gt;
                            &lt;li&gt;Check 'normal' use through a browser:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the authentication feature of the component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Authenticate as a user.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Leave the session open for a given time (check the expiration time that has been
                            agreed to be implemented).&lt;/li&gt;
                            &lt;li&gt;Revisit an authenticated page and determine if the session has expired (e.g. the
                            session is no longer authenticated).&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;li&gt;Check the control is enforced at the server side and not using code in the
                            browser:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy, the Web Developer Console,&amp;nbsp;or other tool;
                            intercept the browser request and server response, and determine which cookies or other
                            tokens are used to maintain session state. Alternatively, capture an authenticated
                            application request for replay.&lt;/li&gt;
                            &lt;li&gt;Store and replay the request after the timeout period to see if the application
                            response with authenticated data.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;li&gt;Review application operation and determine if any behaviour artificially holds the
                            session open, for example, heartbeat requests or calls to update data feeds sent from the
                            client to the server are sometimes mistakenly interpreted as user activity, holding the
                            session open.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:20.266'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-256' name='Store passwords in unrecoverable form to prevent disclosure' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
                        To protect users passwords from accidental or deliberate exposure, the application should store
                        cryptographic hashes of passwords instead of the passwords themselves.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Do not store passwords themselves in the data store for verification at login.&lt;/li&gt;
                        &lt;li&gt;Instead, create a cryptographic hash of the password using a strong hash function that
                        includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk
                        of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function
                        to balance security and performance.&lt;/li&gt;
                        &lt;li&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt'
                        value for every account. &amp;nbsp;Apply multiple iterations of the hash to create the
                        additional computational work required to mitigate brute-force attacks.&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.3.1' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='9.4.3' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.6' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-16' supportedStandardRef='NIST 800-53' />
            <standard ref='2.13' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='2.13' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Review the mechanism for matching credentials from the client-side to stored
                            credentials for a user.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Best practice dictates the system should match a salted strong hash (SHA256 or
                            greater and a unique hash for each account) to that stored at the point the password was
                            set.&lt;/li&gt;
                            &lt;li&gt;For example, it is recommended that a system salt of 32 bits or more, a keyed HMAC
                            hash using &lt;b&gt;SHA-2 or SHA-3,&lt;/b&gt; and the â€œstretchingâ€
                            algorithm PBKDF2 with at
                            least 10,000 iterations, is used.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Confirm the stored credential is not a clear-text password&lt;/li&gt;
                            &lt;li&gt;Confirm the stored credential is not an encrypted password which may be recovered
                            (decrypted) at the server- or client- side.&lt;/li&gt;
                            &lt;li&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not
                            SHA1/MD5 or a flawed algorithm)&lt;/li&gt;
                            &lt;li&gt;Confirm that the hash is created from the password together with a unique salt
                            value for the user. This prevents use of rainbow tables, or of identifying password
                            collisions among users.&lt;/li&gt;
                            &lt;li&gt;Consider use of an algorithm with a configurable work factor, set to a high value
                            to inhibit attack.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:18.657'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='ASVS-3.2' name='Terminate user sessions on the server-side' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>&lt;div&gt;
  User sessions may end for a number of reasons; they may choose to log out, the session may be subject to an active or inactive timeout, they may be logged out due to concurrency restrictions, or the session may be revoked due to automated or manual intervention in response to a security or other event (e.g. suspicious behaviour or system maintenance). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In all cases, the user session must be terminated at the server-side, not solely at the client-side (for example by deleting or reissuing a session ID token/cookie). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Revoke user sessions at the server-side.&lt;/li&gt; 
  &lt;li&gt;Redirect users to the login page, or provide a login prompt to them in context.&lt;/li&gt; 
  &lt;li&gt;Where possible, ensure the session is not reused by the application server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations />
          <references />
          <standards>
            <standard ref='9.4.2' supportedStandardRef='ISO/IEC 27002:2013' />
            <standard ref='AC-11' supportedStandardRef='NIST 800-53' />
            <standard ref='AC-12' supportedStandardRef='NIST 800-53' />
            <standard ref='3.2' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='3.2' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='3.2' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check the session is terminated at the server side and not using code in the
                            browser:&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Authenticate as a user.&lt;/li&gt;
                            &lt;li&gt;Using an intercepting proxy, the Web Developer Console,&amp;nbsp;or other tool;
                            intercept the browser request and server response, and determine which cookies or other
                            tokens are used to maintain session state. Alternatively, capture an authenticated
                            application request for replay.&lt;/li&gt;
                            &lt;li&gt;Terminate the session using the application logout function&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Replay the captured request or add the session tokens back into the session to see
                            if the application response with authenticated data.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            To change or set the Session ID and otherwise modify browser requests, use an intercepting
                            proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or
                            Tamper Data.
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2015-08-15T17:17:20.252'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.10.4' name='The initial password or factory reset password for web UIs is unique to each device in the product family.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Where a web user interface password is used for login authentication, the initial password or factory reset password is unique to each device in the product family.&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Where a web user interface needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued for web user interfaces should be unique to each user.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Apply a process which ensures that the initial password or factory reset password for web user interfaces is unique to each device in the product family.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='US-CERT: Risks of Default Passwords on the Internet' url='https://www.us-cert.gov/ncas/alerts/TA13-175A' />
          </references>
          <standards>
            <standard ref='2.4.10.4' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.4' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.4' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.4' supportedStandardRef='iotsf-class-4' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:58.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='CWE-601' name='Whitelist to which URLs the application can redirect to' platform='' cost='0' risk='0' state='Recommended' owner='admin' library='' source='MANUAL'>
          <desc>The application should maintain a list of the URLs to which it can redirect. This whitelisting
                        can also be done by applying a regular expression. The application should only allow redirects
                        to trusted URLS.
                    </desc>
          <implementations />
          <references />
          <standards>
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-0' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-1' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-2' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-3' />
            <standard ref='2.4.10.12' supportedStandardRef='iotsf-class-4' />
            <standard ref='2.4.11.9' supportedStandardRef='iotsf-class-4' />
            <standard ref='AC-4' supportedStandardRef='NIST 800-53' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-1' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-2' />
            <standard ref='16.1' supportedStandardRef='OWASP-ASVS-Level-3' />
          </standards>
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the points of the application in which a redirection takes place.
                            Redirections are usually indicated by the use of the &amp;quot;&amp;quot;&amp;quot;&amp;quot;Location&amp;quot;&amp;quot;&amp;quot;&amp;quot;
                            HTTP header along with the 3xx code.&lt;/li&gt;
                            &lt;li&gt;If the content which is ending up inside the Location header is coming from user
                            input (URL string, Cookies, HTTP headers, forms, etc.), then.&lt;/li&gt;
                            &lt;li&gt;Using a browser, modify the input value which will be part of the Location header
                            to set up domains which should not be permitted.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2018-08-07T10:15:05.730'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='administration-service' name='Administration service' desc='' library=''>
          <threats>
            <threat ref='CSD-ADM-IFACE' name='Attackers gain access to the system through an unprotected administration interface' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Administrative interfaces grant access to sensitive operations that can typically
                                affect key security mechanisms, like modifying credentials and adding/removing user
                                accounts.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='100' />
              <references />
              <weaknesses>
                <weakness ref='WEB-SRV-ADM'>
                  <controls>
                    <control ref='WEB-SRV-ADM-AUTH' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CSD-ADM-OPEN'>
                  <controls>
                    <control ref='CSD-ADM-TRUST' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CSD-ADM-TRUST' mitigation='50' />
                <control ref='WEB-SRV-ADM-AUTH' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='authentication-and-authorization' name='Authentication and Authorization' desc='' library=''>
          <threats>
            <threat ref='CAPEC-232' name='Anonymous users could gain access to sensitive data' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Attackers could access data for which they are not authorised by connecting directly
                                to the resource, without authenticating. E.g.: GET /userdetails?ID=145 to gain direct
                                access to that user's personal information.
                            </desc>
              <riskRating confidentiality='100' integrity='100' availability='50' easeOfExploitation='50' />
              <references>
                <reference name='OWASP Development Guide: Authorisation' url='https://www.owasp.org/index.php/Guide_to_Authorization' />
                <reference name='OWASP Top Ten' url='https://www.owasp.org/index.php/Top_10_2007-Failure_to_Restrict_URL_Access' />
                <reference name='WASC-02' url='http://projects.webappsec.org/w/page/13246940/Insufficient%20Authorization' />
              </references>
              <weaknesses>
                <weakness ref='CWE-306'>
                  <controls>
                    <control ref='CWE-285' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-285' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-112' name='Brute Force' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers&amp;#8217; ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one&amp;#8217;s secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-257'>
                  <controls>
                    <control ref='IOT2.4.10.7' mitigation='50' />
                  </controls>
                </weakness>
                <weakness ref='CWE-521'>
                  <controls>
                    <control ref='IOT2.4.10.4' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.10.4' mitigation='50' />
                <control ref='IOT2.4.10.7' mitigation='50' />
              </controls>
            </threat>
            <threat ref='CWE-256' name='Users&apos; passwords are compromised if the storage medium is compromised' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>A compromise of the storage system medium itself (device, server or database) could
                                allow attackers full access to the data
                                stored, including authentication credentials such as passwords.
                            </desc>
              <riskRating confidentiality='75' integrity='75' availability='1' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-257'>
                  <controls>
                    <control ref='CWE-256' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-256' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='general' name='General' desc='' library=''>
          <threats>
            <threat ref='IOT-INSUF-SEC' name='Exploitation of insufficient IoT Security' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;Attackers will often attempt to exploit&lt;br /&gt;
insufficient tampering protection, unprotected storages or other misconfigured features.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-254-PROD'>
                  <controls>
                    <control ref='IOT2.4.10.7' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.10.7' mitigation='100' />
              </controls>
            </threat>
          </threats>
        </usecase>
        <usecase ref='read-or-post-data' name='Read or Post data' desc='' library=''>
          <threats>
            <threat ref='open-redirect-threat' name='An attacker may successfully launch a phishing scam and steal user credentials by modifying the URL value to a malicious site' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>An http parameter may contain a URL value and could cause the web application to redirect the request to the specified URL. By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance.</desc>
              <riskRating confidentiality='50' integrity='50' availability='25' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-601'>
                  <controls>
                    <control ref='CWE-601' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-601' mitigation='100' />
              </controls>
            </threat>
            <threat ref='CAPEC-341' name='Attackers could gain access to a users&apos; browser through Cross Site Scripting attacks' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Cross Site Scripting vulnerabilities could allow attackers to gain control of
                                users'
                                browsers, which in turn would allow them to:&lt;div&gt;&lt;ol&gt;&lt;li&gt;Re-write
                                browser
                                content&lt;/li&gt;&lt;li&gt;Read the users' session cookie and thereby hijack their
                                session&lt;/li&gt;&lt;li&gt;Read
                                form data from the users' browser&lt;/li&gt;&lt;li&gt;Trick users into installing
                                malware&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
                            </desc>
              <riskRating confidentiality='50' integrity='50' availability='1' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-79'>
                  <controls>
                    <control ref='CWE-79-ENCODE' mitigation='100' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CWE-79-ENCODE' mitigation='100' />
              </controls>
            </threat>
            <threat ref='ASVS-2014-3.3' name='Attackers could gain access to an open session, if they have access to a user&apos;s browser' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>If a user steps away from their browser for a few minutes and there is an
                                opportunity for
                                an attacker to access the browser, then they could gain access to the user's logged
                                in
                                session and perform operations on their behalf.
                            </desc>
              <riskRating confidentiality='50' integrity='50' availability='1' easeOfExploitation='10' />
              <references />
              <weaknesses>
                <weakness ref='CWE-613'>
                  <controls>
                    <control ref='ASVS-2014-3.3' mitigation='30' />
                    <control ref='ASVS-2014-3.4' mitigation='30' />
                  </controls>
                </weakness>
                <weakness ref='cwe-613-logout'>
                  <controls>
                    <control ref='ASVS-3.2' mitigation='40' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='ASVS-2014-3.3' mitigation='30' />
                <control ref='ASVS-2014-3.4' mitigation='30' />
                <control ref='ASVS-3.2' mitigation='40' />
              </controls>
            </threat>
            <threat ref='CSD-CLIENT-SECRET' name='Attackers gain unauthorised access to data or services by accessing a client side secret' state='Expose' source='MANUAL' owner='admin' library=''>
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality='100' integrity='50' availability='50' easeOfExploitation='75' />
              <references />
              <weaknesses>
                <weakness ref='CWE-798, CWE-603'>
                  <controls>
                    <control ref='CS-CLIENT-SECRET' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='CS-CLIENT-SECRET' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component ref='rf-bluetooh-communication' name='RF-Bluetooth communication' desc='' groupName='' tags='' position='13' library='' diagramPositionX='0' diagramPositionY='0' componentDefinitionRef=''>
      <weaknesses>
        <weakness ref='CWE-200' name='Information Exposure' state='0' impact='100'>
          <desc>An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.</desc>
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </weakness>
      </weaknesses>
      <controls>
        <control ref='IOT2.4.7.23' name='Protocol anonymity features are enabled in protocols (e.g., Bluetooth) to limit location tracking capabilities. ' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;Bluetooth anonymity mode, where the devices &lt;span class="caps"&gt;BDADDR&lt;/span&gt; is masked allowing use of services through access point without giving out device identity. Each time the active address is updated, it is sent to all the devices it is communicating or connected with. The use of the fixed Bluetooth hardware address is still supported in the Bluetooth anonymity mode. This is done to allow direct connections between two trusted devices.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Enhancements to Bluetooth Baseband Security' url='https://pdfs.semanticscholar.org/bbd0/33f3d9aa207fcccc43d8c4954ac58bba3461.pdf' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
        <control ref='IOT2.4.7.22' name='Where RF communications are enabled (e.g., ZigBee, etc.) antenna power is configured to limit ability of mapping assets to limit attacks such as WAR-Driving.' platform='' cost='1' risk='0' state='Recommended' owner='' library='' source='MANUAL'>
          <desc>	&lt;p&gt;By  using low transmitted power, the  discovery probability from an attacker decreases .Higher transmitted power implies   higher   resistance   against   jamming   because   a stronger jamming signal is needed to overcome the original signal.&lt;/p&gt;</desc>
          <implementations />
          <references>
            <reference name='Wardriving Definition' url='https://techterms.com/definition/wardriving' />
          </references>
          <standards />
          <udts />
          <test expiryDate='' expiryPeriod='0'>
            <steps />
            <notes />
            <source filename='' args='' type='Manual' result='Not Tested' enabled='true' timestamp='2019-02-07T13:21:59.000'>
              <output></output>
            </source>
            <references />
            <udts />
          </test>
        </control>
      </controls>
      <usecases>
        <usecase ref='networking' name='Networking' desc='' library=''>
          <threats>
            <threat ref='CAPEC-157' name='Sniffing Attacks' state='Expose' source='MANUAL' owner='' library=''>
              <desc>	&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality='100' integrity='100' availability='100' easeOfExploitation='25' />
              <references />
              <weaknesses>
                <weakness ref='CWE-200'>
                  <controls>
                    <control ref='IOT2.4.7.22' mitigation='50' />
                    <control ref='IOT2.4.7.23' mitigation='50' />
                  </controls>
                </weakness>
              </weaknesses>
              <controls>
                <control ref='IOT2.4.7.22' mitigation='50' />
                <control ref='IOT2.4.7.23' mitigation='50' />
              </controls>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components><rules>
  <rule name='Q: IoT Application - Personal Data Stored' module='component' generatedByGui='true'>
    <condition name='Is specific component definition' type='drools-without-variable-type' field='id' value='iot-application'>
      <pattern name='Is specific component definition' pattern='ComponentDefinitionProperties(ref == "${value}");' />
    </condition>
    <action project='' value='iot-personal-data-stored_::_IoT questions_::_Will your product store Personal Data?_::_1_::_true_::_false_::_' name='Insert Question Group' type='drools-without-variable-type'>
      <pattern name='Action of insert question group' pattern='QuestionGroup group = new QuestionGroup("${value-1}","${value-2}","${value-3}", ${value-4}, "${value-7}"); group.setFlags(${value-5}, ${value-6}); insertLogical(group);' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgQXBwbGljYXRpb24gLSBQZXJzb25hbCBEYXRhIFN0b3JlZCIKbm8tbG9vcAp3aGVuCiAgICAkcHJvamVjdCA6IFByb2plY3QoKQogICAgQ29tcG9uZW50RGVmaW5pdGlvblByb3BlcnRpZXMocmVmID09ICJpb3QtYXBwbGljYXRpb24iKTsKICAgIAp0aGVuCiAgICBRdWVzdGlvbkdyb3VwIGdyb3VwID0gbmV3IFF1ZXN0aW9uR3JvdXAoImlvdC1wZXJzb25hbC1kYXRhLXN0b3JlZCIsIklvVCBxdWVzdGlvbnMiLCJXaWxsIHlvdXIgcHJvZHVjdCBzdG9yZSBQZXJzb25hbCBEYXRhPyIsIDEsICIiKTsgZ3JvdXAuc2V0RmxhZ3ModHJ1ZSwgZmFsc2UpOyBpbnNlcnRMb2dpY2FsKGdyb3VwKTsKZW5kCiAgICA=</content>
  </rule>
  <rule name='Q: IoT Application - Web UI' module='component' generatedByGui='true'>
    <condition name='Is specific component definition' type='drools-without-variable-type' field='id' value='iot-application'>
      <pattern name='Is specific component definition' pattern='ComponentDefinitionProperties(ref == "${value}");' />
    </condition>
    <action project='' value='iot-web-ui_::_IoT questions_::_Will your product have a Web User Interface?_::_1_::_true_::_false_::_' name='Insert Question Group' type='drools-without-variable-type'>
      <pattern name='Action of insert question group' pattern='QuestionGroup group = new QuestionGroup("${value-1}","${value-2}","${value-3}", ${value-4}, "${value-7}"); group.setFlags(${value-5}, ${value-6}); insertLogical(group);' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgQXBwbGljYXRpb24gLSBXZWIgVUkiCm5vLWxvb3AKd2hlbgogICAgJHByb2plY3QgOiBQcm9qZWN0KCkKICAgIENvbXBvbmVudERlZmluaXRpb25Qcm9wZXJ0aWVzKHJlZiA9PSAiaW90LWFwcGxpY2F0aW9uIik7CiAgICAKdGhlbgogICAgUXVlc3Rpb25Hcm91cCBncm91cCA9IG5ldyBRdWVzdGlvbkdyb3VwKCJpb3Qtd2ViLXVpIiwiSW9UIHF1ZXN0aW9ucyIsIldpbGwgeW91ciBwcm9kdWN0IGhhdmUgYSBXZWIgVXNlciBJbnRlcmZhY2U/IiwgMSwgIiIpOyBncm91cC5zZXRGbGFncyh0cnVlLCBmYWxzZSk7IGluc2VydExvZ2ljYWwoZ3JvdXApOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Q: IoT Application - Web UI - *' module='component' generatedByGui='true'>
    <condition name='Question Group exists' type='drools-without-variable-type' field='id' value='iot-web-ui'>
      <pattern name='Question group exists' pattern='$group : QuestionGroup(id == "${value}") @Watch(!*);' />
    </condition>
    <action project='' value='iot-web-ui-no_::_No_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <action project='' value='iot-web-ui-yes_::_Yes_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgQXBwbGljYXRpb24gLSBXZWIgVUkgLSAqIgpuby1sb29wCndoZW4KICAgICRwcm9qZWN0IDogUHJvamVjdCgpCiAgICAkZ3JvdXAgOiBRdWVzdGlvbkdyb3VwKGlkID09ICJpb3Qtd2ViLXVpIikgQFdhdGNoKCEqKTsKICAgIAp0aGVuCiAgICBpbnNlcnRMb2dpY2FsKG5ldyBRdWVzdGlvbigkZ3JvdXAsICJpb3Qtd2ViLXVpLW5vIiwgIk5vIiwgIiIpKTsKICAgIGluc2VydExvZ2ljYWwobmV3IFF1ZXN0aW9uKCRncm91cCwgImlvdC13ZWItdWkteWVzIiwgIlllcyIsICIiKSk7CmVuZAogICAg</content>
  </rule>
  <rule name='Q: IoT Mobile Application - Personal Data Stored' module='component' generatedByGui='true'>
    <condition name='Is specific component definition' type='drools-without-variable-type' field='id' value='iot-mobile-application'>
      <pattern name='Is specific component definition' pattern='ComponentDefinitionProperties(ref == "${value}");' />
    </condition>
    <action project='' value='iot-personal-data-stored_::_IoT questions_::_Will your product store Personal Data?_::_1_::_true_::_false_::_' name='Insert Question Group' type='drools-without-variable-type'>
      <pattern name='Action of insert question group' pattern='QuestionGroup group = new QuestionGroup("${value-1}","${value-2}","${value-3}", ${value-4}, "${value-7}"); group.setFlags(${value-5}, ${value-6}); insertLogical(group);' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgTW9iaWxlIEFwcGxpY2F0aW9uIC0gUGVyc29uYWwgRGF0YSBTdG9yZWQiCm5vLWxvb3AKd2hlbgogICAgJHByb2plY3QgOiBQcm9qZWN0KCkKICAgIENvbXBvbmVudERlZmluaXRpb25Qcm9wZXJ0aWVzKHJlZiA9PSAiaW90LW1vYmlsZS1hcHBsaWNhdGlvbiIpOwogICAgCnRoZW4KICAgIFF1ZXN0aW9uR3JvdXAgZ3JvdXAgPSBuZXcgUXVlc3Rpb25Hcm91cCgiaW90LXBlcnNvbmFsLWRhdGEtc3RvcmVkIiwiSW9UIHF1ZXN0aW9ucyIsIldpbGwgeW91ciBwcm9kdWN0IHN0b3JlIFBlcnNvbmFsIERhdGE/IiwgMSwgIiIpOyBncm91cC5zZXRGbGFncyh0cnVlLCBmYWxzZSk7IGluc2VydExvZ2ljYWwoZ3JvdXApOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Q: IoT Operating System - Ownership Transfered' module='component' generatedByGui='true'>
    <condition name='Is specific component definition' type='drools-without-variable-type' field='id' value='iot-operating-system'>
      <pattern name='Is specific component definition' pattern='ComponentDefinitionProperties(ref == "${value}");' />
    </condition>
    <action project='' value='iot-ownership-transfered_::_IoT questions_::_Will your product have its ownership transferred?_::_3_::_true_::_false_::_' name='Insert Question Group' type='drools-without-variable-type'>
      <pattern name='Action of insert question group' pattern='QuestionGroup group = new QuestionGroup("${value-1}","${value-2}","${value-3}", ${value-4}, "${value-7}"); group.setFlags(${value-5}, ${value-6}); insertLogical(group);' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgT3BlcmF0aW5nIFN5c3RlbSAtIE93bmVyc2hpcCBUcmFuc2ZlcmVkIgpuby1sb29wCndoZW4KICAgICRwcm9qZWN0IDogUHJvamVjdCgpCiAgICBDb21wb25lbnREZWZpbml0aW9uUHJvcGVydGllcyhyZWYgPT0gImlvdC1vcGVyYXRpbmctc3lzdGVtIik7CiAgICAKdGhlbgogICAgUXVlc3Rpb25Hcm91cCBncm91cCA9IG5ldyBRdWVzdGlvbkdyb3VwKCJpb3Qtb3duZXJzaGlwLXRyYW5zZmVyZWQiLCJJb1QgcXVlc3Rpb25zIiwiV2lsbCB5b3VyIHByb2R1Y3QgaGF2ZSBpdHMgb3duZXJzaGlwIHRyYW5zZmVycmVkPyIsIDMsICIiKTsgZ3JvdXAuc2V0RmxhZ3ModHJ1ZSwgZmFsc2UpOyBpbnNlcnRMb2dpY2FsKGdyb3VwKTsKZW5kCiAgICA=</content>
  </rule>
  <rule name='Q: IoT Operating System - Ownership Transfered - *' module='component' generatedByGui='true'>
    <condition name='Question Group exists' type='drools-without-variable-type' field='id' value='iot-ownership-transfered'>
      <pattern name='Question group exists' pattern='$group : QuestionGroup(id == "${value}") @Watch(!*);' />
    </condition>
    <action project='' value='iot-ownership-transfered-no_::_No_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <action project='' value='iot-ownership-transfered-yes_::_Yes_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgT3BlcmF0aW5nIFN5c3RlbSAtIE93bmVyc2hpcCBUcmFuc2ZlcmVkIC0gKiIKbm8tbG9vcAp3aGVuCiAgICAkcHJvamVjdCA6IFByb2plY3QoKQogICAgJGdyb3VwIDogUXVlc3Rpb25Hcm91cChpZCA9PSAiaW90LW93bmVyc2hpcC10cmFuc2ZlcmVkIikgQFdhdGNoKCEqKTsKICAgIAp0aGVuCiAgICBpbnNlcnRMb2dpY2FsKG5ldyBRdWVzdGlvbigkZ3JvdXAsICJpb3Qtb3duZXJzaGlwLXRyYW5zZmVyZWQtbm8iLCAiTm8iLCAiIikpOwogICAgaW5zZXJ0TG9naWNhbChuZXcgUXVlc3Rpb24oJGdyb3VwLCAiaW90LW93bmVyc2hpcC10cmFuc2ZlcmVkLXllcyIsICJZZXMiLCAiIikpOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Q: IoT Operating System - Personal Data Stored' module='component' generatedByGui='true'>
    <condition name='Is specific component definition' type='drools-without-variable-type' field='id' value='iot-operating-system'>
      <pattern name='Is specific component definition' pattern='ComponentDefinitionProperties(ref == "${value}");' />
    </condition>
    <action project='' value='iot-personal-data-stored_::_IoT questions_::_Will your product store Personal Data?_::_1_::_true_::_false_::_' name='Insert Question Group' type='drools-without-variable-type'>
      <pattern name='Action of insert question group' pattern='QuestionGroup group = new QuestionGroup("${value-1}","${value-2}","${value-3}", ${value-4}, "${value-7}"); group.setFlags(${value-5}, ${value-6}); insertLogical(group);' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgT3BlcmF0aW5nIFN5c3RlbSAtIFBlcnNvbmFsIERhdGEgU3RvcmVkIgpuby1sb29wCndoZW4KICAgICRwcm9qZWN0IDogUHJvamVjdCgpCiAgICBDb21wb25lbnREZWZpbml0aW9uUHJvcGVydGllcyhyZWYgPT0gImlvdC1vcGVyYXRpbmctc3lzdGVtIik7CiAgICAKdGhlbgogICAgUXVlc3Rpb25Hcm91cCBncm91cCA9IG5ldyBRdWVzdGlvbkdyb3VwKCJpb3QtcGVyc29uYWwtZGF0YS1zdG9yZWQiLCJJb1QgcXVlc3Rpb25zIiwiV2lsbCB5b3VyIHByb2R1Y3Qgc3RvcmUgUGVyc29uYWwgRGF0YT8iLCAxLCAiIik7IGdyb3VwLnNldEZsYWdzKHRydWUsIGZhbHNlKTsgaW5zZXJ0TG9naWNhbChncm91cCk7CmVuZAogICAg</content>
  </rule>
  <rule name='Q: IoT Operating System - Personal Data Stored - *' module='component' generatedByGui='true'>
    <condition name='Question Group exists' type='drools-without-variable-type' field='id' value='iot-personal-data-stored'>
      <pattern name='Question group exists' pattern='$group : QuestionGroup(id == "${value}") @Watch(!*);' />
    </condition>
    <action project='' value='iot-personal-data-stored-no_::_No_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <action project='' value='iot-personal-data-stored-yes_::_Yes_::_' name='Insert Question' type='drools-without-variable-type'>
      <pattern name='Action of insert question' pattern='insertLogical(new Question($group, "${value-1}", "${value-2}", "${value-3}"));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJROiBJb1QgT3BlcmF0aW5nIFN5c3RlbSAtIFBlcnNvbmFsIERhdGEgU3RvcmVkIC0gKiIKbm8tbG9vcAp3aGVuCiAgICAkcHJvamVjdCA6IFByb2plY3QoKQogICAgJGdyb3VwIDogUXVlc3Rpb25Hcm91cChpZCA9PSAiaW90LXBlcnNvbmFsLWRhdGEtc3RvcmVkIikgQFdhdGNoKCEqKTsKICAgIAp0aGVuCiAgICBpbnNlcnRMb2dpY2FsKG5ldyBRdWVzdGlvbigkZ3JvdXAsICJpb3QtcGVyc29uYWwtZGF0YS1zdG9yZWQtbm8iLCAiTm8iLCAiIikpOwogICAgaW5zZXJ0TG9naWNhbChuZXcgUXVlc3Rpb24oJGdyb3VwLCAiaW90LXBlcnNvbmFsLWRhdGEtc3RvcmVkLXllcyIsICJZZXMiLCAiIikpOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Risk Pattern: IoT Operating System - IoT Device Ownership Transfer' module='component' generatedByGui='true'>
    <condition name='Question is answered' type='Question' field='id' value='iot-ownership-transfered-yes'>
      <pattern name='Condition with answer' pattern='${type}(${field} == "${value}", answer == true);' />
    </condition>
    <action project='iot-security-compliance-framework' value='iot-security-compliance-framework_::_iot-device-ownership-transfer' name='Import Risk Pattern' type='drools-without-variable-type'>
      <pattern name='Action of import a risk pattern' pattern='insertLogical(ImportRiskPatternFactory.importRiskPattern("${value-1}", "${value-2}", 50));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJSaXNrIFBhdHRlcm46IElvVCBPcGVyYXRpbmcgU3lzdGVtIC0gSW9UIERldmljZSBPd25lcnNoaXAgVHJhbnNmZXIiCm5vLWxvb3AKd2hlbgogICAgJHByb2plY3QgOiBQcm9qZWN0KCkKICAgIFF1ZXN0aW9uKGlkID09ICJpb3Qtb3duZXJzaGlwLXRyYW5zZmVyZWQteWVzIiwgYW5zd2VyID09IHRydWUpOwogICAgCnRoZW4KICAgIGluc2VydExvZ2ljYWwoSW1wb3J0Umlza1BhdHRlcm5GYWN0b3J5LmltcG9ydFJpc2tQYXR0ZXJuKCJpb3Qtc2VjdXJpdHktY29tcGxpYW5jZS1mcmFtZXdvcmsiLCAiaW90LWRldmljZS1vd25lcnNoaXAtdHJhbnNmZXIiLCA1MCkpOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Risk Pattern: IoT Operating System - IoT Privacy' module='component' generatedByGui='true'>
    <condition name='Question is answered' type='Question' field='id' value='iot-personal-data-stored-yes'>
      <pattern name='Condition with answer' pattern='${type}(${field} == "${value}", answer == true);' />
    </condition>
    <action project='iot-security-compliance-framework' value='iot-security-compliance-framework_::_iot-privacy' name='Import Risk Pattern' type='drools-without-variable-type'>
      <pattern name='Action of import a risk pattern' pattern='insertLogical(ImportRiskPatternFactory.importRiskPattern("${value-1}", "${value-2}", 50));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJSaXNrIFBhdHRlcm46IElvVCBPcGVyYXRpbmcgU3lzdGVtIC0gSW9UIFByaXZhY3kiCm5vLWxvb3AKd2hlbgogICAgJHByb2plY3QgOiBQcm9qZWN0KCkKICAgIFF1ZXN0aW9uKGlkID09ICJpb3QtcGVyc29uYWwtZGF0YS1zdG9yZWQteWVzIiwgYW5zd2VyID09IHRydWUpOwogICAgCnRoZW4KICAgIGluc2VydExvZ2ljYWwoSW1wb3J0Umlza1BhdHRlcm5GYWN0b3J5LmltcG9ydFJpc2tQYXR0ZXJuKCJpb3Qtc2VjdXJpdHktY29tcGxpYW5jZS1mcmFtZXdvcmsiLCAiaW90LXByaXZhY3kiLCA1MCkpOwplbmQKICAgIA==</content>
  </rule>
  <rule name='Risk Pattern: IoT Operating System - IoT Web User Interface' module='component' generatedByGui='true'>
    <condition name='Question is answered' type='Question' field='id' value='iot-web-ui-yes'>
      <pattern name='Condition with answer' pattern='${type}(${field} == "${value}", answer == true);' />
    </condition>
    <action project='iot-security-compliance-framework' value='iot-security-compliance-framework_::_iot-web-user-interface' name='Import Risk Pattern' type='drools-without-variable-type'>
      <pattern name='Action of import a risk pattern' pattern='insertLogical(ImportRiskPatternFactory.importRiskPattern("${value-1}", "${value-2}", 50));' />
    </action>
    <content>CnBhY2thZ2UgY29tLmlyaXVzcmlzay5kcm9vbHM7CgoKaW1wb3J0IGNvbS5pcml1c3Jpc2suZHJvb2xzLm1vZGVsLio7CmltcG9ydCBjb20uaXJpdXNyaXNrLmRyb29scy5tb2RlbC5yaXNrcGF0dGVybi4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5tb2RlbC4qOwppbXBvcnQgY29tLmlyaXVzcmlzay4qOwppbXBvcnQgY29tLmlyaXVzcmlzay5mYWN0b3JpZXMuRHJvb2xzVmFsdWVDb252ZXJ0ZXI7CmltcG9ydCBjb20uaXJpdXNyaXNrLnV0aWxzLkVudGl0eVdpdGhVRFRVdGlsOwoKCmdsb2JhbCBjb20uaXJpdXNyaXNrLnNlcnZpY2VzLmRyb29scy5Ecm9vbHNTZXJ2aWNlIGRyb29sc1NlcnZpY2UKCgpydWxlICJSaXNrIFBhdHRlcm46IElvVCBPcGVyYXRpbmcgU3lzdGVtIC0gSW9UIFdlYiBVc2VyIEludGVyZmFjZSIKbm8tbG9vcAp3aGVuCiAgICAkcHJvamVjdCA6IFByb2plY3QoKQogICAgUXVlc3Rpb24oaWQgPT0gImlvdC13ZWItdWkteWVzIiwgYW5zd2VyID09IHRydWUpOwogICAgCnRoZW4KICAgIGluc2VydExvZ2ljYWwoSW1wb3J0Umlza1BhdHRlcm5GYWN0b3J5LmltcG9ydFJpc2tQYXR0ZXJuKCJpb3Qtc2VjdXJpdHktY29tcGxpYW5jZS1mcmFtZXdvcmsiLCAiaW90LXdlYi11c2VyLWludGVyZmFjZSIsIDUwKSk7CmVuZAogICAg</content>
  </rule>
</rules>
</project>